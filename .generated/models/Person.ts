/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Person` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model Person
 *
 */
export type PersonModel =
  runtime.Types.Result.DefaultSelection<Prisma.$PersonPayload>

export type AggregatePerson = {
  _count: PersonCountAggregateOutputType | null
  _min: PersonMinAggregateOutputType | null
  _max: PersonMaxAggregateOutputType | null
}

export type PersonMinAggregateOutputType = {
  id: string | null
  email: string | null
  name: string | null
  role: string | null
  status: string | null
  birthday: Date | null
  avatar: string | null
  employeeType: $Enums.EmployeeType | null
  organizationId: string | null
  teamId: string | null
  managerId: string | null
  jobRoleId: string | null
  startedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PersonMaxAggregateOutputType = {
  id: string | null
  email: string | null
  name: string | null
  role: string | null
  status: string | null
  birthday: Date | null
  avatar: string | null
  employeeType: $Enums.EmployeeType | null
  organizationId: string | null
  teamId: string | null
  managerId: string | null
  jobRoleId: string | null
  startedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PersonCountAggregateOutputType = {
  id: number
  email: number
  name: number
  role: number
  status: number
  birthday: number
  avatar: number
  employeeType: number
  organizationId: number
  teamId: number
  managerId: number
  jobRoleId: number
  startedAt: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type PersonMinAggregateInputType = {
  id?: true
  email?: true
  name?: true
  role?: true
  status?: true
  birthday?: true
  avatar?: true
  employeeType?: true
  organizationId?: true
  teamId?: true
  managerId?: true
  jobRoleId?: true
  startedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type PersonMaxAggregateInputType = {
  id?: true
  email?: true
  name?: true
  role?: true
  status?: true
  birthday?: true
  avatar?: true
  employeeType?: true
  organizationId?: true
  teamId?: true
  managerId?: true
  jobRoleId?: true
  startedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type PersonCountAggregateInputType = {
  id?: true
  email?: true
  name?: true
  role?: true
  status?: true
  birthday?: true
  avatar?: true
  employeeType?: true
  organizationId?: true
  teamId?: true
  managerId?: true
  jobRoleId?: true
  startedAt?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type PersonAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Person to aggregate.
   */
  where?: Prisma.PersonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of People to fetch.
   */
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.PersonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` People from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` People.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned People
   **/
  _count?: true | PersonCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: PersonMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: PersonMaxAggregateInputType
}

export type GetPersonAggregateType<T extends PersonAggregateArgs> = {
  [P in keyof T & keyof AggregatePerson]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePerson[P]>
    : Prisma.GetScalarType<T[P], AggregatePerson[P]>
}

export type PersonGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PersonWhereInput
  orderBy?:
    | Prisma.PersonOrderByWithAggregationInput
    | Prisma.PersonOrderByWithAggregationInput[]
  by: Prisma.PersonScalarFieldEnum[] | Prisma.PersonScalarFieldEnum
  having?: Prisma.PersonScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PersonCountAggregateInputType | true
  _min?: PersonMinAggregateInputType
  _max?: PersonMaxAggregateInputType
}

export type PersonGroupByOutputType = {
  id: string
  email: string | null
  name: string
  role: string | null
  status: string
  birthday: Date | null
  avatar: string | null
  employeeType: $Enums.EmployeeType | null
  organizationId: string
  teamId: string | null
  managerId: string | null
  jobRoleId: string | null
  startedAt: Date | null
  createdAt: Date
  updatedAt: Date
  _count: PersonCountAggregateOutputType | null
  _min: PersonMinAggregateOutputType | null
  _max: PersonMaxAggregateOutputType | null
}

type GetPersonGroupByPayload<T extends PersonGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<PersonGroupByOutputType, T['by']> & {
        [P in keyof T & keyof PersonGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PersonGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PersonGroupByOutputType[P]>
      }
    >
  >

export type PersonWhereInput = {
  AND?: Prisma.PersonWhereInput | Prisma.PersonWhereInput[]
  OR?: Prisma.PersonWhereInput[]
  NOT?: Prisma.PersonWhereInput | Prisma.PersonWhereInput[]
  id?: Prisma.StringFilter<'Person'> | string
  email?: Prisma.StringNullableFilter<'Person'> | string | null
  name?: Prisma.StringFilter<'Person'> | string
  role?: Prisma.StringNullableFilter<'Person'> | string | null
  status?: Prisma.StringFilter<'Person'> | string
  birthday?: Prisma.DateTimeNullableFilter<'Person'> | Date | string | null
  avatar?: Prisma.StringNullableFilter<'Person'> | string | null
  employeeType?:
    | Prisma.EnumEmployeeTypeNullableFilter<'Person'>
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFilter<'Person'> | string
  teamId?: Prisma.StringNullableFilter<'Person'> | string | null
  managerId?: Prisma.StringNullableFilter<'Person'> | string | null
  jobRoleId?: Prisma.StringNullableFilter<'Person'> | string | null
  startedAt?: Prisma.DateTimeNullableFilter<'Person'> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<'Person'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Person'> | Date | string
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  team?: Prisma.XOR<
    Prisma.TeamNullableScalarRelationFilter,
    Prisma.TeamWhereInput
  > | null
  manager?: Prisma.XOR<
    Prisma.PersonNullableScalarRelationFilter,
    Prisma.PersonWhereInput
  > | null
  reports?: Prisma.PersonListRelationFilter
  jobRole?: Prisma.XOR<
    Prisma.JobRoleNullableScalarRelationFilter,
    Prisma.JobRoleWhereInput
  > | null
  tasks?: Prisma.TaskListRelationFilter
  oneOnOnes?: Prisma.OneOnOneListRelationFilter
  oneOnOnesAsManager?: Prisma.OneOnOneListRelationFilter
  idps?: Prisma.IDPListRelationFilter
  feedback?: Prisma.FeedbackListRelationFilter
  feedbackFrom?: Prisma.FeedbackListRelationFilter
  initiativeOwners?: Prisma.InitiativeOwnerListRelationFilter
  checkIns?: Prisma.CheckInListRelationFilter
  events?: Prisma.EventListRelationFilter
  user?: Prisma.XOR<
    Prisma.UserNullableScalarRelationFilter,
    Prisma.UserWhereInput
  > | null
  jiraAccount?: Prisma.XOR<
    Prisma.PersonJiraAccountNullableScalarRelationFilter,
    Prisma.PersonJiraAccountWhereInput
  > | null
  githubAccount?: Prisma.XOR<
    Prisma.PersonGithubAccountNullableScalarRelationFilter,
    Prisma.PersonGithubAccountWhereInput
  > | null
  feedbackCampaigns?: Prisma.FeedbackCampaignListRelationFilter
  ownedMeetings?: Prisma.MeetingListRelationFilter
  meetingParticipants?: Prisma.MeetingParticipantListRelationFilter
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantListRelationFilter
  synopses?: Prisma.PersonSynopsisListRelationFilter
}

export type PersonOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  role?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  birthday?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  employeeType?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  managerId?: Prisma.SortOrderInput | Prisma.SortOrder
  jobRoleId?: Prisma.SortOrderInput | Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organization?: Prisma.OrganizationOrderByWithRelationInput
  team?: Prisma.TeamOrderByWithRelationInput
  manager?: Prisma.PersonOrderByWithRelationInput
  reports?: Prisma.PersonOrderByRelationAggregateInput
  jobRole?: Prisma.JobRoleOrderByWithRelationInput
  tasks?: Prisma.TaskOrderByRelationAggregateInput
  oneOnOnes?: Prisma.OneOnOneOrderByRelationAggregateInput
  oneOnOnesAsManager?: Prisma.OneOnOneOrderByRelationAggregateInput
  idps?: Prisma.IDPOrderByRelationAggregateInput
  feedback?: Prisma.FeedbackOrderByRelationAggregateInput
  feedbackFrom?: Prisma.FeedbackOrderByRelationAggregateInput
  initiativeOwners?: Prisma.InitiativeOwnerOrderByRelationAggregateInput
  checkIns?: Prisma.CheckInOrderByRelationAggregateInput
  events?: Prisma.EventOrderByRelationAggregateInput
  user?: Prisma.UserOrderByWithRelationInput
  jiraAccount?: Prisma.PersonJiraAccountOrderByWithRelationInput
  githubAccount?: Prisma.PersonGithubAccountOrderByWithRelationInput
  feedbackCampaigns?: Prisma.FeedbackCampaignOrderByRelationAggregateInput
  ownedMeetings?: Prisma.MeetingOrderByRelationAggregateInput
  meetingParticipants?: Prisma.MeetingParticipantOrderByRelationAggregateInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantOrderByRelationAggregateInput
  synopses?: Prisma.PersonSynopsisOrderByRelationAggregateInput
}

export type PersonWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    AND?: Prisma.PersonWhereInput | Prisma.PersonWhereInput[]
    OR?: Prisma.PersonWhereInput[]
    NOT?: Prisma.PersonWhereInput | Prisma.PersonWhereInput[]
    email?: Prisma.StringNullableFilter<'Person'> | string | null
    name?: Prisma.StringFilter<'Person'> | string
    role?: Prisma.StringNullableFilter<'Person'> | string | null
    status?: Prisma.StringFilter<'Person'> | string
    birthday?: Prisma.DateTimeNullableFilter<'Person'> | Date | string | null
    avatar?: Prisma.StringNullableFilter<'Person'> | string | null
    employeeType?:
      | Prisma.EnumEmployeeTypeNullableFilter<'Person'>
      | $Enums.EmployeeType
      | null
    organizationId?: Prisma.StringFilter<'Person'> | string
    teamId?: Prisma.StringNullableFilter<'Person'> | string | null
    managerId?: Prisma.StringNullableFilter<'Person'> | string | null
    jobRoleId?: Prisma.StringNullableFilter<'Person'> | string | null
    startedAt?: Prisma.DateTimeNullableFilter<'Person'> | Date | string | null
    createdAt?: Prisma.DateTimeFilter<'Person'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'Person'> | Date | string
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    team?: Prisma.XOR<
      Prisma.TeamNullableScalarRelationFilter,
      Prisma.TeamWhereInput
    > | null
    manager?: Prisma.XOR<
      Prisma.PersonNullableScalarRelationFilter,
      Prisma.PersonWhereInput
    > | null
    reports?: Prisma.PersonListRelationFilter
    jobRole?: Prisma.XOR<
      Prisma.JobRoleNullableScalarRelationFilter,
      Prisma.JobRoleWhereInput
    > | null
    tasks?: Prisma.TaskListRelationFilter
    oneOnOnes?: Prisma.OneOnOneListRelationFilter
    oneOnOnesAsManager?: Prisma.OneOnOneListRelationFilter
    idps?: Prisma.IDPListRelationFilter
    feedback?: Prisma.FeedbackListRelationFilter
    feedbackFrom?: Prisma.FeedbackListRelationFilter
    initiativeOwners?: Prisma.InitiativeOwnerListRelationFilter
    checkIns?: Prisma.CheckInListRelationFilter
    events?: Prisma.EventListRelationFilter
    user?: Prisma.XOR<
      Prisma.UserNullableScalarRelationFilter,
      Prisma.UserWhereInput
    > | null
    jiraAccount?: Prisma.XOR<
      Prisma.PersonJiraAccountNullableScalarRelationFilter,
      Prisma.PersonJiraAccountWhereInput
    > | null
    githubAccount?: Prisma.XOR<
      Prisma.PersonGithubAccountNullableScalarRelationFilter,
      Prisma.PersonGithubAccountWhereInput
    > | null
    feedbackCampaigns?: Prisma.FeedbackCampaignListRelationFilter
    ownedMeetings?: Prisma.MeetingListRelationFilter
    meetingParticipants?: Prisma.MeetingParticipantListRelationFilter
    meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantListRelationFilter
    synopses?: Prisma.PersonSynopsisListRelationFilter
  },
  'id'
>

export type PersonOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  role?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  birthday?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  employeeType?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  managerId?: Prisma.SortOrderInput | Prisma.SortOrder
  jobRoleId?: Prisma.SortOrderInput | Prisma.SortOrder
  startedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.PersonCountOrderByAggregateInput
  _max?: Prisma.PersonMaxOrderByAggregateInput
  _min?: Prisma.PersonMinOrderByAggregateInput
}

export type PersonScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.PersonScalarWhereWithAggregatesInput
    | Prisma.PersonScalarWhereWithAggregatesInput[]
  OR?: Prisma.PersonScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.PersonScalarWhereWithAggregatesInput
    | Prisma.PersonScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'Person'> | string
  email?: Prisma.StringNullableWithAggregatesFilter<'Person'> | string | null
  name?: Prisma.StringWithAggregatesFilter<'Person'> | string
  role?: Prisma.StringNullableWithAggregatesFilter<'Person'> | string | null
  status?: Prisma.StringWithAggregatesFilter<'Person'> | string
  birthday?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'Person'>
    | Date
    | string
    | null
  avatar?: Prisma.StringNullableWithAggregatesFilter<'Person'> | string | null
  employeeType?:
    | Prisma.EnumEmployeeTypeNullableWithAggregatesFilter<'Person'>
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringWithAggregatesFilter<'Person'> | string
  teamId?: Prisma.StringNullableWithAggregatesFilter<'Person'> | string | null
  managerId?:
    | Prisma.StringNullableWithAggregatesFilter<'Person'>
    | string
    | null
  jobRoleId?:
    | Prisma.StringNullableWithAggregatesFilter<'Person'>
    | string
    | null
  startedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'Person'>
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'Person'> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'Person'> | Date | string
}

export type PersonCreateInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateManyInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PersonUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PersonUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PersonListRelationFilter = {
  every?: Prisma.PersonWhereInput
  some?: Prisma.PersonWhereInput
  none?: Prisma.PersonWhereInput
}

export type PersonOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PersonNullableScalarRelationFilter = {
  is?: Prisma.PersonWhereInput | null
  isNot?: Prisma.PersonWhereInput | null
}

export type PersonCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  role?: Prisma.SortOrder
  status?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  employeeType?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  managerId?: Prisma.SortOrder
  jobRoleId?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PersonMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  role?: Prisma.SortOrder
  status?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  employeeType?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  managerId?: Prisma.SortOrder
  jobRoleId?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PersonMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  name?: Prisma.SortOrder
  role?: Prisma.SortOrder
  status?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  employeeType?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  managerId?: Prisma.SortOrder
  jobRoleId?: Prisma.SortOrder
  startedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PersonScalarRelationFilter = {
  is?: Prisma.PersonWhereInput
  isNot?: Prisma.PersonWhereInput
}

export type PersonCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutOrganizationInput,
        Prisma.PersonUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.PersonCreateWithoutOrganizationInput[]
    | Prisma.PersonUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.PersonCreateManyOrganizationInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutOrganizationInput,
        Prisma.PersonUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.PersonCreateWithoutOrganizationInput[]
    | Prisma.PersonUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.PersonCreateManyOrganizationInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutOrganizationInput,
        Prisma.PersonUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.PersonCreateWithoutOrganizationInput[]
    | Prisma.PersonUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.PersonCreateManyOrganizationInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.PersonUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutOrganizationInput,
        Prisma.PersonUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.PersonCreateWithoutOrganizationInput[]
    | Prisma.PersonUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput
    | Prisma.PersonCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.PersonCreateManyOrganizationInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.PersonUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutUserInput,
    Prisma.PersonUncheckedCreateWithoutUserInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutUserInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutUserInput,
    Prisma.PersonUncheckedCreateWithoutUserInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutUserInput
  upsert?: Prisma.PersonUpsertWithoutUserInput
  disconnect?: Prisma.PersonWhereInput | boolean
  delete?: Prisma.PersonWhereInput | boolean
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutUserInput,
      Prisma.PersonUpdateWithoutUserInput
    >,
    Prisma.PersonUncheckedUpdateWithoutUserInput
  >
}

export type PersonCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutTeamInput,
        Prisma.PersonUncheckedCreateWithoutTeamInput
      >
    | Prisma.PersonCreateWithoutTeamInput[]
    | Prisma.PersonUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutTeamInput
    | Prisma.PersonCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.PersonCreateManyTeamInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutTeamInput,
        Prisma.PersonUncheckedCreateWithoutTeamInput
      >
    | Prisma.PersonCreateWithoutTeamInput[]
    | Prisma.PersonUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutTeamInput
    | Prisma.PersonCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.PersonCreateManyTeamInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutTeamInput,
        Prisma.PersonUncheckedCreateWithoutTeamInput
      >
    | Prisma.PersonCreateWithoutTeamInput[]
    | Prisma.PersonUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutTeamInput
    | Prisma.PersonCreateOrConnectWithoutTeamInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.PersonCreateManyTeamInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutTeamInput
    | Prisma.PersonUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutTeamInput,
        Prisma.PersonUncheckedCreateWithoutTeamInput
      >
    | Prisma.PersonCreateWithoutTeamInput[]
    | Prisma.PersonUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutTeamInput
    | Prisma.PersonCreateOrConnectWithoutTeamInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.PersonCreateManyTeamInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutTeamInput
    | Prisma.PersonUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonCreateNestedOneWithoutReportsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutReportsInput,
    Prisma.PersonUncheckedCreateWithoutReportsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutReportsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonCreateNestedManyWithoutManagerInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutManagerInput,
        Prisma.PersonUncheckedCreateWithoutManagerInput
      >
    | Prisma.PersonCreateWithoutManagerInput[]
    | Prisma.PersonUncheckedCreateWithoutManagerInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutManagerInput
    | Prisma.PersonCreateOrConnectWithoutManagerInput[]
  createMany?: Prisma.PersonCreateManyManagerInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUncheckedCreateNestedManyWithoutManagerInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutManagerInput,
        Prisma.PersonUncheckedCreateWithoutManagerInput
      >
    | Prisma.PersonCreateWithoutManagerInput[]
    | Prisma.PersonUncheckedCreateWithoutManagerInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutManagerInput
    | Prisma.PersonCreateOrConnectWithoutManagerInput[]
  createMany?: Prisma.PersonCreateManyManagerInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type NullableEnumEmployeeTypeFieldUpdateOperationsInput = {
  set?: $Enums.EmployeeType | null
}

export type PersonUpdateOneWithoutReportsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutReportsInput,
    Prisma.PersonUncheckedCreateWithoutReportsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutReportsInput
  upsert?: Prisma.PersonUpsertWithoutReportsInput
  disconnect?: Prisma.PersonWhereInput | boolean
  delete?: Prisma.PersonWhereInput | boolean
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutReportsInput,
      Prisma.PersonUpdateWithoutReportsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutReportsInput
  >
}

export type PersonUpdateManyWithoutManagerNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutManagerInput,
        Prisma.PersonUncheckedCreateWithoutManagerInput
      >
    | Prisma.PersonCreateWithoutManagerInput[]
    | Prisma.PersonUncheckedCreateWithoutManagerInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutManagerInput
    | Prisma.PersonCreateOrConnectWithoutManagerInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutManagerInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutManagerInput[]
  createMany?: Prisma.PersonCreateManyManagerInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutManagerInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutManagerInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutManagerInput
    | Prisma.PersonUpdateManyWithWhereWithoutManagerInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonUncheckedUpdateManyWithoutManagerNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutManagerInput,
        Prisma.PersonUncheckedCreateWithoutManagerInput
      >
    | Prisma.PersonCreateWithoutManagerInput[]
    | Prisma.PersonUncheckedCreateWithoutManagerInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutManagerInput
    | Prisma.PersonCreateOrConnectWithoutManagerInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutManagerInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutManagerInput[]
  createMany?: Prisma.PersonCreateManyManagerInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutManagerInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutManagerInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutManagerInput
    | Prisma.PersonUpdateManyWithWhereWithoutManagerInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonCreateNestedOneWithoutInitiativeOwnersInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutInitiativeOwnersInput,
    Prisma.PersonUncheckedCreateWithoutInitiativeOwnersInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutInitiativeOwnersInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutInitiativeOwnersNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutInitiativeOwnersInput,
    Prisma.PersonUncheckedCreateWithoutInitiativeOwnersInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutInitiativeOwnersInput
  upsert?: Prisma.PersonUpsertWithoutInitiativeOwnersInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutInitiativeOwnersInput,
      Prisma.PersonUpdateWithoutInitiativeOwnersInput
    >,
    Prisma.PersonUncheckedUpdateWithoutInitiativeOwnersInput
  >
}

export type PersonCreateNestedOneWithoutTasksInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutTasksInput,
    Prisma.PersonUncheckedCreateWithoutTasksInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutTasksInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneWithoutTasksNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutTasksInput,
    Prisma.PersonUncheckedCreateWithoutTasksInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutTasksInput
  upsert?: Prisma.PersonUpsertWithoutTasksInput
  disconnect?: Prisma.PersonWhereInput | boolean
  delete?: Prisma.PersonWhereInput | boolean
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutTasksInput,
      Prisma.PersonUpdateWithoutTasksInput
    >,
    Prisma.PersonUncheckedUpdateWithoutTasksInput
  >
}

export type PersonCreateNestedOneWithoutCheckInsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutCheckInsInput,
    Prisma.PersonUncheckedCreateWithoutCheckInsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutCheckInsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutCheckInsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutCheckInsInput,
    Prisma.PersonUncheckedCreateWithoutCheckInsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutCheckInsInput
  upsert?: Prisma.PersonUpsertWithoutCheckInsInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutCheckInsInput,
      Prisma.PersonUpdateWithoutCheckInsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutCheckInsInput
  >
}

export type PersonCreateNestedOneWithoutOneOnOnesAsManagerInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesAsManagerInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesAsManagerInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutOneOnOnesAsManagerInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonCreateNestedOneWithoutOneOnOnesInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutOneOnOnesInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutOneOnOnesAsManagerNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesAsManagerInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesAsManagerInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutOneOnOnesAsManagerInput
  upsert?: Prisma.PersonUpsertWithoutOneOnOnesAsManagerInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutOneOnOnesAsManagerInput,
      Prisma.PersonUpdateWithoutOneOnOnesAsManagerInput
    >,
    Prisma.PersonUncheckedUpdateWithoutOneOnOnesAsManagerInput
  >
}

export type PersonUpdateOneRequiredWithoutOneOnOnesNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutOneOnOnesInput
  upsert?: Prisma.PersonUpsertWithoutOneOnOnesInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutOneOnOnesInput,
      Prisma.PersonUpdateWithoutOneOnOnesInput
    >,
    Prisma.PersonUncheckedUpdateWithoutOneOnOnesInput
  >
}

export type PersonCreateNestedOneWithoutIdpsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutIdpsInput,
    Prisma.PersonUncheckedCreateWithoutIdpsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutIdpsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutIdpsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutIdpsInput,
    Prisma.PersonUncheckedCreateWithoutIdpsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutIdpsInput
  upsert?: Prisma.PersonUpsertWithoutIdpsInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutIdpsInput,
      Prisma.PersonUpdateWithoutIdpsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutIdpsInput
  >
}

export type PersonCreateNestedOneWithoutFeedbackInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutFeedbackInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonCreateNestedOneWithoutFeedbackFromInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackFromInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackFromInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutFeedbackFromInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutFeedbackNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutFeedbackInput
  upsert?: Prisma.PersonUpsertWithoutFeedbackInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutFeedbackInput,
      Prisma.PersonUpdateWithoutFeedbackInput
    >,
    Prisma.PersonUncheckedUpdateWithoutFeedbackInput
  >
}

export type PersonUpdateOneRequiredWithoutFeedbackFromNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackFromInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackFromInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutFeedbackFromInput
  upsert?: Prisma.PersonUpsertWithoutFeedbackFromInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutFeedbackFromInput,
      Prisma.PersonUpdateWithoutFeedbackFromInput
    >,
    Prisma.PersonUncheckedUpdateWithoutFeedbackFromInput
  >
}

export type PersonCreateNestedOneWithoutEventsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutEventsInput,
    Prisma.PersonUncheckedCreateWithoutEventsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutEventsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneWithoutEventsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutEventsInput,
    Prisma.PersonUncheckedCreateWithoutEventsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutEventsInput
  upsert?: Prisma.PersonUpsertWithoutEventsInput
  disconnect?: Prisma.PersonWhereInput | boolean
  delete?: Prisma.PersonWhereInput | boolean
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutEventsInput,
      Prisma.PersonUpdateWithoutEventsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutEventsInput
  >
}

export type PersonCreateNestedOneWithoutJiraAccountInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutJiraAccountInput,
    Prisma.PersonUncheckedCreateWithoutJiraAccountInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutJiraAccountInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutJiraAccountNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutJiraAccountInput,
    Prisma.PersonUncheckedCreateWithoutJiraAccountInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutJiraAccountInput
  upsert?: Prisma.PersonUpsertWithoutJiraAccountInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutJiraAccountInput,
      Prisma.PersonUpdateWithoutJiraAccountInput
    >,
    Prisma.PersonUncheckedUpdateWithoutJiraAccountInput
  >
}

export type PersonCreateNestedOneWithoutGithubAccountInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutGithubAccountInput,
    Prisma.PersonUncheckedCreateWithoutGithubAccountInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutGithubAccountInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutGithubAccountNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutGithubAccountInput,
    Prisma.PersonUncheckedCreateWithoutGithubAccountInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutGithubAccountInput
  upsert?: Prisma.PersonUpsertWithoutGithubAccountInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutGithubAccountInput,
      Prisma.PersonUpdateWithoutGithubAccountInput
    >,
    Prisma.PersonUncheckedUpdateWithoutGithubAccountInput
  >
}

export type PersonCreateNestedOneWithoutFeedbackCampaignsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackCampaignsInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackCampaignsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutFeedbackCampaignsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutFeedbackCampaignsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackCampaignsInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackCampaignsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutFeedbackCampaignsInput
  upsert?: Prisma.PersonUpsertWithoutFeedbackCampaignsInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutFeedbackCampaignsInput,
      Prisma.PersonUpdateWithoutFeedbackCampaignsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutFeedbackCampaignsInput
  >
}

export type PersonCreateNestedOneWithoutOwnedMeetingsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutOwnedMeetingsInput,
    Prisma.PersonUncheckedCreateWithoutOwnedMeetingsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutOwnedMeetingsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneWithoutOwnedMeetingsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutOwnedMeetingsInput,
    Prisma.PersonUncheckedCreateWithoutOwnedMeetingsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutOwnedMeetingsInput
  upsert?: Prisma.PersonUpsertWithoutOwnedMeetingsInput
  disconnect?: Prisma.PersonWhereInput | boolean
  delete?: Prisma.PersonWhereInput | boolean
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutOwnedMeetingsInput,
      Prisma.PersonUpdateWithoutOwnedMeetingsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutOwnedMeetingsInput
  >
}

export type PersonCreateNestedOneWithoutMeetingParticipantsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingParticipantsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutMeetingParticipantsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutMeetingParticipantsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingParticipantsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutMeetingParticipantsInput
  upsert?: Prisma.PersonUpsertWithoutMeetingParticipantsInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutMeetingParticipantsInput,
      Prisma.PersonUpdateWithoutMeetingParticipantsInput
    >,
    Prisma.PersonUncheckedUpdateWithoutMeetingParticipantsInput
  >
}

export type PersonCreateNestedOneWithoutMeetingInstanceParticipantsInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingInstanceParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingInstanceParticipantsInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutMeetingInstanceParticipantsInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutMeetingInstanceParticipantsNestedInput =
  {
    create?: Prisma.XOR<
      Prisma.PersonCreateWithoutMeetingInstanceParticipantsInput,
      Prisma.PersonUncheckedCreateWithoutMeetingInstanceParticipantsInput
    >
    connectOrCreate?: Prisma.PersonCreateOrConnectWithoutMeetingInstanceParticipantsInput
    upsert?: Prisma.PersonUpsertWithoutMeetingInstanceParticipantsInput
    connect?: Prisma.PersonWhereUniqueInput
    update?: Prisma.XOR<
      Prisma.XOR<
        Prisma.PersonUpdateToOneWithWhereWithoutMeetingInstanceParticipantsInput,
        Prisma.PersonUpdateWithoutMeetingInstanceParticipantsInput
      >,
      Prisma.PersonUncheckedUpdateWithoutMeetingInstanceParticipantsInput
    >
  }

export type PersonCreateNestedOneWithoutSynopsesInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutSynopsesInput,
    Prisma.PersonUncheckedCreateWithoutSynopsesInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutSynopsesInput
  connect?: Prisma.PersonWhereUniqueInput
}

export type PersonUpdateOneRequiredWithoutSynopsesNestedInput = {
  create?: Prisma.XOR<
    Prisma.PersonCreateWithoutSynopsesInput,
    Prisma.PersonUncheckedCreateWithoutSynopsesInput
  >
  connectOrCreate?: Prisma.PersonCreateOrConnectWithoutSynopsesInput
  upsert?: Prisma.PersonUpsertWithoutSynopsesInput
  connect?: Prisma.PersonWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PersonUpdateToOneWithWhereWithoutSynopsesInput,
      Prisma.PersonUpdateWithoutSynopsesInput
    >,
    Prisma.PersonUncheckedUpdateWithoutSynopsesInput
  >
}

export type PersonCreateNestedManyWithoutJobRoleInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutJobRoleInput,
        Prisma.PersonUncheckedCreateWithoutJobRoleInput
      >
    | Prisma.PersonCreateWithoutJobRoleInput[]
    | Prisma.PersonUncheckedCreateWithoutJobRoleInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput[]
  createMany?: Prisma.PersonCreateManyJobRoleInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUncheckedCreateNestedManyWithoutJobRoleInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutJobRoleInput,
        Prisma.PersonUncheckedCreateWithoutJobRoleInput
      >
    | Prisma.PersonCreateWithoutJobRoleInput[]
    | Prisma.PersonUncheckedCreateWithoutJobRoleInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput[]
  createMany?: Prisma.PersonCreateManyJobRoleInputEnvelope
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
}

export type PersonUpdateManyWithoutJobRoleNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutJobRoleInput,
        Prisma.PersonUncheckedCreateWithoutJobRoleInput
      >
    | Prisma.PersonCreateWithoutJobRoleInput[]
    | Prisma.PersonUncheckedCreateWithoutJobRoleInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutJobRoleInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutJobRoleInput[]
  createMany?: Prisma.PersonCreateManyJobRoleInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutJobRoleInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutJobRoleInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutJobRoleInput
    | Prisma.PersonUpdateManyWithWhereWithoutJobRoleInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonUncheckedUpdateManyWithoutJobRoleNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PersonCreateWithoutJobRoleInput,
        Prisma.PersonUncheckedCreateWithoutJobRoleInput
      >
    | Prisma.PersonCreateWithoutJobRoleInput[]
    | Prisma.PersonUncheckedCreateWithoutJobRoleInput[]
  connectOrCreate?:
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput
    | Prisma.PersonCreateOrConnectWithoutJobRoleInput[]
  upsert?:
    | Prisma.PersonUpsertWithWhereUniqueWithoutJobRoleInput
    | Prisma.PersonUpsertWithWhereUniqueWithoutJobRoleInput[]
  createMany?: Prisma.PersonCreateManyJobRoleInputEnvelope
  set?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  disconnect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  delete?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  connect?: Prisma.PersonWhereUniqueInput | Prisma.PersonWhereUniqueInput[]
  update?:
    | Prisma.PersonUpdateWithWhereUniqueWithoutJobRoleInput
    | Prisma.PersonUpdateWithWhereUniqueWithoutJobRoleInput[]
  updateMany?:
    | Prisma.PersonUpdateManyWithWhereWithoutJobRoleInput
    | Prisma.PersonUpdateManyWithWhereWithoutJobRoleInput[]
  deleteMany?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
}

export type PersonCreateWithoutOrganizationInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutOrganizationInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOrganizationInput,
    Prisma.PersonUncheckedCreateWithoutOrganizationInput
  >
}

export type PersonCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.PersonCreateManyOrganizationInput
    | Prisma.PersonCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type PersonUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.PersonWhereUniqueInput
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutOrganizationInput,
    Prisma.PersonUncheckedUpdateWithoutOrganizationInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOrganizationInput,
    Prisma.PersonUncheckedCreateWithoutOrganizationInput
  >
}

export type PersonUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.PersonWhereUniqueInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutOrganizationInput,
    Prisma.PersonUncheckedUpdateWithoutOrganizationInput
  >
}

export type PersonUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.PersonScalarWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateManyMutationInput,
    Prisma.PersonUncheckedUpdateManyWithoutOrganizationInput
  >
}

export type PersonScalarWhereInput = {
  AND?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
  OR?: Prisma.PersonScalarWhereInput[]
  NOT?: Prisma.PersonScalarWhereInput | Prisma.PersonScalarWhereInput[]
  id?: Prisma.StringFilter<'Person'> | string
  email?: Prisma.StringNullableFilter<'Person'> | string | null
  name?: Prisma.StringFilter<'Person'> | string
  role?: Prisma.StringNullableFilter<'Person'> | string | null
  status?: Prisma.StringFilter<'Person'> | string
  birthday?: Prisma.DateTimeNullableFilter<'Person'> | Date | string | null
  avatar?: Prisma.StringNullableFilter<'Person'> | string | null
  employeeType?:
    | Prisma.EnumEmployeeTypeNullableFilter<'Person'>
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFilter<'Person'> | string
  teamId?: Prisma.StringNullableFilter<'Person'> | string | null
  managerId?: Prisma.StringNullableFilter<'Person'> | string | null
  jobRoleId?: Prisma.StringNullableFilter<'Person'> | string | null
  startedAt?: Prisma.DateTimeNullableFilter<'Person'> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<'Person'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Person'> | Date | string
}

export type PersonCreateWithoutUserInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutUserInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutUserInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutUserInput,
    Prisma.PersonUncheckedCreateWithoutUserInput
  >
}

export type PersonUpsertWithoutUserInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutUserInput,
    Prisma.PersonUncheckedUpdateWithoutUserInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutUserInput,
    Prisma.PersonUncheckedCreateWithoutUserInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutUserInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutUserInput,
    Prisma.PersonUncheckedUpdateWithoutUserInput
  >
}

export type PersonUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutTeamInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutTeamInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutTeamInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutTeamInput,
    Prisma.PersonUncheckedCreateWithoutTeamInput
  >
}

export type PersonCreateManyTeamInputEnvelope = {
  data: Prisma.PersonCreateManyTeamInput | Prisma.PersonCreateManyTeamInput[]
  skipDuplicates?: boolean
}

export type PersonUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.PersonWhereUniqueInput
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutTeamInput,
    Prisma.PersonUncheckedUpdateWithoutTeamInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutTeamInput,
    Prisma.PersonUncheckedCreateWithoutTeamInput
  >
}

export type PersonUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.PersonWhereUniqueInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutTeamInput,
    Prisma.PersonUncheckedUpdateWithoutTeamInput
  >
}

export type PersonUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.PersonScalarWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateManyMutationInput,
    Prisma.PersonUncheckedUpdateManyWithoutTeamInput
  >
}

export type PersonCreateWithoutReportsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutReportsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutReportsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutReportsInput,
    Prisma.PersonUncheckedCreateWithoutReportsInput
  >
}

export type PersonCreateWithoutManagerInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutManagerInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutManagerInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutManagerInput,
    Prisma.PersonUncheckedCreateWithoutManagerInput
  >
}

export type PersonCreateManyManagerInputEnvelope = {
  data:
    | Prisma.PersonCreateManyManagerInput
    | Prisma.PersonCreateManyManagerInput[]
  skipDuplicates?: boolean
}

export type PersonUpsertWithoutReportsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutReportsInput,
    Prisma.PersonUncheckedUpdateWithoutReportsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutReportsInput,
    Prisma.PersonUncheckedCreateWithoutReportsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutReportsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutReportsInput,
    Prisma.PersonUncheckedUpdateWithoutReportsInput
  >
}

export type PersonUpdateWithoutReportsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutReportsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUpsertWithWhereUniqueWithoutManagerInput = {
  where: Prisma.PersonWhereUniqueInput
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutManagerInput,
    Prisma.PersonUncheckedUpdateWithoutManagerInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutManagerInput,
    Prisma.PersonUncheckedCreateWithoutManagerInput
  >
}

export type PersonUpdateWithWhereUniqueWithoutManagerInput = {
  where: Prisma.PersonWhereUniqueInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutManagerInput,
    Prisma.PersonUncheckedUpdateWithoutManagerInput
  >
}

export type PersonUpdateManyWithWhereWithoutManagerInput = {
  where: Prisma.PersonScalarWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateManyMutationInput,
    Prisma.PersonUncheckedUpdateManyWithoutManagerInput
  >
}

export type PersonCreateWithoutInitiativeOwnersInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutInitiativeOwnersInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutInitiativeOwnersInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutInitiativeOwnersInput,
    Prisma.PersonUncheckedCreateWithoutInitiativeOwnersInput
  >
}

export type PersonUpsertWithoutInitiativeOwnersInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutInitiativeOwnersInput,
    Prisma.PersonUncheckedUpdateWithoutInitiativeOwnersInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutInitiativeOwnersInput,
    Prisma.PersonUncheckedCreateWithoutInitiativeOwnersInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutInitiativeOwnersInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutInitiativeOwnersInput,
    Prisma.PersonUncheckedUpdateWithoutInitiativeOwnersInput
  >
}

export type PersonUpdateWithoutInitiativeOwnersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutInitiativeOwnersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutTasksInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutTasksInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutTasksInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutTasksInput,
    Prisma.PersonUncheckedCreateWithoutTasksInput
  >
}

export type PersonUpsertWithoutTasksInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutTasksInput,
    Prisma.PersonUncheckedUpdateWithoutTasksInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutTasksInput,
    Prisma.PersonUncheckedCreateWithoutTasksInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutTasksInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutTasksInput,
    Prisma.PersonUncheckedUpdateWithoutTasksInput
  >
}

export type PersonUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutCheckInsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutCheckInsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutCheckInsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutCheckInsInput,
    Prisma.PersonUncheckedCreateWithoutCheckInsInput
  >
}

export type PersonUpsertWithoutCheckInsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutCheckInsInput,
    Prisma.PersonUncheckedUpdateWithoutCheckInsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutCheckInsInput,
    Prisma.PersonUncheckedCreateWithoutCheckInsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutCheckInsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutCheckInsInput,
    Prisma.PersonUncheckedUpdateWithoutCheckInsInput
  >
}

export type PersonUpdateWithoutCheckInsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutCheckInsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutOneOnOnesAsManagerInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutOneOnOnesAsManagerInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutOneOnOnesAsManagerInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesAsManagerInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesAsManagerInput
  >
}

export type PersonCreateWithoutOneOnOnesInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutOneOnOnesInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutOneOnOnesInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesInput
  >
}

export type PersonUpsertWithoutOneOnOnesAsManagerInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutOneOnOnesAsManagerInput,
    Prisma.PersonUncheckedUpdateWithoutOneOnOnesAsManagerInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesAsManagerInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesAsManagerInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutOneOnOnesAsManagerInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutOneOnOnesAsManagerInput,
    Prisma.PersonUncheckedUpdateWithoutOneOnOnesAsManagerInput
  >
}

export type PersonUpdateWithoutOneOnOnesAsManagerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutOneOnOnesAsManagerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUpsertWithoutOneOnOnesInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutOneOnOnesInput,
    Prisma.PersonUncheckedUpdateWithoutOneOnOnesInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOneOnOnesInput,
    Prisma.PersonUncheckedCreateWithoutOneOnOnesInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutOneOnOnesInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutOneOnOnesInput,
    Prisma.PersonUncheckedUpdateWithoutOneOnOnesInput
  >
}

export type PersonUpdateWithoutOneOnOnesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutOneOnOnesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutIdpsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutIdpsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutIdpsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutIdpsInput,
    Prisma.PersonUncheckedCreateWithoutIdpsInput
  >
}

export type PersonUpsertWithoutIdpsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutIdpsInput,
    Prisma.PersonUncheckedUpdateWithoutIdpsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutIdpsInput,
    Prisma.PersonUncheckedCreateWithoutIdpsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutIdpsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutIdpsInput,
    Prisma.PersonUncheckedUpdateWithoutIdpsInput
  >
}

export type PersonUpdateWithoutIdpsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutIdpsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutFeedbackInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutFeedbackInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutFeedbackInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackInput
  >
}

export type PersonCreateWithoutFeedbackFromInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutFeedbackFromInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutFeedbackFromInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackFromInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackFromInput
  >
}

export type PersonUpsertWithoutFeedbackInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutFeedbackInput,
    Prisma.PersonUncheckedUpdateWithoutFeedbackInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutFeedbackInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutFeedbackInput,
    Prisma.PersonUncheckedUpdateWithoutFeedbackInput
  >
}

export type PersonUpdateWithoutFeedbackInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutFeedbackInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUpsertWithoutFeedbackFromInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutFeedbackFromInput,
    Prisma.PersonUncheckedUpdateWithoutFeedbackFromInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackFromInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackFromInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutFeedbackFromInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutFeedbackFromInput,
    Prisma.PersonUncheckedUpdateWithoutFeedbackFromInput
  >
}

export type PersonUpdateWithoutFeedbackFromInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutFeedbackFromInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutEventsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutEventsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutEventsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutEventsInput,
    Prisma.PersonUncheckedCreateWithoutEventsInput
  >
}

export type PersonUpsertWithoutEventsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutEventsInput,
    Prisma.PersonUncheckedUpdateWithoutEventsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutEventsInput,
    Prisma.PersonUncheckedCreateWithoutEventsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutEventsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutEventsInput,
    Prisma.PersonUncheckedUpdateWithoutEventsInput
  >
}

export type PersonUpdateWithoutEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutJiraAccountInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutJiraAccountInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutJiraAccountInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutJiraAccountInput,
    Prisma.PersonUncheckedCreateWithoutJiraAccountInput
  >
}

export type PersonUpsertWithoutJiraAccountInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutJiraAccountInput,
    Prisma.PersonUncheckedUpdateWithoutJiraAccountInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutJiraAccountInput,
    Prisma.PersonUncheckedCreateWithoutJiraAccountInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutJiraAccountInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutJiraAccountInput,
    Prisma.PersonUncheckedUpdateWithoutJiraAccountInput
  >
}

export type PersonUpdateWithoutJiraAccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutJiraAccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutGithubAccountInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutGithubAccountInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutGithubAccountInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutGithubAccountInput,
    Prisma.PersonUncheckedCreateWithoutGithubAccountInput
  >
}

export type PersonUpsertWithoutGithubAccountInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutGithubAccountInput,
    Prisma.PersonUncheckedUpdateWithoutGithubAccountInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutGithubAccountInput,
    Prisma.PersonUncheckedCreateWithoutGithubAccountInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutGithubAccountInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutGithubAccountInput,
    Prisma.PersonUncheckedUpdateWithoutGithubAccountInput
  >
}

export type PersonUpdateWithoutGithubAccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutGithubAccountInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutFeedbackCampaignsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutFeedbackCampaignsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutFeedbackCampaignsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackCampaignsInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackCampaignsInput
  >
}

export type PersonUpsertWithoutFeedbackCampaignsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutFeedbackCampaignsInput,
    Prisma.PersonUncheckedUpdateWithoutFeedbackCampaignsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutFeedbackCampaignsInput,
    Prisma.PersonUncheckedCreateWithoutFeedbackCampaignsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutFeedbackCampaignsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutFeedbackCampaignsInput,
    Prisma.PersonUncheckedUpdateWithoutFeedbackCampaignsInput
  >
}

export type PersonUpdateWithoutFeedbackCampaignsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutFeedbackCampaignsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutOwnedMeetingsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutOwnedMeetingsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutOwnedMeetingsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOwnedMeetingsInput,
    Prisma.PersonUncheckedCreateWithoutOwnedMeetingsInput
  >
}

export type PersonUpsertWithoutOwnedMeetingsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutOwnedMeetingsInput,
    Prisma.PersonUncheckedUpdateWithoutOwnedMeetingsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutOwnedMeetingsInput,
    Prisma.PersonUncheckedCreateWithoutOwnedMeetingsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutOwnedMeetingsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutOwnedMeetingsInput,
    Prisma.PersonUncheckedUpdateWithoutOwnedMeetingsInput
  >
}

export type PersonUpdateWithoutOwnedMeetingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutOwnedMeetingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutMeetingParticipantsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutMeetingParticipantsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutMeetingParticipantsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingParticipantsInput
  >
}

export type PersonUpsertWithoutMeetingParticipantsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutMeetingParticipantsInput,
    Prisma.PersonUncheckedUpdateWithoutMeetingParticipantsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingParticipantsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutMeetingParticipantsInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutMeetingParticipantsInput,
    Prisma.PersonUncheckedUpdateWithoutMeetingParticipantsInput
  >
}

export type PersonUpdateWithoutMeetingParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutMeetingParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutMeetingInstanceParticipantsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutMeetingInstanceParticipantsInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutMeetingInstanceParticipantsInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingInstanceParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingInstanceParticipantsInput
  >
}

export type PersonUpsertWithoutMeetingInstanceParticipantsInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutMeetingInstanceParticipantsInput,
    Prisma.PersonUncheckedUpdateWithoutMeetingInstanceParticipantsInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutMeetingInstanceParticipantsInput,
    Prisma.PersonUncheckedCreateWithoutMeetingInstanceParticipantsInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutMeetingInstanceParticipantsInput =
  {
    where?: Prisma.PersonWhereInput
    data: Prisma.XOR<
      Prisma.PersonUpdateWithoutMeetingInstanceParticipantsInput,
      Prisma.PersonUncheckedUpdateWithoutMeetingInstanceParticipantsInput
    >
  }

export type PersonUpdateWithoutMeetingInstanceParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutMeetingInstanceParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutSynopsesInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  jobRole?: Prisma.JobRoleCreateNestedOneWithoutPeopleInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutSynopsesInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutSynopsesInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutSynopsesInput,
    Prisma.PersonUncheckedCreateWithoutSynopsesInput
  >
}

export type PersonUpsertWithoutSynopsesInput = {
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutSynopsesInput,
    Prisma.PersonUncheckedUpdateWithoutSynopsesInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutSynopsesInput,
    Prisma.PersonUncheckedCreateWithoutSynopsesInput
  >
  where?: Prisma.PersonWhereInput
}

export type PersonUpdateToOneWithWhereWithoutSynopsesInput = {
  where?: Prisma.PersonWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutSynopsesInput,
    Prisma.PersonUncheckedUpdateWithoutSynopsesInput
  >
}

export type PersonUpdateWithoutSynopsesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutSynopsesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonCreateWithoutJobRoleInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutPeopleInput
  team?: Prisma.TeamCreateNestedOneWithoutPeopleInput
  manager?: Prisma.PersonCreateNestedOneWithoutReportsInput
  reports?: Prisma.PersonCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventCreateNestedManyWithoutActorInput
  user?: Prisma.UserCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisCreateNestedManyWithoutPersonInput
}

export type PersonUncheckedCreateWithoutJobRoleInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  reports?: Prisma.PersonUncheckedCreateNestedManyWithoutManagerInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutAssigneeInput
  oneOnOnes?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutReportInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedCreateNestedManyWithoutManagerInput
  idps?: Prisma.IDPUncheckedCreateNestedManyWithoutPersonInput
  feedback?: Prisma.FeedbackUncheckedCreateNestedManyWithoutAboutInput
  feedbackFrom?: Prisma.FeedbackUncheckedCreateNestedManyWithoutFromInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutPersonInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutCreatedByInput
  events?: Prisma.EventUncheckedCreateNestedManyWithoutActorInput
  user?: Prisma.UserUncheckedCreateNestedOneWithoutPersonInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedCreateNestedOneWithoutPersonInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedCreateNestedOneWithoutPersonInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedCreateNestedManyWithoutTargetPersonInput
  ownedMeetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOwnerInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutPersonInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedCreateNestedManyWithoutPersonInput
  synopses?: Prisma.PersonSynopsisUncheckedCreateNestedManyWithoutPersonInput
}

export type PersonCreateOrConnectWithoutJobRoleInput = {
  where: Prisma.PersonWhereUniqueInput
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutJobRoleInput,
    Prisma.PersonUncheckedCreateWithoutJobRoleInput
  >
}

export type PersonCreateManyJobRoleInputEnvelope = {
  data:
    | Prisma.PersonCreateManyJobRoleInput
    | Prisma.PersonCreateManyJobRoleInput[]
  skipDuplicates?: boolean
}

export type PersonUpsertWithWhereUniqueWithoutJobRoleInput = {
  where: Prisma.PersonWhereUniqueInput
  update: Prisma.XOR<
    Prisma.PersonUpdateWithoutJobRoleInput,
    Prisma.PersonUncheckedUpdateWithoutJobRoleInput
  >
  create: Prisma.XOR<
    Prisma.PersonCreateWithoutJobRoleInput,
    Prisma.PersonUncheckedCreateWithoutJobRoleInput
  >
}

export type PersonUpdateWithWhereUniqueWithoutJobRoleInput = {
  where: Prisma.PersonWhereUniqueInput
  data: Prisma.XOR<
    Prisma.PersonUpdateWithoutJobRoleInput,
    Prisma.PersonUncheckedUpdateWithoutJobRoleInput
  >
}

export type PersonUpdateManyWithWhereWithoutJobRoleInput = {
  where: Prisma.PersonScalarWhereInput
  data: Prisma.XOR<
    Prisma.PersonUpdateManyMutationInput,
    Prisma.PersonUncheckedUpdateManyWithoutJobRoleInput
  >
}

export type PersonCreateManyOrganizationInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  teamId?: string | null
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PersonUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PersonCreateManyTeamInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  managerId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PersonUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PersonCreateManyManagerInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  jobRoleId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PersonUpdateWithoutManagerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  jobRole?: Prisma.JobRoleUpdateOneWithoutPeopleNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutManagerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateManyWithoutManagerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  jobRoleId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PersonCreateManyJobRoleInput = {
  id?: string
  email?: string | null
  name: string
  role?: string | null
  status?: string
  birthday?: Date | string | null
  avatar?: string | null
  employeeType?: $Enums.EmployeeType | null
  organizationId: string
  teamId?: string | null
  managerId?: string | null
  startedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PersonUpdateWithoutJobRoleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutPeopleNestedInput
  team?: Prisma.TeamUpdateOneWithoutPeopleNestedInput
  manager?: Prisma.PersonUpdateOneWithoutReportsNestedInput
  reports?: Prisma.PersonUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateWithoutJobRoleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  reports?: Prisma.PersonUncheckedUpdateManyWithoutManagerNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutAssigneeNestedInput
  oneOnOnes?: Prisma.OneOnOneUncheckedUpdateManyWithoutReportNestedInput
  oneOnOnesAsManager?: Prisma.OneOnOneUncheckedUpdateManyWithoutManagerNestedInput
  idps?: Prisma.IDPUncheckedUpdateManyWithoutPersonNestedInput
  feedback?: Prisma.FeedbackUncheckedUpdateManyWithoutAboutNestedInput
  feedbackFrom?: Prisma.FeedbackUncheckedUpdateManyWithoutFromNestedInput
  initiativeOwners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutPersonNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutCreatedByNestedInput
  events?: Prisma.EventUncheckedUpdateManyWithoutActorNestedInput
  user?: Prisma.UserUncheckedUpdateOneWithoutPersonNestedInput
  jiraAccount?: Prisma.PersonJiraAccountUncheckedUpdateOneWithoutPersonNestedInput
  githubAccount?: Prisma.PersonGithubAccountUncheckedUpdateOneWithoutPersonNestedInput
  feedbackCampaigns?: Prisma.FeedbackCampaignUncheckedUpdateManyWithoutTargetPersonNestedInput
  ownedMeetings?: Prisma.MeetingUncheckedUpdateManyWithoutOwnerNestedInput
  meetingParticipants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutPersonNestedInput
  meetingInstanceParticipants?: Prisma.MeetingInstanceParticipantUncheckedUpdateManyWithoutPersonNestedInput
  synopses?: Prisma.PersonSynopsisUncheckedUpdateManyWithoutPersonNestedInput
}

export type PersonUncheckedUpdateManyWithoutJobRoleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  birthday?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeType?:
    | Prisma.NullableEnumEmployeeTypeFieldUpdateOperationsInput
    | $Enums.EmployeeType
    | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  managerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

/**
 * Count Type PersonCountOutputType
 */

export type PersonCountOutputType = {
  reports: number
  tasks: number
  oneOnOnes: number
  oneOnOnesAsManager: number
  idps: number
  feedback: number
  feedbackFrom: number
  initiativeOwners: number
  checkIns: number
  events: number
  feedbackCampaigns: number
  ownedMeetings: number
  meetingParticipants: number
  meetingInstanceParticipants: number
  synopses: number
}

export type PersonCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  reports?: boolean | PersonCountOutputTypeCountReportsArgs
  tasks?: boolean | PersonCountOutputTypeCountTasksArgs
  oneOnOnes?: boolean | PersonCountOutputTypeCountOneOnOnesArgs
  oneOnOnesAsManager?:
    | boolean
    | PersonCountOutputTypeCountOneOnOnesAsManagerArgs
  idps?: boolean | PersonCountOutputTypeCountIdpsArgs
  feedback?: boolean | PersonCountOutputTypeCountFeedbackArgs
  feedbackFrom?: boolean | PersonCountOutputTypeCountFeedbackFromArgs
  initiativeOwners?: boolean | PersonCountOutputTypeCountInitiativeOwnersArgs
  checkIns?: boolean | PersonCountOutputTypeCountCheckInsArgs
  events?: boolean | PersonCountOutputTypeCountEventsArgs
  feedbackCampaigns?: boolean | PersonCountOutputTypeCountFeedbackCampaignsArgs
  ownedMeetings?: boolean | PersonCountOutputTypeCountOwnedMeetingsArgs
  meetingParticipants?:
    | boolean
    | PersonCountOutputTypeCountMeetingParticipantsArgs
  meetingInstanceParticipants?:
    | boolean
    | PersonCountOutputTypeCountMeetingInstanceParticipantsArgs
  synopses?: boolean | PersonCountOutputTypeCountSynopsesArgs
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the PersonCountOutputType
   */
  select?: Prisma.PersonCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountReportsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PersonWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountTasksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TaskWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountOneOnOnesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OneOnOneWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountOneOnOnesAsManagerArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OneOnOneWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountIdpsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.IDPWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountFeedbackArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FeedbackWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountFeedbackFromArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FeedbackWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountInitiativeOwnersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InitiativeOwnerWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountCheckInsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CheckInWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EventWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountFeedbackCampaignsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FeedbackCampaignWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountOwnedMeetingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountMeetingParticipantsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingParticipantWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountMeetingInstanceParticipantsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingInstanceParticipantWhereInput
}

/**
 * PersonCountOutputType without action
 */
export type PersonCountOutputTypeCountSynopsesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PersonSynopsisWhereInput
}

export type PersonSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    status?: boolean
    birthday?: boolean
    avatar?: boolean
    employeeType?: boolean
    organizationId?: boolean
    teamId?: boolean
    managerId?: boolean
    jobRoleId?: boolean
    startedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    team?: boolean | Prisma.Person$teamArgs<ExtArgs>
    manager?: boolean | Prisma.Person$managerArgs<ExtArgs>
    reports?: boolean | Prisma.Person$reportsArgs<ExtArgs>
    jobRole?: boolean | Prisma.Person$jobRoleArgs<ExtArgs>
    tasks?: boolean | Prisma.Person$tasksArgs<ExtArgs>
    oneOnOnes?: boolean | Prisma.Person$oneOnOnesArgs<ExtArgs>
    oneOnOnesAsManager?: boolean | Prisma.Person$oneOnOnesAsManagerArgs<ExtArgs>
    idps?: boolean | Prisma.Person$idpsArgs<ExtArgs>
    feedback?: boolean | Prisma.Person$feedbackArgs<ExtArgs>
    feedbackFrom?: boolean | Prisma.Person$feedbackFromArgs<ExtArgs>
    initiativeOwners?: boolean | Prisma.Person$initiativeOwnersArgs<ExtArgs>
    checkIns?: boolean | Prisma.Person$checkInsArgs<ExtArgs>
    events?: boolean | Prisma.Person$eventsArgs<ExtArgs>
    user?: boolean | Prisma.Person$userArgs<ExtArgs>
    jiraAccount?: boolean | Prisma.Person$jiraAccountArgs<ExtArgs>
    githubAccount?: boolean | Prisma.Person$githubAccountArgs<ExtArgs>
    feedbackCampaigns?: boolean | Prisma.Person$feedbackCampaignsArgs<ExtArgs>
    ownedMeetings?: boolean | Prisma.Person$ownedMeetingsArgs<ExtArgs>
    meetingParticipants?:
      | boolean
      | Prisma.Person$meetingParticipantsArgs<ExtArgs>
    meetingInstanceParticipants?:
      | boolean
      | Prisma.Person$meetingInstanceParticipantsArgs<ExtArgs>
    synopses?: boolean | Prisma.Person$synopsesArgs<ExtArgs>
    _count?: boolean | Prisma.PersonCountOutputTypeDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['person']
>

export type PersonSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    status?: boolean
    birthday?: boolean
    avatar?: boolean
    employeeType?: boolean
    organizationId?: boolean
    teamId?: boolean
    managerId?: boolean
    jobRoleId?: boolean
    startedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    team?: boolean | Prisma.Person$teamArgs<ExtArgs>
    manager?: boolean | Prisma.Person$managerArgs<ExtArgs>
    jobRole?: boolean | Prisma.Person$jobRoleArgs<ExtArgs>
  },
  ExtArgs['result']['person']
>

export type PersonSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    status?: boolean
    birthday?: boolean
    avatar?: boolean
    employeeType?: boolean
    organizationId?: boolean
    teamId?: boolean
    managerId?: boolean
    jobRoleId?: boolean
    startedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    team?: boolean | Prisma.Person$teamArgs<ExtArgs>
    manager?: boolean | Prisma.Person$managerArgs<ExtArgs>
    jobRole?: boolean | Prisma.Person$jobRoleArgs<ExtArgs>
  },
  ExtArgs['result']['person']
>

export type PersonSelectScalar = {
  id?: boolean
  email?: boolean
  name?: boolean
  role?: boolean
  status?: boolean
  birthday?: boolean
  avatar?: boolean
  employeeType?: boolean
  organizationId?: boolean
  teamId?: boolean
  managerId?: boolean
  jobRoleId?: boolean
  startedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type PersonOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'email'
  | 'name'
  | 'role'
  | 'status'
  | 'birthday'
  | 'avatar'
  | 'employeeType'
  | 'organizationId'
  | 'teamId'
  | 'managerId'
  | 'jobRoleId'
  | 'startedAt'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['person']
>
export type PersonInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  team?: boolean | Prisma.Person$teamArgs<ExtArgs>
  manager?: boolean | Prisma.Person$managerArgs<ExtArgs>
  reports?: boolean | Prisma.Person$reportsArgs<ExtArgs>
  jobRole?: boolean | Prisma.Person$jobRoleArgs<ExtArgs>
  tasks?: boolean | Prisma.Person$tasksArgs<ExtArgs>
  oneOnOnes?: boolean | Prisma.Person$oneOnOnesArgs<ExtArgs>
  oneOnOnesAsManager?: boolean | Prisma.Person$oneOnOnesAsManagerArgs<ExtArgs>
  idps?: boolean | Prisma.Person$idpsArgs<ExtArgs>
  feedback?: boolean | Prisma.Person$feedbackArgs<ExtArgs>
  feedbackFrom?: boolean | Prisma.Person$feedbackFromArgs<ExtArgs>
  initiativeOwners?: boolean | Prisma.Person$initiativeOwnersArgs<ExtArgs>
  checkIns?: boolean | Prisma.Person$checkInsArgs<ExtArgs>
  events?: boolean | Prisma.Person$eventsArgs<ExtArgs>
  user?: boolean | Prisma.Person$userArgs<ExtArgs>
  jiraAccount?: boolean | Prisma.Person$jiraAccountArgs<ExtArgs>
  githubAccount?: boolean | Prisma.Person$githubAccountArgs<ExtArgs>
  feedbackCampaigns?: boolean | Prisma.Person$feedbackCampaignsArgs<ExtArgs>
  ownedMeetings?: boolean | Prisma.Person$ownedMeetingsArgs<ExtArgs>
  meetingParticipants?: boolean | Prisma.Person$meetingParticipantsArgs<ExtArgs>
  meetingInstanceParticipants?:
    | boolean
    | Prisma.Person$meetingInstanceParticipantsArgs<ExtArgs>
  synopses?: boolean | Prisma.Person$synopsesArgs<ExtArgs>
  _count?: boolean | Prisma.PersonCountOutputTypeDefaultArgs<ExtArgs>
}
export type PersonIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  team?: boolean | Prisma.Person$teamArgs<ExtArgs>
  manager?: boolean | Prisma.Person$managerArgs<ExtArgs>
  jobRole?: boolean | Prisma.Person$jobRoleArgs<ExtArgs>
}
export type PersonIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  team?: boolean | Prisma.Person$teamArgs<ExtArgs>
  manager?: boolean | Prisma.Person$managerArgs<ExtArgs>
  jobRole?: boolean | Prisma.Person$jobRoleArgs<ExtArgs>
}

export type $PersonPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'Person'
  objects: {
    organization: Prisma.$OrganizationPayload<ExtArgs>
    team: Prisma.$TeamPayload<ExtArgs> | null
    manager: Prisma.$PersonPayload<ExtArgs> | null
    reports: Prisma.$PersonPayload<ExtArgs>[]
    jobRole: Prisma.$JobRolePayload<ExtArgs> | null
    tasks: Prisma.$TaskPayload<ExtArgs>[]
    oneOnOnes: Prisma.$OneOnOnePayload<ExtArgs>[]
    oneOnOnesAsManager: Prisma.$OneOnOnePayload<ExtArgs>[]
    idps: Prisma.$IDPPayload<ExtArgs>[]
    feedback: Prisma.$FeedbackPayload<ExtArgs>[]
    feedbackFrom: Prisma.$FeedbackPayload<ExtArgs>[]
    initiativeOwners: Prisma.$InitiativeOwnerPayload<ExtArgs>[]
    checkIns: Prisma.$CheckInPayload<ExtArgs>[]
    events: Prisma.$EventPayload<ExtArgs>[]
    user: Prisma.$UserPayload<ExtArgs> | null
    jiraAccount: Prisma.$PersonJiraAccountPayload<ExtArgs> | null
    githubAccount: Prisma.$PersonGithubAccountPayload<ExtArgs> | null
    feedbackCampaigns: Prisma.$FeedbackCampaignPayload<ExtArgs>[]
    ownedMeetings: Prisma.$MeetingPayload<ExtArgs>[]
    meetingParticipants: Prisma.$MeetingParticipantPayload<ExtArgs>[]
    meetingInstanceParticipants: Prisma.$MeetingInstanceParticipantPayload<ExtArgs>[]
    synopses: Prisma.$PersonSynopsisPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      email: string | null
      name: string
      role: string | null
      status: string
      birthday: Date | null
      avatar: string | null
      employeeType: $Enums.EmployeeType | null
      organizationId: string
      teamId: string | null
      managerId: string | null
      jobRoleId: string | null
      startedAt: Date | null
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['person']
  >
  composites: {}
}

export type PersonGetPayload<
  S extends boolean | null | undefined | PersonDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$PersonPayload, S>

export type PersonCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<PersonFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: PersonCountAggregateInputType | true
}

export interface PersonDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['Person']
    meta: { name: 'Person' }
  }
  /**
   * Find zero or one Person that matches the filter.
   * @param {PersonFindUniqueArgs} args - Arguments to find a Person
   * @example
   * // Get one Person
   * const person = await prisma.person.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PersonFindUniqueArgs>(
    args: Prisma.SelectSubset<T, PersonFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one Person that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PersonFindUniqueOrThrowArgs} args - Arguments to find a Person
   * @example
   * // Get one Person
   * const person = await prisma.person.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PersonFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, PersonFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Person that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonFindFirstArgs} args - Arguments to find a Person
   * @example
   * // Get one Person
   * const person = await prisma.person.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PersonFindFirstArgs>(
    args?: Prisma.SelectSubset<T, PersonFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Person that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonFindFirstOrThrowArgs} args - Arguments to find a Person
   * @example
   * // Get one Person
   * const person = await prisma.person.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PersonFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, PersonFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more People that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all People
   * const people = await prisma.person.findMany()
   *
   * // Get first 10 People
   * const people = await prisma.person.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const personWithIdOnly = await prisma.person.findMany({ select: { id: true } })
   *
   */
  findMany<T extends PersonFindManyArgs>(
    args?: Prisma.SelectSubset<T, PersonFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a Person.
   * @param {PersonCreateArgs} args - Arguments to create a Person.
   * @example
   * // Create one Person
   * const Person = await prisma.person.create({
   *   data: {
   *     // ... data to create a Person
   *   }
   * })
   *
   */
  create<T extends PersonCreateArgs>(
    args: Prisma.SelectSubset<T, PersonCreateArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many People.
   * @param {PersonCreateManyArgs} args - Arguments to create many People.
   * @example
   * // Create many People
   * const person = await prisma.person.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends PersonCreateManyArgs>(
    args?: Prisma.SelectSubset<T, PersonCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many People and returns the data saved in the database.
   * @param {PersonCreateManyAndReturnArgs} args - Arguments to create many People.
   * @example
   * // Create many People
   * const person = await prisma.person.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many People and only return the `id`
   * const personWithIdOnly = await prisma.person.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends PersonCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, PersonCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a Person.
   * @param {PersonDeleteArgs} args - Arguments to delete one Person.
   * @example
   * // Delete one Person
   * const Person = await prisma.person.delete({
   *   where: {
   *     // ... filter to delete one Person
   *   }
   * })
   *
   */
  delete<T extends PersonDeleteArgs>(
    args: Prisma.SelectSubset<T, PersonDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one Person.
   * @param {PersonUpdateArgs} args - Arguments to update one Person.
   * @example
   * // Update one Person
   * const person = await prisma.person.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends PersonUpdateArgs>(
    args: Prisma.SelectSubset<T, PersonUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more People.
   * @param {PersonDeleteManyArgs} args - Arguments to filter People to delete.
   * @example
   * // Delete a few People
   * const { count } = await prisma.person.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends PersonDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, PersonDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more People.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many People
   * const person = await prisma.person.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends PersonUpdateManyArgs>(
    args: Prisma.SelectSubset<T, PersonUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more People and returns the data updated in the database.
   * @param {PersonUpdateManyAndReturnArgs} args - Arguments to update many People.
   * @example
   * // Update many People
   * const person = await prisma.person.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more People and only return the `id`
   * const personWithIdOnly = await prisma.person.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends PersonUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, PersonUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one Person.
   * @param {PersonUpsertArgs} args - Arguments to update or create a Person.
   * @example
   * // Update or create a Person
   * const person = await prisma.person.upsert({
   *   create: {
   *     // ... data to create a Person
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Person we want to update
   *   }
   * })
   */
  upsert<T extends PersonUpsertArgs>(
    args: Prisma.SelectSubset<T, PersonUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of People.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonCountArgs} args - Arguments to filter People to count.
   * @example
   * // Count the number of People
   * const count = await prisma.person.count({
   *   where: {
   *     // ... the filter for the People we want to count
   *   }
   * })
   **/
  count<T extends PersonCountArgs>(
    args?: Prisma.Subset<T, PersonCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PersonCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Person.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends PersonAggregateArgs>(
    args: Prisma.Subset<T, PersonAggregateArgs>
  ): Prisma.PrismaPromise<GetPersonAggregateType<T>>

  /**
   * Group by Person.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PersonGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends PersonGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PersonGroupByArgs['orderBy'] }
      : { orderBy?: PersonGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, PersonGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetPersonGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Person model
   */
  readonly fields: PersonFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for Person.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PersonClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  team<T extends Prisma.Person$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  manager<T extends Prisma.Person$managerArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$managerArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  reports<T extends Prisma.Person$reportsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$reportsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PersonPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  jobRole<T extends Prisma.Person$jobRoleArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$jobRoleArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  tasks<T extends Prisma.Person$tasksArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$tasksArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TaskPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  oneOnOnes<T extends Prisma.Person$oneOnOnesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$oneOnOnesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$OneOnOnePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  oneOnOnesAsManager<
    T extends Prisma.Person$oneOnOnesAsManagerArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Person$oneOnOnesAsManagerArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$OneOnOnePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  idps<T extends Prisma.Person$idpsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$idpsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$IDPPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  feedback<T extends Prisma.Person$feedbackArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$feedbackArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$FeedbackPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  feedbackFrom<T extends Prisma.Person$feedbackFromArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$feedbackFromArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$FeedbackPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  initiativeOwners<T extends Prisma.Person$initiativeOwnersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$initiativeOwnersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InitiativeOwnerPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  checkIns<T extends Prisma.Person$checkInsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$checkInsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CheckInPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  events<T extends Prisma.Person$eventsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$eventsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EventPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  user<T extends Prisma.Person$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$userArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  jiraAccount<T extends Prisma.Person$jiraAccountArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$jiraAccountArgs<ExtArgs>>
  ): Prisma.Prisma__PersonJiraAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonJiraAccountPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  githubAccount<T extends Prisma.Person$githubAccountArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$githubAccountArgs<ExtArgs>>
  ): Prisma.Prisma__PersonGithubAccountClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonGithubAccountPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  feedbackCampaigns<
    T extends Prisma.Person$feedbackCampaignsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Person$feedbackCampaignsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$FeedbackCampaignPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  ownedMeetings<T extends Prisma.Person$ownedMeetingsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$ownedMeetingsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  meetingParticipants<
    T extends Prisma.Person$meetingParticipantsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Person$meetingParticipantsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingParticipantPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  meetingInstanceParticipants<
    T extends Prisma.Person$meetingInstanceParticipantsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<
      T,
      Prisma.Person$meetingInstanceParticipantsArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingInstanceParticipantPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  synopses<T extends Prisma.Person$synopsesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Person$synopsesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PersonSynopsisPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the Person model
 */
export interface PersonFieldRefs {
  readonly id: Prisma.FieldRef<'Person', 'String'>
  readonly email: Prisma.FieldRef<'Person', 'String'>
  readonly name: Prisma.FieldRef<'Person', 'String'>
  readonly role: Prisma.FieldRef<'Person', 'String'>
  readonly status: Prisma.FieldRef<'Person', 'String'>
  readonly birthday: Prisma.FieldRef<'Person', 'DateTime'>
  readonly avatar: Prisma.FieldRef<'Person', 'String'>
  readonly employeeType: Prisma.FieldRef<'Person', 'EmployeeType'>
  readonly organizationId: Prisma.FieldRef<'Person', 'String'>
  readonly teamId: Prisma.FieldRef<'Person', 'String'>
  readonly managerId: Prisma.FieldRef<'Person', 'String'>
  readonly jobRoleId: Prisma.FieldRef<'Person', 'String'>
  readonly startedAt: Prisma.FieldRef<'Person', 'DateTime'>
  readonly createdAt: Prisma.FieldRef<'Person', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'Person', 'DateTime'>
}

// Custom InputTypes
/**
 * Person findUnique
 */
export type PersonFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * Filter, which Person to fetch.
   */
  where: Prisma.PersonWhereUniqueInput
}

/**
 * Person findUniqueOrThrow
 */
export type PersonFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * Filter, which Person to fetch.
   */
  where: Prisma.PersonWhereUniqueInput
}

/**
 * Person findFirst
 */
export type PersonFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * Filter, which Person to fetch.
   */
  where?: Prisma.PersonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of People to fetch.
   */
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for People.
   */
  cursor?: Prisma.PersonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` People from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` People.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of People.
   */
  distinct?: Prisma.PersonScalarFieldEnum | Prisma.PersonScalarFieldEnum[]
}

/**
 * Person findFirstOrThrow
 */
export type PersonFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * Filter, which Person to fetch.
   */
  where?: Prisma.PersonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of People to fetch.
   */
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for People.
   */
  cursor?: Prisma.PersonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` People from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` People.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of People.
   */
  distinct?: Prisma.PersonScalarFieldEnum | Prisma.PersonScalarFieldEnum[]
}

/**
 * Person findMany
 */
export type PersonFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * Filter, which People to fetch.
   */
  where?: Prisma.PersonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of People to fetch.
   */
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing People.
   */
  cursor?: Prisma.PersonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` People from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` People.
   */
  skip?: number
  distinct?: Prisma.PersonScalarFieldEnum | Prisma.PersonScalarFieldEnum[]
}

/**
 * Person create
 */
export type PersonCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * The data needed to create a Person.
   */
  data: Prisma.XOR<Prisma.PersonCreateInput, Prisma.PersonUncheckedCreateInput>
}

/**
 * Person createMany
 */
export type PersonCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many People.
   */
  data: Prisma.PersonCreateManyInput | Prisma.PersonCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Person createManyAndReturn
 */
export type PersonCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * The data used to create many People.
   */
  data: Prisma.PersonCreateManyInput | Prisma.PersonCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Person update
 */
export type PersonUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * The data needed to update a Person.
   */
  data: Prisma.XOR<Prisma.PersonUpdateInput, Prisma.PersonUncheckedUpdateInput>
  /**
   * Choose, which Person to update.
   */
  where: Prisma.PersonWhereUniqueInput
}

/**
 * Person updateMany
 */
export type PersonUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update People.
   */
  data: Prisma.XOR<
    Prisma.PersonUpdateManyMutationInput,
    Prisma.PersonUncheckedUpdateManyInput
  >
  /**
   * Filter which People to update
   */
  where?: Prisma.PersonWhereInput
  /**
   * Limit how many People to update.
   */
  limit?: number
}

/**
 * Person updateManyAndReturn
 */
export type PersonUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * The data used to update People.
   */
  data: Prisma.XOR<
    Prisma.PersonUpdateManyMutationInput,
    Prisma.PersonUncheckedUpdateManyInput
  >
  /**
   * Filter which People to update
   */
  where?: Prisma.PersonWhereInput
  /**
   * Limit how many People to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Person upsert
 */
export type PersonUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * The filter to search for the Person to update in case it exists.
   */
  where: Prisma.PersonWhereUniqueInput
  /**
   * In case the Person found by the `where` argument doesn't exist, create a new Person with this data.
   */
  create: Prisma.XOR<
    Prisma.PersonCreateInput,
    Prisma.PersonUncheckedCreateInput
  >
  /**
   * In case the Person was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.PersonUpdateInput,
    Prisma.PersonUncheckedUpdateInput
  >
}

/**
 * Person delete
 */
export type PersonDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  /**
   * Filter which Person to delete.
   */
  where: Prisma.PersonWhereUniqueInput
}

/**
 * Person deleteMany
 */
export type PersonDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which People to delete
   */
  where?: Prisma.PersonWhereInput
  /**
   * Limit how many People to delete.
   */
  limit?: number
}

/**
 * Person.team
 */
export type Person$teamArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null
  where?: Prisma.TeamWhereInput
}

/**
 * Person.manager
 */
export type Person$managerArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  where?: Prisma.PersonWhereInput
}

/**
 * Person.reports
 */
export type Person$reportsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  where?: Prisma.PersonWhereInput
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  cursor?: Prisma.PersonWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PersonScalarFieldEnum | Prisma.PersonScalarFieldEnum[]
}

/**
 * Person.jobRole
 */
export type Person$jobRoleArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  where?: Prisma.JobRoleWhereInput
}

/**
 * Person.tasks
 */
export type Person$tasksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Task
   */
  select?: Prisma.TaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Task
   */
  omit?: Prisma.TaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskInclude<ExtArgs> | null
  where?: Prisma.TaskWhereInput
  orderBy?:
    | Prisma.TaskOrderByWithRelationInput
    | Prisma.TaskOrderByWithRelationInput[]
  cursor?: Prisma.TaskWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TaskScalarFieldEnum | Prisma.TaskScalarFieldEnum[]
}

/**
 * Person.oneOnOnes
 */
export type Person$oneOnOnesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OneOnOne
   */
  select?: Prisma.OneOnOneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OneOnOne
   */
  omit?: Prisma.OneOnOneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OneOnOneInclude<ExtArgs> | null
  where?: Prisma.OneOnOneWhereInput
  orderBy?:
    | Prisma.OneOnOneOrderByWithRelationInput
    | Prisma.OneOnOneOrderByWithRelationInput[]
  cursor?: Prisma.OneOnOneWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OneOnOneScalarFieldEnum | Prisma.OneOnOneScalarFieldEnum[]
}

/**
 * Person.oneOnOnesAsManager
 */
export type Person$oneOnOnesAsManagerArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OneOnOne
   */
  select?: Prisma.OneOnOneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OneOnOne
   */
  omit?: Prisma.OneOnOneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OneOnOneInclude<ExtArgs> | null
  where?: Prisma.OneOnOneWhereInput
  orderBy?:
    | Prisma.OneOnOneOrderByWithRelationInput
    | Prisma.OneOnOneOrderByWithRelationInput[]
  cursor?: Prisma.OneOnOneWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OneOnOneScalarFieldEnum | Prisma.OneOnOneScalarFieldEnum[]
}

/**
 * Person.idps
 */
export type Person$idpsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the IDP
   */
  select?: Prisma.IDPSelect<ExtArgs> | null
  /**
   * Omit specific fields from the IDP
   */
  omit?: Prisma.IDPOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.IDPInclude<ExtArgs> | null
  where?: Prisma.IDPWhereInput
  orderBy?:
    | Prisma.IDPOrderByWithRelationInput
    | Prisma.IDPOrderByWithRelationInput[]
  cursor?: Prisma.IDPWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.IDPScalarFieldEnum | Prisma.IDPScalarFieldEnum[]
}

/**
 * Person.feedback
 */
export type Person$feedbackArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Feedback
   */
  select?: Prisma.FeedbackSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Feedback
   */
  omit?: Prisma.FeedbackOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeedbackInclude<ExtArgs> | null
  where?: Prisma.FeedbackWhereInput
  orderBy?:
    | Prisma.FeedbackOrderByWithRelationInput
    | Prisma.FeedbackOrderByWithRelationInput[]
  cursor?: Prisma.FeedbackWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FeedbackScalarFieldEnum | Prisma.FeedbackScalarFieldEnum[]
}

/**
 * Person.feedbackFrom
 */
export type Person$feedbackFromArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Feedback
   */
  select?: Prisma.FeedbackSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Feedback
   */
  omit?: Prisma.FeedbackOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeedbackInclude<ExtArgs> | null
  where?: Prisma.FeedbackWhereInput
  orderBy?:
    | Prisma.FeedbackOrderByWithRelationInput
    | Prisma.FeedbackOrderByWithRelationInput[]
  cursor?: Prisma.FeedbackWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FeedbackScalarFieldEnum | Prisma.FeedbackScalarFieldEnum[]
}

/**
 * Person.initiativeOwners
 */
export type Person$initiativeOwnersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InitiativeOwner
   */
  select?: Prisma.InitiativeOwnerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InitiativeOwner
   */
  omit?: Prisma.InitiativeOwnerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeOwnerInclude<ExtArgs> | null
  where?: Prisma.InitiativeOwnerWhereInput
  orderBy?:
    | Prisma.InitiativeOwnerOrderByWithRelationInput
    | Prisma.InitiativeOwnerOrderByWithRelationInput[]
  cursor?: Prisma.InitiativeOwnerWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.InitiativeOwnerScalarFieldEnum
    | Prisma.InitiativeOwnerScalarFieldEnum[]
}

/**
 * Person.checkIns
 */
export type Person$checkInsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CheckIn
   */
  select?: Prisma.CheckInSelect<ExtArgs> | null
  /**
   * Omit specific fields from the CheckIn
   */
  omit?: Prisma.CheckInOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CheckInInclude<ExtArgs> | null
  where?: Prisma.CheckInWhereInput
  orderBy?:
    | Prisma.CheckInOrderByWithRelationInput
    | Prisma.CheckInOrderByWithRelationInput[]
  cursor?: Prisma.CheckInWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CheckInScalarFieldEnum | Prisma.CheckInScalarFieldEnum[]
}

/**
 * Person.events
 */
export type Person$eventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Event
   */
  select?: Prisma.EventSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Event
   */
  omit?: Prisma.EventOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventInclude<ExtArgs> | null
  where?: Prisma.EventWhereInput
  orderBy?:
    | Prisma.EventOrderByWithRelationInput
    | Prisma.EventOrderByWithRelationInput[]
  cursor?: Prisma.EventWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EventScalarFieldEnum | Prisma.EventScalarFieldEnum[]
}

/**
 * Person.user
 */
export type Person$userArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Person.jiraAccount
 */
export type Person$jiraAccountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the PersonJiraAccount
   */
  select?: Prisma.PersonJiraAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PersonJiraAccount
   */
  omit?: Prisma.PersonJiraAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonJiraAccountInclude<ExtArgs> | null
  where?: Prisma.PersonJiraAccountWhereInput
}

/**
 * Person.githubAccount
 */
export type Person$githubAccountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the PersonGithubAccount
   */
  select?: Prisma.PersonGithubAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PersonGithubAccount
   */
  omit?: Prisma.PersonGithubAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonGithubAccountInclude<ExtArgs> | null
  where?: Prisma.PersonGithubAccountWhereInput
}

/**
 * Person.feedbackCampaigns
 */
export type Person$feedbackCampaignsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FeedbackCampaign
   */
  select?: Prisma.FeedbackCampaignSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FeedbackCampaign
   */
  omit?: Prisma.FeedbackCampaignOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FeedbackCampaignInclude<ExtArgs> | null
  where?: Prisma.FeedbackCampaignWhereInput
  orderBy?:
    | Prisma.FeedbackCampaignOrderByWithRelationInput
    | Prisma.FeedbackCampaignOrderByWithRelationInput[]
  cursor?: Prisma.FeedbackCampaignWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.FeedbackCampaignScalarFieldEnum
    | Prisma.FeedbackCampaignScalarFieldEnum[]
}

/**
 * Person.ownedMeetings
 */
export type Person$ownedMeetingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  where?: Prisma.MeetingWhereInput
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  cursor?: Prisma.MeetingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Person.meetingParticipants
 */
export type Person$meetingParticipantsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MeetingParticipant
   */
  select?: Prisma.MeetingParticipantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingParticipant
   */
  omit?: Prisma.MeetingParticipantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingParticipantInclude<ExtArgs> | null
  where?: Prisma.MeetingParticipantWhereInput
  orderBy?:
    | Prisma.MeetingParticipantOrderByWithRelationInput
    | Prisma.MeetingParticipantOrderByWithRelationInput[]
  cursor?: Prisma.MeetingParticipantWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.MeetingParticipantScalarFieldEnum
    | Prisma.MeetingParticipantScalarFieldEnum[]
}

/**
 * Person.meetingInstanceParticipants
 */
export type Person$meetingInstanceParticipantsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MeetingInstanceParticipant
   */
  select?: Prisma.MeetingInstanceParticipantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingInstanceParticipant
   */
  omit?: Prisma.MeetingInstanceParticipantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInstanceParticipantInclude<ExtArgs> | null
  where?: Prisma.MeetingInstanceParticipantWhereInput
  orderBy?:
    | Prisma.MeetingInstanceParticipantOrderByWithRelationInput
    | Prisma.MeetingInstanceParticipantOrderByWithRelationInput[]
  cursor?: Prisma.MeetingInstanceParticipantWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.MeetingInstanceParticipantScalarFieldEnum
    | Prisma.MeetingInstanceParticipantScalarFieldEnum[]
}

/**
 * Person.synopses
 */
export type Person$synopsesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the PersonSynopsis
   */
  select?: Prisma.PersonSynopsisSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PersonSynopsis
   */
  omit?: Prisma.PersonSynopsisOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonSynopsisInclude<ExtArgs> | null
  where?: Prisma.PersonSynopsisWhereInput
  orderBy?:
    | Prisma.PersonSynopsisOrderByWithRelationInput
    | Prisma.PersonSynopsisOrderByWithRelationInput[]
  cursor?: Prisma.PersonSynopsisWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.PersonSynopsisScalarFieldEnum
    | Prisma.PersonSynopsisScalarFieldEnum[]
}

/**
 * Person without action
 */
export type PersonDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
}
