/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `UserJiraCredentials` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model UserJiraCredentials
 *
 */
export type UserJiraCredentialsModel =
  runtime.Types.Result.DefaultSelection<Prisma.$UserJiraCredentialsPayload>

export type AggregateUserJiraCredentials = {
  _count: UserJiraCredentialsCountAggregateOutputType | null
  _min: UserJiraCredentialsMinAggregateOutputType | null
  _max: UserJiraCredentialsMaxAggregateOutputType | null
}

export type UserJiraCredentialsMinAggregateOutputType = {
  id: string | null
  userId: string | null
  jiraUsername: string | null
  encryptedApiKey: string | null
  jiraBaseUrl: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UserJiraCredentialsMaxAggregateOutputType = {
  id: string | null
  userId: string | null
  jiraUsername: string | null
  encryptedApiKey: string | null
  jiraBaseUrl: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UserJiraCredentialsCountAggregateOutputType = {
  id: number
  userId: number
  jiraUsername: number
  encryptedApiKey: number
  jiraBaseUrl: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type UserJiraCredentialsMinAggregateInputType = {
  id?: true
  userId?: true
  jiraUsername?: true
  encryptedApiKey?: true
  jiraBaseUrl?: true
  createdAt?: true
  updatedAt?: true
}

export type UserJiraCredentialsMaxAggregateInputType = {
  id?: true
  userId?: true
  jiraUsername?: true
  encryptedApiKey?: true
  jiraBaseUrl?: true
  createdAt?: true
  updatedAt?: true
}

export type UserJiraCredentialsCountAggregateInputType = {
  id?: true
  userId?: true
  jiraUsername?: true
  encryptedApiKey?: true
  jiraBaseUrl?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type UserJiraCredentialsAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which UserJiraCredentials to aggregate.
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of UserJiraCredentials to fetch.
   */
  orderBy?:
    | Prisma.UserJiraCredentialsOrderByWithRelationInput
    | Prisma.UserJiraCredentialsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.UserJiraCredentialsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` UserJiraCredentials from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` UserJiraCredentials.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned UserJiraCredentials
   **/
  _count?: true | UserJiraCredentialsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: UserJiraCredentialsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: UserJiraCredentialsMaxAggregateInputType
}

export type GetUserJiraCredentialsAggregateType<
  T extends UserJiraCredentialsAggregateArgs,
> = {
  [P in keyof T & keyof AggregateUserJiraCredentials]: P extends
    | '_count'
    | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUserJiraCredentials[P]>
    : Prisma.GetScalarType<T[P], AggregateUserJiraCredentials[P]>
}

export type UserJiraCredentialsGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserJiraCredentialsWhereInput
  orderBy?:
    | Prisma.UserJiraCredentialsOrderByWithAggregationInput
    | Prisma.UserJiraCredentialsOrderByWithAggregationInput[]
  by:
    | Prisma.UserJiraCredentialsScalarFieldEnum[]
    | Prisma.UserJiraCredentialsScalarFieldEnum
  having?: Prisma.UserJiraCredentialsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserJiraCredentialsCountAggregateInputType | true
  _min?: UserJiraCredentialsMinAggregateInputType
  _max?: UserJiraCredentialsMaxAggregateInputType
}

export type UserJiraCredentialsGroupByOutputType = {
  id: string
  userId: string
  jiraUsername: string
  encryptedApiKey: string
  jiraBaseUrl: string
  createdAt: Date
  updatedAt: Date
  _count: UserJiraCredentialsCountAggregateOutputType | null
  _min: UserJiraCredentialsMinAggregateOutputType | null
  _max: UserJiraCredentialsMaxAggregateOutputType | null
}

type GetUserJiraCredentialsGroupByPayload<
  T extends UserJiraCredentialsGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserJiraCredentialsGroupByOutputType, T['by']> & {
      [P in keyof T &
        keyof UserJiraCredentialsGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], UserJiraCredentialsGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], UserJiraCredentialsGroupByOutputType[P]>
    }
  >
>

export type UserJiraCredentialsWhereInput = {
  AND?:
    | Prisma.UserJiraCredentialsWhereInput
    | Prisma.UserJiraCredentialsWhereInput[]
  OR?: Prisma.UserJiraCredentialsWhereInput[]
  NOT?:
    | Prisma.UserJiraCredentialsWhereInput
    | Prisma.UserJiraCredentialsWhereInput[]
  id?: Prisma.StringFilter<'UserJiraCredentials'> | string
  userId?: Prisma.StringFilter<'UserJiraCredentials'> | string
  jiraUsername?: Prisma.StringFilter<'UserJiraCredentials'> | string
  encryptedApiKey?: Prisma.StringFilter<'UserJiraCredentials'> | string
  jiraBaseUrl?: Prisma.StringFilter<'UserJiraCredentials'> | string
  createdAt?: Prisma.DateTimeFilter<'UserJiraCredentials'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'UserJiraCredentials'> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type UserJiraCredentialsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  jiraUsername?: Prisma.SortOrder
  encryptedApiKey?: Prisma.SortOrder
  jiraBaseUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type UserJiraCredentialsWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    userId?: string
    AND?:
      | Prisma.UserJiraCredentialsWhereInput
      | Prisma.UserJiraCredentialsWhereInput[]
    OR?: Prisma.UserJiraCredentialsWhereInput[]
    NOT?:
      | Prisma.UserJiraCredentialsWhereInput
      | Prisma.UserJiraCredentialsWhereInput[]
    jiraUsername?: Prisma.StringFilter<'UserJiraCredentials'> | string
    encryptedApiKey?: Prisma.StringFilter<'UserJiraCredentials'> | string
    jiraBaseUrl?: Prisma.StringFilter<'UserJiraCredentials'> | string
    createdAt?: Prisma.DateTimeFilter<'UserJiraCredentials'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'UserJiraCredentials'> | Date | string
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  },
  'id' | 'userId'
>

export type UserJiraCredentialsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  jiraUsername?: Prisma.SortOrder
  encryptedApiKey?: Prisma.SortOrder
  jiraBaseUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.UserJiraCredentialsCountOrderByAggregateInput
  _max?: Prisma.UserJiraCredentialsMaxOrderByAggregateInput
  _min?: Prisma.UserJiraCredentialsMinOrderByAggregateInput
}

export type UserJiraCredentialsScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.UserJiraCredentialsScalarWhereWithAggregatesInput
    | Prisma.UserJiraCredentialsScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserJiraCredentialsScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.UserJiraCredentialsScalarWhereWithAggregatesInput
    | Prisma.UserJiraCredentialsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'UserJiraCredentials'> | string
  userId?: Prisma.StringWithAggregatesFilter<'UserJiraCredentials'> | string
  jiraUsername?:
    | Prisma.StringWithAggregatesFilter<'UserJiraCredentials'>
    | string
  encryptedApiKey?:
    | Prisma.StringWithAggregatesFilter<'UserJiraCredentials'>
    | string
  jiraBaseUrl?:
    | Prisma.StringWithAggregatesFilter<'UserJiraCredentials'>
    | string
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'UserJiraCredentials'>
    | Date
    | string
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<'UserJiraCredentials'>
    | Date
    | string
}

export type UserJiraCredentialsCreateInput = {
  id?: string
  jiraUsername: string
  encryptedApiKey: string
  jiraBaseUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutJiraCredentialsInput
}

export type UserJiraCredentialsUncheckedCreateInput = {
  id?: string
  userId: string
  jiraUsername: string
  encryptedApiKey: string
  jiraBaseUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type UserJiraCredentialsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jiraUsername?: Prisma.StringFieldUpdateOperationsInput | string
  encryptedApiKey?: Prisma.StringFieldUpdateOperationsInput | string
  jiraBaseUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutJiraCredentialsNestedInput
}

export type UserJiraCredentialsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  jiraUsername?: Prisma.StringFieldUpdateOperationsInput | string
  encryptedApiKey?: Prisma.StringFieldUpdateOperationsInput | string
  jiraBaseUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserJiraCredentialsCreateManyInput = {
  id?: string
  userId: string
  jiraUsername: string
  encryptedApiKey: string
  jiraBaseUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type UserJiraCredentialsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jiraUsername?: Prisma.StringFieldUpdateOperationsInput | string
  encryptedApiKey?: Prisma.StringFieldUpdateOperationsInput | string
  jiraBaseUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserJiraCredentialsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  jiraUsername?: Prisma.StringFieldUpdateOperationsInput | string
  encryptedApiKey?: Prisma.StringFieldUpdateOperationsInput | string
  jiraBaseUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserJiraCredentialsNullableScalarRelationFilter = {
  is?: Prisma.UserJiraCredentialsWhereInput | null
  isNot?: Prisma.UserJiraCredentialsWhereInput | null
}

export type UserJiraCredentialsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  jiraUsername?: Prisma.SortOrder
  encryptedApiKey?: Prisma.SortOrder
  jiraBaseUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserJiraCredentialsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  jiraUsername?: Prisma.SortOrder
  encryptedApiKey?: Prisma.SortOrder
  jiraBaseUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserJiraCredentialsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  jiraUsername?: Prisma.SortOrder
  encryptedApiKey?: Prisma.SortOrder
  jiraBaseUrl?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserJiraCredentialsCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedCreateWithoutUserInput
  >
  connectOrCreate?: Prisma.UserJiraCredentialsCreateOrConnectWithoutUserInput
  connect?: Prisma.UserJiraCredentialsWhereUniqueInput
}

export type UserJiraCredentialsUncheckedCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedCreateWithoutUserInput
  >
  connectOrCreate?: Prisma.UserJiraCredentialsCreateOrConnectWithoutUserInput
  connect?: Prisma.UserJiraCredentialsWhereUniqueInput
}

export type UserJiraCredentialsUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedCreateWithoutUserInput
  >
  connectOrCreate?: Prisma.UserJiraCredentialsCreateOrConnectWithoutUserInput
  upsert?: Prisma.UserJiraCredentialsUpsertWithoutUserInput
  disconnect?: Prisma.UserJiraCredentialsWhereInput | boolean
  delete?: Prisma.UserJiraCredentialsWhereInput | boolean
  connect?: Prisma.UserJiraCredentialsWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserJiraCredentialsUpdateToOneWithWhereWithoutUserInput,
      Prisma.UserJiraCredentialsUpdateWithoutUserInput
    >,
    Prisma.UserJiraCredentialsUncheckedUpdateWithoutUserInput
  >
}

export type UserJiraCredentialsUncheckedUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedCreateWithoutUserInput
  >
  connectOrCreate?: Prisma.UserJiraCredentialsCreateOrConnectWithoutUserInput
  upsert?: Prisma.UserJiraCredentialsUpsertWithoutUserInput
  disconnect?: Prisma.UserJiraCredentialsWhereInput | boolean
  delete?: Prisma.UserJiraCredentialsWhereInput | boolean
  connect?: Prisma.UserJiraCredentialsWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserJiraCredentialsUpdateToOneWithWhereWithoutUserInput,
      Prisma.UserJiraCredentialsUpdateWithoutUserInput
    >,
    Prisma.UserJiraCredentialsUncheckedUpdateWithoutUserInput
  >
}

export type UserJiraCredentialsCreateWithoutUserInput = {
  id?: string
  jiraUsername: string
  encryptedApiKey: string
  jiraBaseUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type UserJiraCredentialsUncheckedCreateWithoutUserInput = {
  id?: string
  jiraUsername: string
  encryptedApiKey: string
  jiraBaseUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type UserJiraCredentialsCreateOrConnectWithoutUserInput = {
  where: Prisma.UserJiraCredentialsWhereUniqueInput
  create: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedCreateWithoutUserInput
  >
}

export type UserJiraCredentialsUpsertWithoutUserInput = {
  update: Prisma.XOR<
    Prisma.UserJiraCredentialsUpdateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedUpdateWithoutUserInput
  >
  create: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedCreateWithoutUserInput
  >
  where?: Prisma.UserJiraCredentialsWhereInput
}

export type UserJiraCredentialsUpdateToOneWithWhereWithoutUserInput = {
  where?: Prisma.UserJiraCredentialsWhereInput
  data: Prisma.XOR<
    Prisma.UserJiraCredentialsUpdateWithoutUserInput,
    Prisma.UserJiraCredentialsUncheckedUpdateWithoutUserInput
  >
}

export type UserJiraCredentialsUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jiraUsername?: Prisma.StringFieldUpdateOperationsInput | string
  encryptedApiKey?: Prisma.StringFieldUpdateOperationsInput | string
  jiraBaseUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserJiraCredentialsUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  jiraUsername?: Prisma.StringFieldUpdateOperationsInput | string
  encryptedApiKey?: Prisma.StringFieldUpdateOperationsInput | string
  jiraBaseUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserJiraCredentialsSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    userId?: boolean
    jiraUsername?: boolean
    encryptedApiKey?: boolean
    jiraBaseUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['userJiraCredentials']
>

export type UserJiraCredentialsSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    userId?: boolean
    jiraUsername?: boolean
    encryptedApiKey?: boolean
    jiraBaseUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['userJiraCredentials']
>

export type UserJiraCredentialsSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    userId?: boolean
    jiraUsername?: boolean
    encryptedApiKey?: boolean
    jiraBaseUrl?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['userJiraCredentials']
>

export type UserJiraCredentialsSelectScalar = {
  id?: boolean
  userId?: boolean
  jiraUsername?: boolean
  encryptedApiKey?: boolean
  jiraBaseUrl?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type UserJiraCredentialsOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'userId'
  | 'jiraUsername'
  | 'encryptedApiKey'
  | 'jiraBaseUrl'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['userJiraCredentials']
>
export type UserJiraCredentialsInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type UserJiraCredentialsIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type UserJiraCredentialsIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $UserJiraCredentialsPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'UserJiraCredentials'
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      userId: string
      jiraUsername: string
      encryptedApiKey: string
      jiraBaseUrl: string
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['userJiraCredentials']
  >
  composites: {}
}

export type UserJiraCredentialsGetPayload<
  S extends boolean | null | undefined | UserJiraCredentialsDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$UserJiraCredentialsPayload, S>

export type UserJiraCredentialsCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  UserJiraCredentialsFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: UserJiraCredentialsCountAggregateInputType | true
}

export interface UserJiraCredentialsDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['UserJiraCredentials']
    meta: { name: 'UserJiraCredentials' }
  }
  /**
   * Find zero or one UserJiraCredentials that matches the filter.
   * @param {UserJiraCredentialsFindUniqueArgs} args - Arguments to find a UserJiraCredentials
   * @example
   * // Get one UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserJiraCredentialsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, UserJiraCredentialsFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one UserJiraCredentials that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserJiraCredentialsFindUniqueOrThrowArgs} args - Arguments to find a UserJiraCredentials
   * @example
   * // Get one UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserJiraCredentialsFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      UserJiraCredentialsFindUniqueOrThrowArgs<ExtArgs>
    >
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first UserJiraCredentials that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsFindFirstArgs} args - Arguments to find a UserJiraCredentials
   * @example
   * // Get one UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserJiraCredentialsFindFirstArgs>(
    args?: Prisma.SelectSubset<T, UserJiraCredentialsFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first UserJiraCredentials that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsFindFirstOrThrowArgs} args - Arguments to find a UserJiraCredentials
   * @example
   * // Get one UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserJiraCredentialsFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      UserJiraCredentialsFindFirstOrThrowArgs<ExtArgs>
    >
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more UserJiraCredentials that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.findMany()
   *
   * // Get first 10 UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const userJiraCredentialsWithIdOnly = await prisma.userJiraCredentials.findMany({ select: { id: true } })
   *
   */
  findMany<T extends UserJiraCredentialsFindManyArgs>(
    args?: Prisma.SelectSubset<T, UserJiraCredentialsFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a UserJiraCredentials.
   * @param {UserJiraCredentialsCreateArgs} args - Arguments to create a UserJiraCredentials.
   * @example
   * // Create one UserJiraCredentials
   * const UserJiraCredentials = await prisma.userJiraCredentials.create({
   *   data: {
   *     // ... data to create a UserJiraCredentials
   *   }
   * })
   *
   */
  create<T extends UserJiraCredentialsCreateArgs>(
    args: Prisma.SelectSubset<T, UserJiraCredentialsCreateArgs<ExtArgs>>
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many UserJiraCredentials.
   * @param {UserJiraCredentialsCreateManyArgs} args - Arguments to create many UserJiraCredentials.
   * @example
   * // Create many UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends UserJiraCredentialsCreateManyArgs>(
    args?: Prisma.SelectSubset<T, UserJiraCredentialsCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many UserJiraCredentials and returns the data saved in the database.
   * @param {UserJiraCredentialsCreateManyAndReturnArgs} args - Arguments to create many UserJiraCredentials.
   * @example
   * // Create many UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many UserJiraCredentials and only return the `id`
   * const userJiraCredentialsWithIdOnly = await prisma.userJiraCredentials.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends UserJiraCredentialsCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      UserJiraCredentialsCreateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a UserJiraCredentials.
   * @param {UserJiraCredentialsDeleteArgs} args - Arguments to delete one UserJiraCredentials.
   * @example
   * // Delete one UserJiraCredentials
   * const UserJiraCredentials = await prisma.userJiraCredentials.delete({
   *   where: {
   *     // ... filter to delete one UserJiraCredentials
   *   }
   * })
   *
   */
  delete<T extends UserJiraCredentialsDeleteArgs>(
    args: Prisma.SelectSubset<T, UserJiraCredentialsDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one UserJiraCredentials.
   * @param {UserJiraCredentialsUpdateArgs} args - Arguments to update one UserJiraCredentials.
   * @example
   * // Update one UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends UserJiraCredentialsUpdateArgs>(
    args: Prisma.SelectSubset<T, UserJiraCredentialsUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more UserJiraCredentials.
   * @param {UserJiraCredentialsDeleteManyArgs} args - Arguments to filter UserJiraCredentials to delete.
   * @example
   * // Delete a few UserJiraCredentials
   * const { count } = await prisma.userJiraCredentials.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends UserJiraCredentialsDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, UserJiraCredentialsDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UserJiraCredentials.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends UserJiraCredentialsUpdateManyArgs>(
    args: Prisma.SelectSubset<T, UserJiraCredentialsUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UserJiraCredentials and returns the data updated in the database.
   * @param {UserJiraCredentialsUpdateManyAndReturnArgs} args - Arguments to update many UserJiraCredentials.
   * @example
   * // Update many UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more UserJiraCredentials and only return the `id`
   * const userJiraCredentialsWithIdOnly = await prisma.userJiraCredentials.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends UserJiraCredentialsUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      UserJiraCredentialsUpdateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one UserJiraCredentials.
   * @param {UserJiraCredentialsUpsertArgs} args - Arguments to update or create a UserJiraCredentials.
   * @example
   * // Update or create a UserJiraCredentials
   * const userJiraCredentials = await prisma.userJiraCredentials.upsert({
   *   create: {
   *     // ... data to create a UserJiraCredentials
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the UserJiraCredentials we want to update
   *   }
   * })
   */
  upsert<T extends UserJiraCredentialsUpsertArgs>(
    args: Prisma.SelectSubset<T, UserJiraCredentialsUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__UserJiraCredentialsClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserJiraCredentialsPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of UserJiraCredentials.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsCountArgs} args - Arguments to filter UserJiraCredentials to count.
   * @example
   * // Count the number of UserJiraCredentials
   * const count = await prisma.userJiraCredentials.count({
   *   where: {
   *     // ... the filter for the UserJiraCredentials we want to count
   *   }
   * })
   **/
  count<T extends UserJiraCredentialsCountArgs>(
    args?: Prisma.Subset<T, UserJiraCredentialsCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            UserJiraCredentialsCountAggregateOutputType
          >
      : number
  >

  /**
   * Allows you to perform aggregations operations on a UserJiraCredentials.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends UserJiraCredentialsAggregateArgs>(
    args: Prisma.Subset<T, UserJiraCredentialsAggregateArgs>
  ): Prisma.PrismaPromise<GetUserJiraCredentialsAggregateType<T>>

  /**
   * Group by UserJiraCredentials.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserJiraCredentialsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends UserJiraCredentialsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserJiraCredentialsGroupByArgs['orderBy'] }
      : { orderBy?: UserJiraCredentialsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      UserJiraCredentialsGroupByArgs,
      OrderByArg
    > &
      InputErrors
  ): {} extends InputErrors
    ? GetUserJiraCredentialsGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserJiraCredentials model
   */
  readonly fields: UserJiraCredentialsFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for UserJiraCredentials.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserJiraCredentialsClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the UserJiraCredentials model
 */
export interface UserJiraCredentialsFieldRefs {
  readonly id: Prisma.FieldRef<'UserJiraCredentials', 'String'>
  readonly userId: Prisma.FieldRef<'UserJiraCredentials', 'String'>
  readonly jiraUsername: Prisma.FieldRef<'UserJiraCredentials', 'String'>
  readonly encryptedApiKey: Prisma.FieldRef<'UserJiraCredentials', 'String'>
  readonly jiraBaseUrl: Prisma.FieldRef<'UserJiraCredentials', 'String'>
  readonly createdAt: Prisma.FieldRef<'UserJiraCredentials', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'UserJiraCredentials', 'DateTime'>
}

// Custom InputTypes
/**
 * UserJiraCredentials findUnique
 */
export type UserJiraCredentialsFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * Filter, which UserJiraCredentials to fetch.
   */
  where: Prisma.UserJiraCredentialsWhereUniqueInput
}

/**
 * UserJiraCredentials findUniqueOrThrow
 */
export type UserJiraCredentialsFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * Filter, which UserJiraCredentials to fetch.
   */
  where: Prisma.UserJiraCredentialsWhereUniqueInput
}

/**
 * UserJiraCredentials findFirst
 */
export type UserJiraCredentialsFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * Filter, which UserJiraCredentials to fetch.
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of UserJiraCredentials to fetch.
   */
  orderBy?:
    | Prisma.UserJiraCredentialsOrderByWithRelationInput
    | Prisma.UserJiraCredentialsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for UserJiraCredentials.
   */
  cursor?: Prisma.UserJiraCredentialsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` UserJiraCredentials from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` UserJiraCredentials.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of UserJiraCredentials.
   */
  distinct?:
    | Prisma.UserJiraCredentialsScalarFieldEnum
    | Prisma.UserJiraCredentialsScalarFieldEnum[]
}

/**
 * UserJiraCredentials findFirstOrThrow
 */
export type UserJiraCredentialsFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * Filter, which UserJiraCredentials to fetch.
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of UserJiraCredentials to fetch.
   */
  orderBy?:
    | Prisma.UserJiraCredentialsOrderByWithRelationInput
    | Prisma.UserJiraCredentialsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for UserJiraCredentials.
   */
  cursor?: Prisma.UserJiraCredentialsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` UserJiraCredentials from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` UserJiraCredentials.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of UserJiraCredentials.
   */
  distinct?:
    | Prisma.UserJiraCredentialsScalarFieldEnum
    | Prisma.UserJiraCredentialsScalarFieldEnum[]
}

/**
 * UserJiraCredentials findMany
 */
export type UserJiraCredentialsFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * Filter, which UserJiraCredentials to fetch.
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of UserJiraCredentials to fetch.
   */
  orderBy?:
    | Prisma.UserJiraCredentialsOrderByWithRelationInput
    | Prisma.UserJiraCredentialsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing UserJiraCredentials.
   */
  cursor?: Prisma.UserJiraCredentialsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` UserJiraCredentials from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` UserJiraCredentials.
   */
  skip?: number
  distinct?:
    | Prisma.UserJiraCredentialsScalarFieldEnum
    | Prisma.UserJiraCredentialsScalarFieldEnum[]
}

/**
 * UserJiraCredentials create
 */
export type UserJiraCredentialsCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * The data needed to create a UserJiraCredentials.
   */
  data: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateInput,
    Prisma.UserJiraCredentialsUncheckedCreateInput
  >
}

/**
 * UserJiraCredentials createMany
 */
export type UserJiraCredentialsCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many UserJiraCredentials.
   */
  data:
    | Prisma.UserJiraCredentialsCreateManyInput
    | Prisma.UserJiraCredentialsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * UserJiraCredentials createManyAndReturn
 */
export type UserJiraCredentialsCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * The data used to create many UserJiraCredentials.
   */
  data:
    | Prisma.UserJiraCredentialsCreateManyInput
    | Prisma.UserJiraCredentialsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * UserJiraCredentials update
 */
export type UserJiraCredentialsUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * The data needed to update a UserJiraCredentials.
   */
  data: Prisma.XOR<
    Prisma.UserJiraCredentialsUpdateInput,
    Prisma.UserJiraCredentialsUncheckedUpdateInput
  >
  /**
   * Choose, which UserJiraCredentials to update.
   */
  where: Prisma.UserJiraCredentialsWhereUniqueInput
}

/**
 * UserJiraCredentials updateMany
 */
export type UserJiraCredentialsUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update UserJiraCredentials.
   */
  data: Prisma.XOR<
    Prisma.UserJiraCredentialsUpdateManyMutationInput,
    Prisma.UserJiraCredentialsUncheckedUpdateManyInput
  >
  /**
   * Filter which UserJiraCredentials to update
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * Limit how many UserJiraCredentials to update.
   */
  limit?: number
}

/**
 * UserJiraCredentials updateManyAndReturn
 */
export type UserJiraCredentialsUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * The data used to update UserJiraCredentials.
   */
  data: Prisma.XOR<
    Prisma.UserJiraCredentialsUpdateManyMutationInput,
    Prisma.UserJiraCredentialsUncheckedUpdateManyInput
  >
  /**
   * Filter which UserJiraCredentials to update
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * Limit how many UserJiraCredentials to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * UserJiraCredentials upsert
 */
export type UserJiraCredentialsUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * The filter to search for the UserJiraCredentials to update in case it exists.
   */
  where: Prisma.UserJiraCredentialsWhereUniqueInput
  /**
   * In case the UserJiraCredentials found by the `where` argument doesn't exist, create a new UserJiraCredentials with this data.
   */
  create: Prisma.XOR<
    Prisma.UserJiraCredentialsCreateInput,
    Prisma.UserJiraCredentialsUncheckedCreateInput
  >
  /**
   * In case the UserJiraCredentials was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.UserJiraCredentialsUpdateInput,
    Prisma.UserJiraCredentialsUncheckedUpdateInput
  >
}

/**
 * UserJiraCredentials delete
 */
export type UserJiraCredentialsDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
  /**
   * Filter which UserJiraCredentials to delete.
   */
  where: Prisma.UserJiraCredentialsWhereUniqueInput
}

/**
 * UserJiraCredentials deleteMany
 */
export type UserJiraCredentialsDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which UserJiraCredentials to delete
   */
  where?: Prisma.UserJiraCredentialsWhereInput
  /**
   * Limit how many UserJiraCredentials to delete.
   */
  limit?: number
}

/**
 * UserJiraCredentials without action
 */
export type UserJiraCredentialsDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserJiraCredentials
   */
  select?: Prisma.UserJiraCredentialsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserJiraCredentials
   */
  omit?: Prisma.UserJiraCredentialsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserJiraCredentialsInclude<ExtArgs> | null
}
