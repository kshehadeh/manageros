/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from '@prisma/client/runtime/index-browser'

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal

export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.DbNull,
  JsonNull: runtime.objectEnumValues.classes.JsonNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.JsonNull,
  AnyNull: runtime.objectEnumValues.classes.AnyNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.AnyNull,
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull

export const ModelName = {
  Organization: 'Organization',
  User: 'User',
  Team: 'Team',
  Person: 'Person',
  Initiative: 'Initiative',
  InitiativeOwner: 'InitiativeOwner',
  Objective: 'Objective',
  Task: 'Task',
  CheckIn: 'CheckIn',
  OneOnOne: 'OneOnOne',
  IDP: 'IDP',
  IDPGoal: 'IDPGoal',
  Feedback: 'Feedback',
  Metric: 'Metric',
  Tag: 'Tag',
  TagMap: 'TagMap',
  OrganizationInvitation: 'OrganizationInvitation',
  Event: 'Event',
  UserJiraCredentials: 'UserJiraCredentials',
  PersonJiraAccount: 'PersonJiraAccount',
  UserGithubCredentials: 'UserGithubCredentials',
  PersonGithubAccount: 'PersonGithubAccount',
  FeedbackCampaign: 'FeedbackCampaign',
  FeedbackResponse: 'FeedbackResponse',
  FeedbackTemplate: 'FeedbackTemplate',
  FeedbackQuestion: 'FeedbackQuestion',
  Meeting: 'Meeting',
  MeetingParticipant: 'MeetingParticipant',
  MeetingInstance: 'MeetingInstance',
  MeetingInstanceParticipant: 'MeetingInstanceParticipant',
  PersonSynopsis: 'PersonSynopsis',
  EntityLink: 'EntityLink',
  JobRole: 'JobRole',
  JobLevel: 'JobLevel',
  JobDomain: 'JobDomain',
  PasswordResetToken: 'PasswordResetToken',
  Notification: 'Notification',
  NotificationResponse: 'NotificationResponse',
  CronJobExecution: 'CronJobExecution',
  Report: 'Report',
  ReportInstance: 'ReportInstance',
  Note: 'Note',
  FileAttachment: 'FileAttachment',
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
} as const)

export type TransactionIsolationLevel =
  (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]

export const OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type OrganizationScalarFieldEnum =
  (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum]

export const UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  passwordHash: 'passwordHash',
  role: 'role',
  organizationId: 'organizationId',
  personId: 'personId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type UserScalarFieldEnum =
  (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]

export const TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  avatar: 'avatar',
  organizationId: 'organizationId',
  parentId: 'parentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type TeamScalarFieldEnum =
  (typeof TeamScalarFieldEnum)[keyof typeof TeamScalarFieldEnum]

export const PersonScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  role: 'role',
  status: 'status',
  birthday: 'birthday',
  avatar: 'avatar',
  employeeType: 'employeeType',
  organizationId: 'organizationId',
  teamId: 'teamId',
  managerId: 'managerId',
  jobRoleId: 'jobRoleId',
  startedAt: 'startedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type PersonScalarFieldEnum =
  (typeof PersonScalarFieldEnum)[keyof typeof PersonScalarFieldEnum]

export const InitiativeScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  organizationId: 'organizationId',
  title: 'title',
  summary: 'summary',
  outcome: 'outcome',
  startDate: 'startDate',
  targetDate: 'targetDate',
  status: 'status',
  rag: 'rag',
  confidence: 'confidence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type InitiativeScalarFieldEnum =
  (typeof InitiativeScalarFieldEnum)[keyof typeof InitiativeScalarFieldEnum]

export const InitiativeOwnerScalarFieldEnum = {
  initiativeId: 'initiativeId',
  personId: 'personId',
  role: 'role',
} as const

export type InitiativeOwnerScalarFieldEnum =
  (typeof InitiativeOwnerScalarFieldEnum)[keyof typeof InitiativeOwnerScalarFieldEnum]

export const ObjectiveScalarFieldEnum = {
  id: 'id',
  initiativeId: 'initiativeId',
  title: 'title',
  keyResult: 'keyResult',
  sortIndex: 'sortIndex',
} as const

export type ObjectiveScalarFieldEnum =
  (typeof ObjectiveScalarFieldEnum)[keyof typeof ObjectiveScalarFieldEnum]

export const TaskScalarFieldEnum = {
  id: 'id',
  objectiveId: 'objectiveId',
  initiativeId: 'initiativeId',
  title: 'title',
  description: 'description',
  assigneeId: 'assigneeId',
  createdById: 'createdById',
  status: 'status',
  priority: 'priority',
  estimate: 'estimate',
  dueDate: 'dueDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt',
} as const

export type TaskScalarFieldEnum =
  (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]

export const CheckInScalarFieldEnum = {
  id: 'id',
  initiativeId: 'initiativeId',
  weekOf: 'weekOf',
  rag: 'rag',
  confidence: 'confidence',
  summary: 'summary',
  blockers: 'blockers',
  nextSteps: 'nextSteps',
  createdById: 'createdById',
  createdAt: 'createdAt',
} as const

export type CheckInScalarFieldEnum =
  (typeof CheckInScalarFieldEnum)[keyof typeof CheckInScalarFieldEnum]

export const OneOnOneScalarFieldEnum = {
  id: 'id',
  managerId: 'managerId',
  reportId: 'reportId',
  scheduledAt: 'scheduledAt',
  notes: 'notes',
} as const

export type OneOnOneScalarFieldEnum =
  (typeof OneOnOneScalarFieldEnum)[keyof typeof OneOnOneScalarFieldEnum]

export const IDPScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  period: 'period',
  summary: 'summary',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type IDPScalarFieldEnum =
  (typeof IDPScalarFieldEnum)[keyof typeof IDPScalarFieldEnum]

export const IDPGoalScalarFieldEnum = {
  id: 'id',
  idpId: 'idpId',
  title: 'title',
  metric: 'metric',
  target: 'target',
  status: 'status',
  dueDate: 'dueDate',
} as const

export type IDPGoalScalarFieldEnum =
  (typeof IDPGoalScalarFieldEnum)[keyof typeof IDPGoalScalarFieldEnum]

export const FeedbackScalarFieldEnum = {
  id: 'id',
  aboutId: 'aboutId',
  fromId: 'fromId',
  kind: 'kind',
  isPrivate: 'isPrivate',
  body: 'body',
  createdAt: 'createdAt',
} as const

export type FeedbackScalarFieldEnum =
  (typeof FeedbackScalarFieldEnum)[keyof typeof FeedbackScalarFieldEnum]

export const MetricScalarFieldEnum = {
  id: 'id',
  initiativeId: 'initiativeId',
  name: 'name',
  unit: 'unit',
  value: 'value',
  capturedAt: 'capturedAt',
} as const

export type MetricScalarFieldEnum =
  (typeof MetricScalarFieldEnum)[keyof typeof MetricScalarFieldEnum]

export const TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  color: 'color',
} as const

export type TagScalarFieldEnum =
  (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]

export const TagMapScalarFieldEnum = {
  tagId: 'tagId',
  entity: 'entity',
  entityId: 'entityId',
} as const

export type TagMapScalarFieldEnum =
  (typeof TagMapScalarFieldEnum)[keyof typeof TagMapScalarFieldEnum]

export const OrganizationInvitationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  organizationId: 'organizationId',
  invitedById: 'invitedById',
  status: 'status',
  expiresAt: 'expiresAt',
  acceptedAt: 'acceptedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type OrganizationInvitationScalarFieldEnum =
  (typeof OrganizationInvitationScalarFieldEnum)[keyof typeof OrganizationInvitationScalarFieldEnum]

export const EventScalarFieldEnum = {
  id: 'id',
  actorId: 'actorId',
  entity: 'entity',
  entityId: 'entityId',
  action: 'action',
  metadata: 'metadata',
  createdAt: 'createdAt',
} as const

export type EventScalarFieldEnum =
  (typeof EventScalarFieldEnum)[keyof typeof EventScalarFieldEnum]

export const UserJiraCredentialsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jiraUsername: 'jiraUsername',
  encryptedApiKey: 'encryptedApiKey',
  jiraBaseUrl: 'jiraBaseUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type UserJiraCredentialsScalarFieldEnum =
  (typeof UserJiraCredentialsScalarFieldEnum)[keyof typeof UserJiraCredentialsScalarFieldEnum]

export const PersonJiraAccountScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  jiraAccountId: 'jiraAccountId',
  jiraEmail: 'jiraEmail',
  jiraDisplayName: 'jiraDisplayName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type PersonJiraAccountScalarFieldEnum =
  (typeof PersonJiraAccountScalarFieldEnum)[keyof typeof PersonJiraAccountScalarFieldEnum]

export const UserGithubCredentialsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  githubUsername: 'githubUsername',
  encryptedPat: 'encryptedPat',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type UserGithubCredentialsScalarFieldEnum =
  (typeof UserGithubCredentialsScalarFieldEnum)[keyof typeof UserGithubCredentialsScalarFieldEnum]

export const PersonGithubAccountScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  githubUsername: 'githubUsername',
  githubDisplayName: 'githubDisplayName',
  githubEmail: 'githubEmail',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type PersonGithubAccountScalarFieldEnum =
  (typeof PersonGithubAccountScalarFieldEnum)[keyof typeof PersonGithubAccountScalarFieldEnum]

export const FeedbackCampaignScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId',
  targetPersonId: 'targetPersonId',
  templateId: 'templateId',
  startDate: 'startDate',
  endDate: 'endDate',
  inviteEmails: 'inviteEmails',
  inviteLink: 'inviteLink',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type FeedbackCampaignScalarFieldEnum =
  (typeof FeedbackCampaignScalarFieldEnum)[keyof typeof FeedbackCampaignScalarFieldEnum]

export const FeedbackResponseScalarFieldEnum = {
  id: 'id',
  campaignId: 'campaignId',
  responderEmail: 'responderEmail',
  responses: 'responses',
  submittedAt: 'submittedAt',
} as const

export type FeedbackResponseScalarFieldEnum =
  (typeof FeedbackResponseScalarFieldEnum)[keyof typeof FeedbackResponseScalarFieldEnum]

export const FeedbackTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type FeedbackTemplateScalarFieldEnum =
  (typeof FeedbackTemplateScalarFieldEnum)[keyof typeof FeedbackTemplateScalarFieldEnum]

export const FeedbackQuestionScalarFieldEnum = {
  id: 'id',
  templateId: 'templateId',
  question: 'question',
  type: 'type',
  required: 'required',
  options: 'options',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type FeedbackQuestionScalarFieldEnum =
  (typeof FeedbackQuestionScalarFieldEnum)[keyof typeof FeedbackQuestionScalarFieldEnum]

export const MeetingScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  scheduledAt: 'scheduledAt',
  duration: 'duration',
  location: 'location',
  notes: 'notes',
  isRecurring: 'isRecurring',
  recurrenceType: 'recurrenceType',
  isPrivate: 'isPrivate',
  organizationId: 'organizationId',
  teamId: 'teamId',
  initiativeId: 'initiativeId',
  ownerId: 'ownerId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type MeetingScalarFieldEnum =
  (typeof MeetingScalarFieldEnum)[keyof typeof MeetingScalarFieldEnum]

export const MeetingParticipantScalarFieldEnum = {
  id: 'id',
  meetingId: 'meetingId',
  personId: 'personId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type MeetingParticipantScalarFieldEnum =
  (typeof MeetingParticipantScalarFieldEnum)[keyof typeof MeetingParticipantScalarFieldEnum]

export const MeetingInstanceScalarFieldEnum = {
  id: 'id',
  meetingId: 'meetingId',
  scheduledAt: 'scheduledAt',
  notes: 'notes',
  isPrivate: 'isPrivate',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type MeetingInstanceScalarFieldEnum =
  (typeof MeetingInstanceScalarFieldEnum)[keyof typeof MeetingInstanceScalarFieldEnum]

export const MeetingInstanceParticipantScalarFieldEnum = {
  id: 'id',
  meetingInstanceId: 'meetingInstanceId',
  personId: 'personId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type MeetingInstanceParticipantScalarFieldEnum =
  (typeof MeetingInstanceParticipantScalarFieldEnum)[keyof typeof MeetingInstanceParticipantScalarFieldEnum]

export const PersonSynopsisScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  fromDate: 'fromDate',
  toDate: 'toDate',
  includeFeedback: 'includeFeedback',
  content: 'content',
  sources: 'sources',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type PersonSynopsisScalarFieldEnum =
  (typeof PersonSynopsisScalarFieldEnum)[keyof typeof PersonSynopsisScalarFieldEnum]

export const EntityLinkScalarFieldEnum = {
  id: 'id',
  url: 'url',
  title: 'title',
  description: 'description',
  entityType: 'entityType',
  entityId: 'entityId',
  organizationId: 'organizationId',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type EntityLinkScalarFieldEnum =
  (typeof EntityLinkScalarFieldEnum)[keyof typeof EntityLinkScalarFieldEnum]

export const JobRoleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  organizationId: 'organizationId',
  levelId: 'levelId',
  domainId: 'domainId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type JobRoleScalarFieldEnum =
  (typeof JobRoleScalarFieldEnum)[keyof typeof JobRoleScalarFieldEnum]

export const JobLevelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  order: 'order',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type JobLevelScalarFieldEnum =
  (typeof JobLevelScalarFieldEnum)[keyof typeof JobLevelScalarFieldEnum]

export const JobDomainScalarFieldEnum = {
  id: 'id',
  name: 'name',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type JobDomainScalarFieldEnum =
  (typeof JobDomainScalarFieldEnum)[keyof typeof JobDomainScalarFieldEnum]

export const PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  email: 'email',
  token: 'token',
  expires: 'expires',
  createdAt: 'createdAt',
} as const

export type PasswordResetTokenScalarFieldEnum =
  (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]

export const NotificationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  message: 'message',
  type: 'type',
  organizationId: 'organizationId',
  userId: 'userId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type NotificationScalarFieldEnum =
  (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]

export const NotificationResponseScalarFieldEnum = {
  id: 'id',
  notificationId: 'notificationId',
  userId: 'userId',
  status: 'status',
  readAt: 'readAt',
  dismissedAt: 'dismissedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type NotificationResponseScalarFieldEnum =
  (typeof NotificationResponseScalarFieldEnum)[keyof typeof NotificationResponseScalarFieldEnum]

export const CronJobExecutionScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  jobName: 'jobName',
  organizationId: 'organizationId',
  status: 'status',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  notificationsCreated: 'notificationsCreated',
  error: 'error',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type CronJobExecutionScalarFieldEnum =
  (typeof CronJobExecutionScalarFieldEnum)[keyof typeof CronJobExecutionScalarFieldEnum]

export const ReportScalarFieldEnum = {
  id: 'id',
  codeId: 'codeId',
  name: 'name',
  description: 'description',
  ownerId: 'ownerId',
  inputSchema: 'inputSchema',
  enabled: 'enabled',
  renderers: 'renderers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type ReportScalarFieldEnum =
  (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]

export const ReportInstanceScalarFieldEnum = {
  id: 'id',
  reportId: 'reportId',
  userId: 'userId',
  organizationId: 'organizationId',
  renderer: 'renderer',
  input: 'input',
  output: 'output',
  status: 'status',
  errorMessage: 'errorMessage',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
} as const

export type ReportInstanceScalarFieldEnum =
  (typeof ReportInstanceScalarFieldEnum)[keyof typeof ReportInstanceScalarFieldEnum]

export const NoteScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  entityId: 'entityId',
  organizationId: 'organizationId',
  content: 'content',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
} as const

export type NoteScalarFieldEnum =
  (typeof NoteScalarFieldEnum)[keyof typeof NoteScalarFieldEnum]

export const FileAttachmentScalarFieldEnum = {
  id: 'id',
  noteId: 'noteId',
  entityType: 'entityType',
  entityId: 'entityId',
  organizationId: 'organizationId',
  fileName: 'fileName',
  originalName: 'originalName',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  r2Key: 'r2Key',
  r2Url: 'r2Url',
  uploadedById: 'uploadedById',
  createdAt: 'createdAt',
} as const

export type FileAttachmentScalarFieldEnum =
  (typeof FileAttachmentScalarFieldEnum)[keyof typeof FileAttachmentScalarFieldEnum]

export const SortOrder = {
  asc: 'asc',
  desc: 'desc',
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]

export const JsonNullValueInput = {
  JsonNull: JsonNull,
} as const

export type JsonNullValueInput =
  (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]

export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull,
} as const

export type NullableJsonNullValueInput =
  (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]

export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive',
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]

export const NullsOrder = {
  first: 'first',
  last: 'last',
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull,
} as const

export type JsonNullValueFilter =
  (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]
