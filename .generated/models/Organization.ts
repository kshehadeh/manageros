/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Organization` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model Organization
 *
 */
export type OrganizationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$OrganizationPayload>

export type AggregateOrganization = {
  _count: OrganizationCountAggregateOutputType | null
  _min: OrganizationMinAggregateOutputType | null
  _max: OrganizationMaxAggregateOutputType | null
}

export type OrganizationMinAggregateOutputType = {
  id: string | null
  name: string | null
  slug: string | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OrganizationMaxAggregateOutputType = {
  id: string | null
  name: string | null
  slug: string | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OrganizationCountAggregateOutputType = {
  id: number
  name: number
  slug: number
  description: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type OrganizationMinAggregateInputType = {
  id?: true
  name?: true
  slug?: true
  description?: true
  createdAt?: true
  updatedAt?: true
}

export type OrganizationMaxAggregateInputType = {
  id?: true
  name?: true
  slug?: true
  description?: true
  createdAt?: true
  updatedAt?: true
}

export type OrganizationCountAggregateInputType = {
  id?: true
  name?: true
  slug?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type OrganizationAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Organization to aggregate.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Organizations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOrderByWithRelationInput
    | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Organizations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Organizations
   **/
  _count?: true | OrganizationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: OrganizationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: OrganizationMaxAggregateInputType
}

export type GetOrganizationAggregateType<T extends OrganizationAggregateArgs> =
  {
    [P in keyof T & keyof AggregateOrganization]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : Prisma.GetScalarType<T[P], AggregateOrganization[P]>
      : Prisma.GetScalarType<T[P], AggregateOrganization[P]>
  }

export type OrganizationGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OrganizationWhereInput
  orderBy?:
    | Prisma.OrganizationOrderByWithAggregationInput
    | Prisma.OrganizationOrderByWithAggregationInput[]
  by: Prisma.OrganizationScalarFieldEnum[] | Prisma.OrganizationScalarFieldEnum
  having?: Prisma.OrganizationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OrganizationCountAggregateInputType | true
  _min?: OrganizationMinAggregateInputType
  _max?: OrganizationMaxAggregateInputType
}

export type OrganizationGroupByOutputType = {
  id: string
  name: string
  slug: string
  description: string | null
  createdAt: Date
  updatedAt: Date
  _count: OrganizationCountAggregateOutputType | null
  _min: OrganizationMinAggregateOutputType | null
  _max: OrganizationMaxAggregateOutputType | null
}

type GetOrganizationGroupByPayload<T extends OrganizationGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<OrganizationGroupByOutputType, T['by']> & {
        [P in keyof T & keyof OrganizationGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OrganizationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OrganizationGroupByOutputType[P]>
      }
    >
  >

export type OrganizationWhereInput = {
  AND?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
  OR?: Prisma.OrganizationWhereInput[]
  NOT?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
  id?: Prisma.StringFilter<'Organization'> | string
  name?: Prisma.StringFilter<'Organization'> | string
  slug?: Prisma.StringFilter<'Organization'> | string
  description?: Prisma.StringNullableFilter<'Organization'> | string | null
  createdAt?: Prisma.DateTimeFilter<'Organization'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Organization'> | Date | string
  users?: Prisma.UserListRelationFilter
  teams?: Prisma.TeamListRelationFilter
  people?: Prisma.PersonListRelationFilter
  initiatives?: Prisma.InitiativeListRelationFilter
  invitations?: Prisma.OrganizationInvitationListRelationFilter
  meetings?: Prisma.MeetingListRelationFilter
  meetingInstances?: Prisma.MeetingInstanceListRelationFilter
  entityLinks?: Prisma.EntityLinkListRelationFilter
  jobRoles?: Prisma.JobRoleListRelationFilter
  levels?: Prisma.JobLevelListRelationFilter
  domains?: Prisma.JobDomainListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  reportInstances?: Prisma.ReportInstanceListRelationFilter
  cronJobExecutions?: Prisma.CronJobExecutionListRelationFilter
  notes?: Prisma.NoteListRelationFilter
  fileAttachments?: Prisma.FileAttachmentListRelationFilter
}

export type OrganizationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  users?: Prisma.UserOrderByRelationAggregateInput
  teams?: Prisma.TeamOrderByRelationAggregateInput
  people?: Prisma.PersonOrderByRelationAggregateInput
  initiatives?: Prisma.InitiativeOrderByRelationAggregateInput
  invitations?: Prisma.OrganizationInvitationOrderByRelationAggregateInput
  meetings?: Prisma.MeetingOrderByRelationAggregateInput
  meetingInstances?: Prisma.MeetingInstanceOrderByRelationAggregateInput
  entityLinks?: Prisma.EntityLinkOrderByRelationAggregateInput
  jobRoles?: Prisma.JobRoleOrderByRelationAggregateInput
  levels?: Prisma.JobLevelOrderByRelationAggregateInput
  domains?: Prisma.JobDomainOrderByRelationAggregateInput
  notifications?: Prisma.NotificationOrderByRelationAggregateInput
  reportInstances?: Prisma.ReportInstanceOrderByRelationAggregateInput
  cronJobExecutions?: Prisma.CronJobExecutionOrderByRelationAggregateInput
  notes?: Prisma.NoteOrderByRelationAggregateInput
  fileAttachments?: Prisma.FileAttachmentOrderByRelationAggregateInput
}

export type OrganizationWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    slug?: string
    AND?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
    OR?: Prisma.OrganizationWhereInput[]
    NOT?: Prisma.OrganizationWhereInput | Prisma.OrganizationWhereInput[]
    name?: Prisma.StringFilter<'Organization'> | string
    description?: Prisma.StringNullableFilter<'Organization'> | string | null
    createdAt?: Prisma.DateTimeFilter<'Organization'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'Organization'> | Date | string
    users?: Prisma.UserListRelationFilter
    teams?: Prisma.TeamListRelationFilter
    people?: Prisma.PersonListRelationFilter
    initiatives?: Prisma.InitiativeListRelationFilter
    invitations?: Prisma.OrganizationInvitationListRelationFilter
    meetings?: Prisma.MeetingListRelationFilter
    meetingInstances?: Prisma.MeetingInstanceListRelationFilter
    entityLinks?: Prisma.EntityLinkListRelationFilter
    jobRoles?: Prisma.JobRoleListRelationFilter
    levels?: Prisma.JobLevelListRelationFilter
    domains?: Prisma.JobDomainListRelationFilter
    notifications?: Prisma.NotificationListRelationFilter
    reportInstances?: Prisma.ReportInstanceListRelationFilter
    cronJobExecutions?: Prisma.CronJobExecutionListRelationFilter
    notes?: Prisma.NoteListRelationFilter
    fileAttachments?: Prisma.FileAttachmentListRelationFilter
  },
  'id' | 'slug'
>

export type OrganizationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.OrganizationCountOrderByAggregateInput
  _max?: Prisma.OrganizationMaxOrderByAggregateInput
  _min?: Prisma.OrganizationMinOrderByAggregateInput
}

export type OrganizationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.OrganizationScalarWhereWithAggregatesInput
    | Prisma.OrganizationScalarWhereWithAggregatesInput[]
  OR?: Prisma.OrganizationScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.OrganizationScalarWhereWithAggregatesInput
    | Prisma.OrganizationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'Organization'> | string
  name?: Prisma.StringWithAggregatesFilter<'Organization'> | string
  slug?: Prisma.StringWithAggregatesFilter<'Organization'> | string
  description?:
    | Prisma.StringNullableWithAggregatesFilter<'Organization'>
    | string
    | null
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'Organization'>
    | Date
    | string
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<'Organization'>
    | Date
    | string
}

export type OrganizationCreateInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateManyInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationNullableScalarRelationFilter = {
  is?: Prisma.OrganizationWhereInput | null
  isNot?: Prisma.OrganizationWhereInput | null
}

export type OrganizationScalarRelationFilter = {
  is?: Prisma.OrganizationWhereInput
  isNot?: Prisma.OrganizationWhereInput
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type OrganizationCreateNestedOneWithoutUsersInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutUsersInput,
    Prisma.OrganizationUncheckedCreateWithoutUsersInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutUsersInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneWithoutUsersNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutUsersInput,
    Prisma.OrganizationUncheckedCreateWithoutUsersInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutUsersInput
  upsert?: Prisma.OrganizationUpsertWithoutUsersInput
  disconnect?: Prisma.OrganizationWhereInput | boolean
  delete?: Prisma.OrganizationWhereInput | boolean
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutUsersInput,
      Prisma.OrganizationUpdateWithoutUsersInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutUsersInput
  >
}

export type OrganizationCreateNestedOneWithoutTeamsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutTeamsInput,
    Prisma.OrganizationUncheckedCreateWithoutTeamsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutTeamsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutTeamsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutTeamsInput,
    Prisma.OrganizationUncheckedCreateWithoutTeamsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutTeamsInput
  upsert?: Prisma.OrganizationUpsertWithoutTeamsInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutTeamsInput,
      Prisma.OrganizationUpdateWithoutTeamsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutTeamsInput
  >
}

export type OrganizationCreateNestedOneWithoutPeopleInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutPeopleInput,
    Prisma.OrganizationUncheckedCreateWithoutPeopleInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutPeopleInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutPeopleNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutPeopleInput,
    Prisma.OrganizationUncheckedCreateWithoutPeopleInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutPeopleInput
  upsert?: Prisma.OrganizationUpsertWithoutPeopleInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutPeopleInput,
      Prisma.OrganizationUpdateWithoutPeopleInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutPeopleInput
  >
}

export type OrganizationCreateNestedOneWithoutInitiativesInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInitiativesInput,
    Prisma.OrganizationUncheckedCreateWithoutInitiativesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutInitiativesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutInitiativesNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInitiativesInput,
    Prisma.OrganizationUncheckedCreateWithoutInitiativesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutInitiativesInput
  upsert?: Prisma.OrganizationUpsertWithoutInitiativesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutInitiativesInput,
      Prisma.OrganizationUpdateWithoutInitiativesInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutInitiativesInput
  >
}

export type OrganizationCreateNestedOneWithoutInvitationsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInvitationsInput,
    Prisma.OrganizationUncheckedCreateWithoutInvitationsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutInvitationsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutInvitationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInvitationsInput,
    Prisma.OrganizationUncheckedCreateWithoutInvitationsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutInvitationsInput
  upsert?: Prisma.OrganizationUpsertWithoutInvitationsInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutInvitationsInput,
      Prisma.OrganizationUpdateWithoutInvitationsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutInvitationsInput
  >
}

export type OrganizationCreateNestedOneWithoutMeetingsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingsInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutMeetingsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutMeetingsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingsInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutMeetingsInput
  upsert?: Prisma.OrganizationUpsertWithoutMeetingsInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutMeetingsInput,
      Prisma.OrganizationUpdateWithoutMeetingsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutMeetingsInput
  >
}

export type OrganizationCreateNestedOneWithoutMeetingInstancesInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingInstancesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutMeetingInstancesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutMeetingInstancesNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingInstancesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutMeetingInstancesInput
  upsert?: Prisma.OrganizationUpsertWithoutMeetingInstancesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutMeetingInstancesInput,
      Prisma.OrganizationUpdateWithoutMeetingInstancesInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutMeetingInstancesInput
  >
}

export type OrganizationCreateNestedOneWithoutEntityLinksInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutEntityLinksInput,
    Prisma.OrganizationUncheckedCreateWithoutEntityLinksInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutEntityLinksInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutEntityLinksNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutEntityLinksInput,
    Prisma.OrganizationUncheckedCreateWithoutEntityLinksInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutEntityLinksInput
  upsert?: Prisma.OrganizationUpsertWithoutEntityLinksInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutEntityLinksInput,
      Prisma.OrganizationUpdateWithoutEntityLinksInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutEntityLinksInput
  >
}

export type OrganizationCreateNestedOneWithoutJobRolesInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutJobRolesInput,
    Prisma.OrganizationUncheckedCreateWithoutJobRolesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutJobRolesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutJobRolesNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutJobRolesInput,
    Prisma.OrganizationUncheckedCreateWithoutJobRolesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutJobRolesInput
  upsert?: Prisma.OrganizationUpsertWithoutJobRolesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutJobRolesInput,
      Prisma.OrganizationUpdateWithoutJobRolesInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutJobRolesInput
  >
}

export type OrganizationCreateNestedOneWithoutLevelsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutLevelsInput,
    Prisma.OrganizationUncheckedCreateWithoutLevelsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutLevelsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutLevelsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutLevelsInput,
    Prisma.OrganizationUncheckedCreateWithoutLevelsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutLevelsInput
  upsert?: Prisma.OrganizationUpsertWithoutLevelsInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutLevelsInput,
      Prisma.OrganizationUpdateWithoutLevelsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutLevelsInput
  >
}

export type OrganizationCreateNestedOneWithoutDomainsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutDomainsInput,
    Prisma.OrganizationUncheckedCreateWithoutDomainsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutDomainsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutDomainsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutDomainsInput,
    Prisma.OrganizationUncheckedCreateWithoutDomainsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutDomainsInput
  upsert?: Prisma.OrganizationUpsertWithoutDomainsInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutDomainsInput,
      Prisma.OrganizationUpdateWithoutDomainsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutDomainsInput
  >
}

export type OrganizationCreateNestedOneWithoutNotificationsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotificationsInput,
    Prisma.OrganizationUncheckedCreateWithoutNotificationsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNotificationsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneWithoutNotificationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotificationsInput,
    Prisma.OrganizationUncheckedCreateWithoutNotificationsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNotificationsInput
  upsert?: Prisma.OrganizationUpsertWithoutNotificationsInput
  disconnect?: Prisma.OrganizationWhereInput | boolean
  delete?: Prisma.OrganizationWhereInput | boolean
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutNotificationsInput,
      Prisma.OrganizationUpdateWithoutNotificationsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutNotificationsInput
  >
}

export type OrganizationCreateNestedOneWithoutCronJobExecutionsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutCronJobExecutionsInput,
    Prisma.OrganizationUncheckedCreateWithoutCronJobExecutionsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutCronJobExecutionsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneWithoutCronJobExecutionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutCronJobExecutionsInput,
    Prisma.OrganizationUncheckedCreateWithoutCronJobExecutionsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutCronJobExecutionsInput
  upsert?: Prisma.OrganizationUpsertWithoutCronJobExecutionsInput
  disconnect?: Prisma.OrganizationWhereInput | boolean
  delete?: Prisma.OrganizationWhereInput | boolean
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutCronJobExecutionsInput,
      Prisma.OrganizationUpdateWithoutCronJobExecutionsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutCronJobExecutionsInput
  >
}

export type OrganizationCreateNestedOneWithoutReportInstancesInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutReportInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutReportInstancesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutReportInstancesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutReportInstancesNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutReportInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutReportInstancesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutReportInstancesInput
  upsert?: Prisma.OrganizationUpsertWithoutReportInstancesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutReportInstancesInput,
      Prisma.OrganizationUpdateWithoutReportInstancesInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutReportInstancesInput
  >
}

export type OrganizationCreateNestedOneWithoutNotesInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotesInput,
    Prisma.OrganizationUncheckedCreateWithoutNotesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNotesInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutNotesNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotesInput,
    Prisma.OrganizationUncheckedCreateWithoutNotesInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutNotesInput
  upsert?: Prisma.OrganizationUpsertWithoutNotesInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutNotesInput,
      Prisma.OrganizationUpdateWithoutNotesInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutNotesInput
  >
}

export type OrganizationCreateNestedOneWithoutFileAttachmentsInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutFileAttachmentsInput,
    Prisma.OrganizationUncheckedCreateWithoutFileAttachmentsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFileAttachmentsInput
  connect?: Prisma.OrganizationWhereUniqueInput
}

export type OrganizationUpdateOneRequiredWithoutFileAttachmentsNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationCreateWithoutFileAttachmentsInput,
    Prisma.OrganizationUncheckedCreateWithoutFileAttachmentsInput
  >
  connectOrCreate?: Prisma.OrganizationCreateOrConnectWithoutFileAttachmentsInput
  upsert?: Prisma.OrganizationUpsertWithoutFileAttachmentsInput
  connect?: Prisma.OrganizationWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationUpdateToOneWithWhereWithoutFileAttachmentsInput,
      Prisma.OrganizationUpdateWithoutFileAttachmentsInput
    >,
    Prisma.OrganizationUncheckedUpdateWithoutFileAttachmentsInput
  >
}

export type OrganizationCreateWithoutUsersInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutUsersInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutUsersInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutUsersInput,
    Prisma.OrganizationUncheckedCreateWithoutUsersInput
  >
}

export type OrganizationUpsertWithoutUsersInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutUsersInput,
    Prisma.OrganizationUncheckedUpdateWithoutUsersInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutUsersInput,
    Prisma.OrganizationUncheckedCreateWithoutUsersInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutUsersInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutUsersInput,
    Prisma.OrganizationUncheckedUpdateWithoutUsersInput
  >
}

export type OrganizationUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutTeamsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutTeamsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutTeamsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutTeamsInput,
    Prisma.OrganizationUncheckedCreateWithoutTeamsInput
  >
}

export type OrganizationUpsertWithoutTeamsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutTeamsInput,
    Prisma.OrganizationUncheckedUpdateWithoutTeamsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutTeamsInput,
    Prisma.OrganizationUncheckedCreateWithoutTeamsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutTeamsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutTeamsInput,
    Prisma.OrganizationUncheckedUpdateWithoutTeamsInput
  >
}

export type OrganizationUpdateWithoutTeamsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutTeamsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutPeopleInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutPeopleInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutPeopleInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutPeopleInput,
    Prisma.OrganizationUncheckedCreateWithoutPeopleInput
  >
}

export type OrganizationUpsertWithoutPeopleInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutPeopleInput,
    Prisma.OrganizationUncheckedUpdateWithoutPeopleInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutPeopleInput,
    Prisma.OrganizationUncheckedCreateWithoutPeopleInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutPeopleInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutPeopleInput,
    Prisma.OrganizationUncheckedUpdateWithoutPeopleInput
  >
}

export type OrganizationUpdateWithoutPeopleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutPeopleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutInitiativesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutInitiativesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutInitiativesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInitiativesInput,
    Prisma.OrganizationUncheckedCreateWithoutInitiativesInput
  >
}

export type OrganizationUpsertWithoutInitiativesInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutInitiativesInput,
    Prisma.OrganizationUncheckedUpdateWithoutInitiativesInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInitiativesInput,
    Prisma.OrganizationUncheckedCreateWithoutInitiativesInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutInitiativesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutInitiativesInput,
    Prisma.OrganizationUncheckedUpdateWithoutInitiativesInput
  >
}

export type OrganizationUpdateWithoutInitiativesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutInitiativesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutInvitationsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutInvitationsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutInvitationsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInvitationsInput,
    Prisma.OrganizationUncheckedCreateWithoutInvitationsInput
  >
}

export type OrganizationUpsertWithoutInvitationsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutInvitationsInput,
    Prisma.OrganizationUncheckedUpdateWithoutInvitationsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutInvitationsInput,
    Prisma.OrganizationUncheckedCreateWithoutInvitationsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutInvitationsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutInvitationsInput,
    Prisma.OrganizationUncheckedUpdateWithoutInvitationsInput
  >
}

export type OrganizationUpdateWithoutInvitationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutInvitationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutMeetingsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutMeetingsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutMeetingsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingsInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingsInput
  >
}

export type OrganizationUpsertWithoutMeetingsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutMeetingsInput,
    Prisma.OrganizationUncheckedUpdateWithoutMeetingsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingsInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutMeetingsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutMeetingsInput,
    Prisma.OrganizationUncheckedUpdateWithoutMeetingsInput
  >
}

export type OrganizationUpdateWithoutMeetingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutMeetingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutMeetingInstancesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutMeetingInstancesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutMeetingInstancesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingInstancesInput
  >
}

export type OrganizationUpsertWithoutMeetingInstancesInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutMeetingInstancesInput,
    Prisma.OrganizationUncheckedUpdateWithoutMeetingInstancesInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutMeetingInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutMeetingInstancesInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutMeetingInstancesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutMeetingInstancesInput,
    Prisma.OrganizationUncheckedUpdateWithoutMeetingInstancesInput
  >
}

export type OrganizationUpdateWithoutMeetingInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutMeetingInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutEntityLinksInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutEntityLinksInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutEntityLinksInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutEntityLinksInput,
    Prisma.OrganizationUncheckedCreateWithoutEntityLinksInput
  >
}

export type OrganizationUpsertWithoutEntityLinksInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutEntityLinksInput,
    Prisma.OrganizationUncheckedUpdateWithoutEntityLinksInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutEntityLinksInput,
    Prisma.OrganizationUncheckedCreateWithoutEntityLinksInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutEntityLinksInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutEntityLinksInput,
    Prisma.OrganizationUncheckedUpdateWithoutEntityLinksInput
  >
}

export type OrganizationUpdateWithoutEntityLinksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutEntityLinksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutJobRolesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutJobRolesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutJobRolesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutJobRolesInput,
    Prisma.OrganizationUncheckedCreateWithoutJobRolesInput
  >
}

export type OrganizationUpsertWithoutJobRolesInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutJobRolesInput,
    Prisma.OrganizationUncheckedUpdateWithoutJobRolesInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutJobRolesInput,
    Prisma.OrganizationUncheckedCreateWithoutJobRolesInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutJobRolesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutJobRolesInput,
    Prisma.OrganizationUncheckedUpdateWithoutJobRolesInput
  >
}

export type OrganizationUpdateWithoutJobRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutJobRolesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutLevelsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutLevelsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutLevelsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutLevelsInput,
    Prisma.OrganizationUncheckedCreateWithoutLevelsInput
  >
}

export type OrganizationUpsertWithoutLevelsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutLevelsInput,
    Prisma.OrganizationUncheckedUpdateWithoutLevelsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutLevelsInput,
    Prisma.OrganizationUncheckedCreateWithoutLevelsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutLevelsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutLevelsInput,
    Prisma.OrganizationUncheckedUpdateWithoutLevelsInput
  >
}

export type OrganizationUpdateWithoutLevelsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutLevelsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutDomainsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutDomainsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutDomainsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutDomainsInput,
    Prisma.OrganizationUncheckedCreateWithoutDomainsInput
  >
}

export type OrganizationUpsertWithoutDomainsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutDomainsInput,
    Prisma.OrganizationUncheckedUpdateWithoutDomainsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutDomainsInput,
    Prisma.OrganizationUncheckedCreateWithoutDomainsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutDomainsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutDomainsInput,
    Prisma.OrganizationUncheckedUpdateWithoutDomainsInput
  >
}

export type OrganizationUpdateWithoutDomainsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutDomainsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutNotificationsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutNotificationsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutNotificationsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotificationsInput,
    Prisma.OrganizationUncheckedCreateWithoutNotificationsInput
  >
}

export type OrganizationUpsertWithoutNotificationsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutNotificationsInput,
    Prisma.OrganizationUncheckedUpdateWithoutNotificationsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotificationsInput,
    Prisma.OrganizationUncheckedCreateWithoutNotificationsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutNotificationsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutNotificationsInput,
    Prisma.OrganizationUncheckedUpdateWithoutNotificationsInput
  >
}

export type OrganizationUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutCronJobExecutionsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutCronJobExecutionsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutCronJobExecutionsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutCronJobExecutionsInput,
    Prisma.OrganizationUncheckedCreateWithoutCronJobExecutionsInput
  >
}

export type OrganizationUpsertWithoutCronJobExecutionsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutCronJobExecutionsInput,
    Prisma.OrganizationUncheckedUpdateWithoutCronJobExecutionsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutCronJobExecutionsInput,
    Prisma.OrganizationUncheckedCreateWithoutCronJobExecutionsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutCronJobExecutionsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutCronJobExecutionsInput,
    Prisma.OrganizationUncheckedUpdateWithoutCronJobExecutionsInput
  >
}

export type OrganizationUpdateWithoutCronJobExecutionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutCronJobExecutionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutReportInstancesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutReportInstancesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutReportInstancesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutReportInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutReportInstancesInput
  >
}

export type OrganizationUpsertWithoutReportInstancesInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutReportInstancesInput,
    Prisma.OrganizationUncheckedUpdateWithoutReportInstancesInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutReportInstancesInput,
    Prisma.OrganizationUncheckedCreateWithoutReportInstancesInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutReportInstancesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutReportInstancesInput,
    Prisma.OrganizationUncheckedUpdateWithoutReportInstancesInput
  >
}

export type OrganizationUpdateWithoutReportInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutReportInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutNotesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutNotesInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  fileAttachments?: Prisma.FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutNotesInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotesInput,
    Prisma.OrganizationUncheckedCreateWithoutNotesInput
  >
}

export type OrganizationUpsertWithoutNotesInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutNotesInput,
    Prisma.OrganizationUncheckedUpdateWithoutNotesInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutNotesInput,
    Prisma.OrganizationUncheckedCreateWithoutNotesInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutNotesInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutNotesInput,
    Prisma.OrganizationUncheckedUpdateWithoutNotesInput
  >
}

export type OrganizationUpdateWithoutNotesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutNotesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  fileAttachments?: Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationCreateWithoutFileAttachmentsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteCreateNestedManyWithoutOrganizationInput
}

export type OrganizationUncheckedCreateWithoutFileAttachmentsInput = {
  id?: string
  name: string
  slug: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  users?: Prisma.UserUncheckedCreateNestedManyWithoutOrganizationInput
  teams?: Prisma.TeamUncheckedCreateNestedManyWithoutOrganizationInput
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutOrganizationInput
  initiatives?: Prisma.InitiativeUncheckedCreateNestedManyWithoutOrganizationInput
  invitations?: Prisma.OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutOrganizationInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  entityLinks?: Prisma.EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput
  jobRoles?: Prisma.JobRoleUncheckedCreateNestedManyWithoutOrganizationInput
  levels?: Prisma.JobLevelUncheckedCreateNestedManyWithoutOrganizationInput
  domains?: Prisma.JobDomainUncheckedCreateNestedManyWithoutOrganizationInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutOrganizationInput
  reportInstances?: Prisma.ReportInstanceUncheckedCreateNestedManyWithoutOrganizationInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedCreateNestedManyWithoutOrganizationInput
  notes?: Prisma.NoteUncheckedCreateNestedManyWithoutOrganizationInput
}

export type OrganizationCreateOrConnectWithoutFileAttachmentsInput = {
  where: Prisma.OrganizationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutFileAttachmentsInput,
    Prisma.OrganizationUncheckedCreateWithoutFileAttachmentsInput
  >
}

export type OrganizationUpsertWithoutFileAttachmentsInput = {
  update: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutFileAttachmentsInput,
    Prisma.OrganizationUncheckedUpdateWithoutFileAttachmentsInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationCreateWithoutFileAttachmentsInput,
    Prisma.OrganizationUncheckedCreateWithoutFileAttachmentsInput
  >
  where?: Prisma.OrganizationWhereInput
}

export type OrganizationUpdateToOneWithWhereWithoutFileAttachmentsInput = {
  where?: Prisma.OrganizationWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationUpdateWithoutFileAttachmentsInput,
    Prisma.OrganizationUncheckedUpdateWithoutFileAttachmentsInput
  >
}

export type OrganizationUpdateWithoutFileAttachmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUpdateManyWithoutOrganizationNestedInput
}

export type OrganizationUncheckedUpdateWithoutFileAttachmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  users?: Prisma.UserUncheckedUpdateManyWithoutOrganizationNestedInput
  teams?: Prisma.TeamUncheckedUpdateManyWithoutOrganizationNestedInput
  people?: Prisma.PersonUncheckedUpdateManyWithoutOrganizationNestedInput
  initiatives?: Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput
  invitations?: Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutOrganizationNestedInput
  meetingInstances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  entityLinks?: Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput
  jobRoles?: Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput
  levels?: Prisma.JobLevelUncheckedUpdateManyWithoutOrganizationNestedInput
  domains?: Prisma.JobDomainUncheckedUpdateManyWithoutOrganizationNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutOrganizationNestedInput
  reportInstances?: Prisma.ReportInstanceUncheckedUpdateManyWithoutOrganizationNestedInput
  cronJobExecutions?: Prisma.CronJobExecutionUncheckedUpdateManyWithoutOrganizationNestedInput
  notes?: Prisma.NoteUncheckedUpdateManyWithoutOrganizationNestedInput
}

/**
 * Count Type OrganizationCountOutputType
 */

export type OrganizationCountOutputType = {
  users: number
  teams: number
  people: number
  initiatives: number
  invitations: number
  meetings: number
  meetingInstances: number
  entityLinks: number
  jobRoles: number
  levels: number
  domains: number
  notifications: number
  reportInstances: number
  cronJobExecutions: number
  notes: number
  fileAttachments: number
}

export type OrganizationCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  users?: boolean | OrganizationCountOutputTypeCountUsersArgs
  teams?: boolean | OrganizationCountOutputTypeCountTeamsArgs
  people?: boolean | OrganizationCountOutputTypeCountPeopleArgs
  initiatives?: boolean | OrganizationCountOutputTypeCountInitiativesArgs
  invitations?: boolean | OrganizationCountOutputTypeCountInvitationsArgs
  meetings?: boolean | OrganizationCountOutputTypeCountMeetingsArgs
  meetingInstances?:
    | boolean
    | OrganizationCountOutputTypeCountMeetingInstancesArgs
  entityLinks?: boolean | OrganizationCountOutputTypeCountEntityLinksArgs
  jobRoles?: boolean | OrganizationCountOutputTypeCountJobRolesArgs
  levels?: boolean | OrganizationCountOutputTypeCountLevelsArgs
  domains?: boolean | OrganizationCountOutputTypeCountDomainsArgs
  notifications?: boolean | OrganizationCountOutputTypeCountNotificationsArgs
  reportInstances?:
    | boolean
    | OrganizationCountOutputTypeCountReportInstancesArgs
  cronJobExecutions?:
    | boolean
    | OrganizationCountOutputTypeCountCronJobExecutionsArgs
  notes?: boolean | OrganizationCountOutputTypeCountNotesArgs
  fileAttachments?:
    | boolean
    | OrganizationCountOutputTypeCountFileAttachmentsArgs
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationCountOutputType
   */
  select?: Prisma.OrganizationCountOutputTypeSelect<ExtArgs> | null
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountUsersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountTeamsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TeamWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountPeopleArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PersonWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountInitiativesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InitiativeWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountInvitationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OrganizationInvitationWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountMeetingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountMeetingInstancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingInstanceWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountEntityLinksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EntityLinkWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountJobRolesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JobRoleWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountLevelsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JobLevelWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountDomainsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JobDomainWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountNotificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountReportInstancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ReportInstanceWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountCronJobExecutionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CronJobExecutionWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountNotesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.NoteWhereInput
}

/**
 * OrganizationCountOutputType without action
 */
export type OrganizationCountOutputTypeCountFileAttachmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FileAttachmentWhereInput
}

export type OrganizationSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | Prisma.Organization$usersArgs<ExtArgs>
    teams?: boolean | Prisma.Organization$teamsArgs<ExtArgs>
    people?: boolean | Prisma.Organization$peopleArgs<ExtArgs>
    initiatives?: boolean | Prisma.Organization$initiativesArgs<ExtArgs>
    invitations?: boolean | Prisma.Organization$invitationsArgs<ExtArgs>
    meetings?: boolean | Prisma.Organization$meetingsArgs<ExtArgs>
    meetingInstances?:
      | boolean
      | Prisma.Organization$meetingInstancesArgs<ExtArgs>
    entityLinks?: boolean | Prisma.Organization$entityLinksArgs<ExtArgs>
    jobRoles?: boolean | Prisma.Organization$jobRolesArgs<ExtArgs>
    levels?: boolean | Prisma.Organization$levelsArgs<ExtArgs>
    domains?: boolean | Prisma.Organization$domainsArgs<ExtArgs>
    notifications?: boolean | Prisma.Organization$notificationsArgs<ExtArgs>
    reportInstances?: boolean | Prisma.Organization$reportInstancesArgs<ExtArgs>
    cronJobExecutions?:
      | boolean
      | Prisma.Organization$cronJobExecutionsArgs<ExtArgs>
    notes?: boolean | Prisma.Organization$notesArgs<ExtArgs>
    fileAttachments?: boolean | Prisma.Organization$fileAttachmentsArgs<ExtArgs>
    _count?: boolean | Prisma.OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['organization']
>

export type OrganizationSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  },
  ExtArgs['result']['organization']
>

export type OrganizationSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  },
  ExtArgs['result']['organization']
>

export type OrganizationSelectScalar = {
  id?: boolean
  name?: boolean
  slug?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type OrganizationOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  'id' | 'name' | 'slug' | 'description' | 'createdAt' | 'updatedAt',
  ExtArgs['result']['organization']
>
export type OrganizationInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  users?: boolean | Prisma.Organization$usersArgs<ExtArgs>
  teams?: boolean | Prisma.Organization$teamsArgs<ExtArgs>
  people?: boolean | Prisma.Organization$peopleArgs<ExtArgs>
  initiatives?: boolean | Prisma.Organization$initiativesArgs<ExtArgs>
  invitations?: boolean | Prisma.Organization$invitationsArgs<ExtArgs>
  meetings?: boolean | Prisma.Organization$meetingsArgs<ExtArgs>
  meetingInstances?: boolean | Prisma.Organization$meetingInstancesArgs<ExtArgs>
  entityLinks?: boolean | Prisma.Organization$entityLinksArgs<ExtArgs>
  jobRoles?: boolean | Prisma.Organization$jobRolesArgs<ExtArgs>
  levels?: boolean | Prisma.Organization$levelsArgs<ExtArgs>
  domains?: boolean | Prisma.Organization$domainsArgs<ExtArgs>
  notifications?: boolean | Prisma.Organization$notificationsArgs<ExtArgs>
  reportInstances?: boolean | Prisma.Organization$reportInstancesArgs<ExtArgs>
  cronJobExecutions?:
    | boolean
    | Prisma.Organization$cronJobExecutionsArgs<ExtArgs>
  notes?: boolean | Prisma.Organization$notesArgs<ExtArgs>
  fileAttachments?: boolean | Prisma.Organization$fileAttachmentsArgs<ExtArgs>
  _count?: boolean | Prisma.OrganizationCountOutputTypeDefaultArgs<ExtArgs>
}
export type OrganizationIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {}
export type OrganizationIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {}

export type $OrganizationPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'Organization'
  objects: {
    users: Prisma.$UserPayload<ExtArgs>[]
    teams: Prisma.$TeamPayload<ExtArgs>[]
    people: Prisma.$PersonPayload<ExtArgs>[]
    initiatives: Prisma.$InitiativePayload<ExtArgs>[]
    invitations: Prisma.$OrganizationInvitationPayload<ExtArgs>[]
    meetings: Prisma.$MeetingPayload<ExtArgs>[]
    meetingInstances: Prisma.$MeetingInstancePayload<ExtArgs>[]
    entityLinks: Prisma.$EntityLinkPayload<ExtArgs>[]
    jobRoles: Prisma.$JobRolePayload<ExtArgs>[]
    levels: Prisma.$JobLevelPayload<ExtArgs>[]
    domains: Prisma.$JobDomainPayload<ExtArgs>[]
    notifications: Prisma.$NotificationPayload<ExtArgs>[]
    reportInstances: Prisma.$ReportInstancePayload<ExtArgs>[]
    cronJobExecutions: Prisma.$CronJobExecutionPayload<ExtArgs>[]
    notes: Prisma.$NotePayload<ExtArgs>[]
    fileAttachments: Prisma.$FileAttachmentPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      name: string
      slug: string
      description: string | null
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['organization']
  >
  composites: {}
}

export type OrganizationGetPayload<
  S extends boolean | null | undefined | OrganizationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$OrganizationPayload, S>

export type OrganizationCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  OrganizationFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: OrganizationCountAggregateInputType | true
}

export interface OrganizationDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['Organization']
    meta: { name: 'Organization' }
  }
  /**
   * Find zero or one Organization that matches the filter.
   * @param {OrganizationFindUniqueArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrganizationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, OrganizationFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one Organization that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrganizationFindUniqueOrThrowArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrganizationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, OrganizationFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Organization that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationFindFirstArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrganizationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, OrganizationFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Organization that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationFindFirstOrThrowArgs} args - Arguments to find a Organization
   * @example
   * // Get one Organization
   * const organization = await prisma.organization.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrganizationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, OrganizationFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more Organizations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Organizations
   * const organizations = await prisma.organization.findMany()
   *
   * // Get first 10 Organizations
   * const organizations = await prisma.organization.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const organizationWithIdOnly = await prisma.organization.findMany({ select: { id: true } })
   *
   */
  findMany<T extends OrganizationFindManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a Organization.
   * @param {OrganizationCreateArgs} args - Arguments to create a Organization.
   * @example
   * // Create one Organization
   * const Organization = await prisma.organization.create({
   *   data: {
   *     // ... data to create a Organization
   *   }
   * })
   *
   */
  create<T extends OrganizationCreateArgs>(
    args: Prisma.SelectSubset<T, OrganizationCreateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many Organizations.
   * @param {OrganizationCreateManyArgs} args - Arguments to create many Organizations.
   * @example
   * // Create many Organizations
   * const organization = await prisma.organization.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends OrganizationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Organizations and returns the data saved in the database.
   * @param {OrganizationCreateManyAndReturnArgs} args - Arguments to create many Organizations.
   * @example
   * // Create many Organizations
   * const organization = await prisma.organization.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Organizations and only return the `id`
   * const organizationWithIdOnly = await prisma.organization.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends OrganizationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, OrganizationCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a Organization.
   * @param {OrganizationDeleteArgs} args - Arguments to delete one Organization.
   * @example
   * // Delete one Organization
   * const Organization = await prisma.organization.delete({
   *   where: {
   *     // ... filter to delete one Organization
   *   }
   * })
   *
   */
  delete<T extends OrganizationDeleteArgs>(
    args: Prisma.SelectSubset<T, OrganizationDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one Organization.
   * @param {OrganizationUpdateArgs} args - Arguments to update one Organization.
   * @example
   * // Update one Organization
   * const organization = await prisma.organization.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends OrganizationUpdateArgs>(
    args: Prisma.SelectSubset<T, OrganizationUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more Organizations.
   * @param {OrganizationDeleteManyArgs} args - Arguments to filter Organizations to delete.
   * @example
   * // Delete a few Organizations
   * const { count } = await prisma.organization.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends OrganizationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Organizations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Organizations
   * const organization = await prisma.organization.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends OrganizationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, OrganizationUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Organizations and returns the data updated in the database.
   * @param {OrganizationUpdateManyAndReturnArgs} args - Arguments to update many Organizations.
   * @example
   * // Update many Organizations
   * const organization = await prisma.organization.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Organizations and only return the `id`
   * const organizationWithIdOnly = await prisma.organization.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends OrganizationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, OrganizationUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one Organization.
   * @param {OrganizationUpsertArgs} args - Arguments to update or create a Organization.
   * @example
   * // Update or create a Organization
   * const organization = await prisma.organization.upsert({
   *   create: {
   *     // ... data to create a Organization
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Organization we want to update
   *   }
   * })
   */
  upsert<T extends OrganizationUpsertArgs>(
    args: Prisma.SelectSubset<T, OrganizationUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of Organizations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationCountArgs} args - Arguments to filter Organizations to count.
   * @example
   * // Count the number of Organizations
   * const count = await prisma.organization.count({
   *   where: {
   *     // ... the filter for the Organizations we want to count
   *   }
   * })
   **/
  count<T extends OrganizationCountArgs>(
    args?: Prisma.Subset<T, OrganizationCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            OrganizationCountAggregateOutputType
          >
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Organization.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends OrganizationAggregateArgs>(
    args: Prisma.Subset<T, OrganizationAggregateArgs>
  ): Prisma.PrismaPromise<GetOrganizationAggregateType<T>>

  /**
   * Group by Organization.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends OrganizationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrganizationGroupByArgs['orderBy'] }
      : { orderBy?: OrganizationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, OrganizationGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetOrganizationGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Organization model
   */
  readonly fields: OrganizationFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for Organization.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrganizationClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  users<T extends Prisma.Organization$usersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$usersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  teams<T extends Prisma.Organization$teamsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$teamsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TeamPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  people<T extends Prisma.Organization$peopleArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$peopleArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PersonPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  initiatives<T extends Prisma.Organization$initiativesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$initiativesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InitiativePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  invitations<T extends Prisma.Organization$invitationsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$invitationsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationInvitationPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  meetings<T extends Prisma.Organization$meetingsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$meetingsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  meetingInstances<
    T extends Prisma.Organization$meetingInstancesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Organization$meetingInstancesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingInstancePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  entityLinks<T extends Prisma.Organization$entityLinksArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$entityLinksArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$EntityLinkPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  jobRoles<T extends Prisma.Organization$jobRolesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$jobRolesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$JobRolePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  levels<T extends Prisma.Organization$levelsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$levelsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$JobLevelPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  domains<T extends Prisma.Organization$domainsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$domainsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$JobDomainPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  notifications<T extends Prisma.Organization$notificationsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$notificationsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$NotificationPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  reportInstances<
    T extends Prisma.Organization$reportInstancesArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Organization$reportInstancesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ReportInstancePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  cronJobExecutions<
    T extends Prisma.Organization$cronJobExecutionsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Organization$cronJobExecutionsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CronJobExecutionPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  notes<T extends Prisma.Organization$notesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Organization$notesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$NotePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  fileAttachments<
    T extends Prisma.Organization$fileAttachmentsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.Organization$fileAttachmentsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$FileAttachmentPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the Organization model
 */
export interface OrganizationFieldRefs {
  readonly id: Prisma.FieldRef<'Organization', 'String'>
  readonly name: Prisma.FieldRef<'Organization', 'String'>
  readonly slug: Prisma.FieldRef<'Organization', 'String'>
  readonly description: Prisma.FieldRef<'Organization', 'String'>
  readonly createdAt: Prisma.FieldRef<'Organization', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'Organization', 'DateTime'>
}

// Custom InputTypes
/**
 * Organization findUnique
 */
export type OrganizationFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization findUniqueOrThrow
 */
export type OrganizationFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization findFirst
 */
export type OrganizationFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Organizations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOrderByWithRelationInput
    | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Organizations.
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Organizations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Organizations.
   */
  distinct?:
    | Prisma.OrganizationScalarFieldEnum
    | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Organization findFirstOrThrow
 */
export type OrganizationFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organization to fetch.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Organizations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOrderByWithRelationInput
    | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Organizations.
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Organizations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Organizations.
   */
  distinct?:
    | Prisma.OrganizationScalarFieldEnum
    | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Organization findMany
 */
export type OrganizationFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter, which Organizations to fetch.
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Organizations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOrderByWithRelationInput
    | Prisma.OrganizationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Organizations.
   */
  cursor?: Prisma.OrganizationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Organizations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Organizations.
   */
  skip?: number
  distinct?:
    | Prisma.OrganizationScalarFieldEnum
    | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Organization create
 */
export type OrganizationCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * The data needed to create a Organization.
   */
  data: Prisma.XOR<
    Prisma.OrganizationCreateInput,
    Prisma.OrganizationUncheckedCreateInput
  >
}

/**
 * Organization createMany
 */
export type OrganizationCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Organizations.
   */
  data:
    | Prisma.OrganizationCreateManyInput
    | Prisma.OrganizationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Organization createManyAndReturn
 */
export type OrganizationCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * The data used to create many Organizations.
   */
  data:
    | Prisma.OrganizationCreateManyInput
    | Prisma.OrganizationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Organization update
 */
export type OrganizationUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * The data needed to update a Organization.
   */
  data: Prisma.XOR<
    Prisma.OrganizationUpdateInput,
    Prisma.OrganizationUncheckedUpdateInput
  >
  /**
   * Choose, which Organization to update.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization updateMany
 */
export type OrganizationUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Organizations.
   */
  data: Prisma.XOR<
    Prisma.OrganizationUpdateManyMutationInput,
    Prisma.OrganizationUncheckedUpdateManyInput
  >
  /**
   * Filter which Organizations to update
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * Limit how many Organizations to update.
   */
  limit?: number
}

/**
 * Organization updateManyAndReturn
 */
export type OrganizationUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * The data used to update Organizations.
   */
  data: Prisma.XOR<
    Prisma.OrganizationUpdateManyMutationInput,
    Prisma.OrganizationUncheckedUpdateManyInput
  >
  /**
   * Filter which Organizations to update
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * Limit how many Organizations to update.
   */
  limit?: number
}

/**
 * Organization upsert
 */
export type OrganizationUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * The filter to search for the Organization to update in case it exists.
   */
  where: Prisma.OrganizationWhereUniqueInput
  /**
   * In case the Organization found by the `where` argument doesn't exist, create a new Organization with this data.
   */
  create: Prisma.XOR<
    Prisma.OrganizationCreateInput,
    Prisma.OrganizationUncheckedCreateInput
  >
  /**
   * In case the Organization was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.OrganizationUpdateInput,
    Prisma.OrganizationUncheckedUpdateInput
  >
}

/**
 * Organization delete
 */
export type OrganizationDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  /**
   * Filter which Organization to delete.
   */
  where: Prisma.OrganizationWhereUniqueInput
}

/**
 * Organization deleteMany
 */
export type OrganizationDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Organizations to delete
   */
  where?: Prisma.OrganizationWhereInput
  /**
   * Limit how many Organizations to delete.
   */
  limit?: number
}

/**
 * Organization.users
 */
export type Organization$usersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[]
  cursor?: Prisma.UserWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * Organization.teams
 */
export type Organization$teamsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null
  where?: Prisma.TeamWhereInput
  orderBy?:
    | Prisma.TeamOrderByWithRelationInput
    | Prisma.TeamOrderByWithRelationInput[]
  cursor?: Prisma.TeamWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TeamScalarFieldEnum | Prisma.TeamScalarFieldEnum[]
}

/**
 * Organization.people
 */
export type Organization$peopleArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  where?: Prisma.PersonWhereInput
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  cursor?: Prisma.PersonWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PersonScalarFieldEnum | Prisma.PersonScalarFieldEnum[]
}

/**
 * Organization.initiatives
 */
export type Organization$initiativesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  where?: Prisma.InitiativeWhereInput
  orderBy?:
    | Prisma.InitiativeOrderByWithRelationInput
    | Prisma.InitiativeOrderByWithRelationInput[]
  cursor?: Prisma.InitiativeWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.InitiativeScalarFieldEnum
    | Prisma.InitiativeScalarFieldEnum[]
}

/**
 * Organization.invitations
 */
export type Organization$invitationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  where?: Prisma.OrganizationInvitationWhereInput
  orderBy?:
    | Prisma.OrganizationInvitationOrderByWithRelationInput
    | Prisma.OrganizationInvitationOrderByWithRelationInput[]
  cursor?: Prisma.OrganizationInvitationWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.OrganizationInvitationScalarFieldEnum
    | Prisma.OrganizationInvitationScalarFieldEnum[]
}

/**
 * Organization.meetings
 */
export type Organization$meetingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  where?: Prisma.MeetingWhereInput
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  cursor?: Prisma.MeetingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Organization.meetingInstances
 */
export type Organization$meetingInstancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MeetingInstance
   */
  select?: Prisma.MeetingInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingInstance
   */
  omit?: Prisma.MeetingInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInstanceInclude<ExtArgs> | null
  where?: Prisma.MeetingInstanceWhereInput
  orderBy?:
    | Prisma.MeetingInstanceOrderByWithRelationInput
    | Prisma.MeetingInstanceOrderByWithRelationInput[]
  cursor?: Prisma.MeetingInstanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.MeetingInstanceScalarFieldEnum
    | Prisma.MeetingInstanceScalarFieldEnum[]
}

/**
 * Organization.entityLinks
 */
export type Organization$entityLinksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  where?: Prisma.EntityLinkWhereInput
  orderBy?:
    | Prisma.EntityLinkOrderByWithRelationInput
    | Prisma.EntityLinkOrderByWithRelationInput[]
  cursor?: Prisma.EntityLinkWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.EntityLinkScalarFieldEnum
    | Prisma.EntityLinkScalarFieldEnum[]
}

/**
 * Organization.jobRoles
 */
export type Organization$jobRolesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  where?: Prisma.JobRoleWhereInput
  orderBy?:
    | Prisma.JobRoleOrderByWithRelationInput
    | Prisma.JobRoleOrderByWithRelationInput[]
  cursor?: Prisma.JobRoleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.JobRoleScalarFieldEnum | Prisma.JobRoleScalarFieldEnum[]
}

/**
 * Organization.levels
 */
export type Organization$levelsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobLevel
   */
  select?: Prisma.JobLevelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobLevel
   */
  omit?: Prisma.JobLevelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobLevelInclude<ExtArgs> | null
  where?: Prisma.JobLevelWhereInput
  orderBy?:
    | Prisma.JobLevelOrderByWithRelationInput
    | Prisma.JobLevelOrderByWithRelationInput[]
  cursor?: Prisma.JobLevelWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.JobLevelScalarFieldEnum | Prisma.JobLevelScalarFieldEnum[]
}

/**
 * Organization.domains
 */
export type Organization$domainsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobDomain
   */
  select?: Prisma.JobDomainSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobDomain
   */
  omit?: Prisma.JobDomainOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobDomainInclude<ExtArgs> | null
  where?: Prisma.JobDomainWhereInput
  orderBy?:
    | Prisma.JobDomainOrderByWithRelationInput
    | Prisma.JobDomainOrderByWithRelationInput[]
  cursor?: Prisma.JobDomainWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.JobDomainScalarFieldEnum | Prisma.JobDomainScalarFieldEnum[]
}

/**
 * Organization.notifications
 */
export type Organization$notificationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?:
    | Prisma.NotificationOrderByWithRelationInput
    | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.NotificationScalarFieldEnum
    | Prisma.NotificationScalarFieldEnum[]
}

/**
 * Organization.reportInstances
 */
export type Organization$reportInstancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ReportInstance
   */
  select?: Prisma.ReportInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ReportInstance
   */
  omit?: Prisma.ReportInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReportInstanceInclude<ExtArgs> | null
  where?: Prisma.ReportInstanceWhereInput
  orderBy?:
    | Prisma.ReportInstanceOrderByWithRelationInput
    | Prisma.ReportInstanceOrderByWithRelationInput[]
  cursor?: Prisma.ReportInstanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.ReportInstanceScalarFieldEnum
    | Prisma.ReportInstanceScalarFieldEnum[]
}

/**
 * Organization.cronJobExecutions
 */
export type Organization$cronJobExecutionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CronJobExecution
   */
  select?: Prisma.CronJobExecutionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the CronJobExecution
   */
  omit?: Prisma.CronJobExecutionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CronJobExecutionInclude<ExtArgs> | null
  where?: Prisma.CronJobExecutionWhereInput
  orderBy?:
    | Prisma.CronJobExecutionOrderByWithRelationInput
    | Prisma.CronJobExecutionOrderByWithRelationInput[]
  cursor?: Prisma.CronJobExecutionWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.CronJobExecutionScalarFieldEnum
    | Prisma.CronJobExecutionScalarFieldEnum[]
}

/**
 * Organization.notes
 */
export type Organization$notesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Note
   */
  select?: Prisma.NoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Note
   */
  omit?: Prisma.NoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NoteInclude<ExtArgs> | null
  where?: Prisma.NoteWhereInput
  orderBy?:
    | Prisma.NoteOrderByWithRelationInput
    | Prisma.NoteOrderByWithRelationInput[]
  cursor?: Prisma.NoteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NoteScalarFieldEnum | Prisma.NoteScalarFieldEnum[]
}

/**
 * Organization.fileAttachments
 */
export type Organization$fileAttachmentsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  where?: Prisma.FileAttachmentWhereInput
  orderBy?:
    | Prisma.FileAttachmentOrderByWithRelationInput
    | Prisma.FileAttachmentOrderByWithRelationInput[]
  cursor?: Prisma.FileAttachmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.FileAttachmentScalarFieldEnum
    | Prisma.FileAttachmentScalarFieldEnum[]
}

/**
 * Organization without action
 */
export type OrganizationDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
}
