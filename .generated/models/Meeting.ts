/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Meeting` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model Meeting
 *
 */
export type MeetingModel =
  runtime.Types.Result.DefaultSelection<Prisma.$MeetingPayload>

export type AggregateMeeting = {
  _count: MeetingCountAggregateOutputType | null
  _avg: MeetingAvgAggregateOutputType | null
  _sum: MeetingSumAggregateOutputType | null
  _min: MeetingMinAggregateOutputType | null
  _max: MeetingMaxAggregateOutputType | null
}

export type MeetingAvgAggregateOutputType = {
  duration: number | null
}

export type MeetingSumAggregateOutputType = {
  duration: number | null
}

export type MeetingMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  scheduledAt: Date | null
  duration: number | null
  location: string | null
  notes: string | null
  isRecurring: boolean | null
  recurrenceType: string | null
  isPrivate: boolean | null
  organizationId: string | null
  teamId: string | null
  initiativeId: string | null
  ownerId: string | null
  createdById: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MeetingMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  scheduledAt: Date | null
  duration: number | null
  location: string | null
  notes: string | null
  isRecurring: boolean | null
  recurrenceType: string | null
  isPrivate: boolean | null
  organizationId: string | null
  teamId: string | null
  initiativeId: string | null
  ownerId: string | null
  createdById: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MeetingCountAggregateOutputType = {
  id: number
  title: number
  description: number
  scheduledAt: number
  duration: number
  location: number
  notes: number
  isRecurring: number
  recurrenceType: number
  isPrivate: number
  organizationId: number
  teamId: number
  initiativeId: number
  ownerId: number
  createdById: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type MeetingAvgAggregateInputType = {
  duration?: true
}

export type MeetingSumAggregateInputType = {
  duration?: true
}

export type MeetingMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  scheduledAt?: true
  duration?: true
  location?: true
  notes?: true
  isRecurring?: true
  recurrenceType?: true
  isPrivate?: true
  organizationId?: true
  teamId?: true
  initiativeId?: true
  ownerId?: true
  createdById?: true
  createdAt?: true
  updatedAt?: true
}

export type MeetingMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  scheduledAt?: true
  duration?: true
  location?: true
  notes?: true
  isRecurring?: true
  recurrenceType?: true
  isPrivate?: true
  organizationId?: true
  teamId?: true
  initiativeId?: true
  ownerId?: true
  createdById?: true
  createdAt?: true
  updatedAt?: true
}

export type MeetingCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  scheduledAt?: true
  duration?: true
  location?: true
  notes?: true
  isRecurring?: true
  recurrenceType?: true
  isPrivate?: true
  organizationId?: true
  teamId?: true
  initiativeId?: true
  ownerId?: true
  createdById?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MeetingAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Meeting to aggregate.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Meetings to fetch.
   */
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Meetings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Meetings
   **/
  _count?: true | MeetingCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: MeetingAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: MeetingSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: MeetingMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: MeetingMaxAggregateInputType
}

export type GetMeetingAggregateType<T extends MeetingAggregateArgs> = {
  [P in keyof T & keyof AggregateMeeting]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMeeting[P]>
    : Prisma.GetScalarType<T[P], AggregateMeeting[P]>
}

export type MeetingGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingWhereInput
  orderBy?:
    | Prisma.MeetingOrderByWithAggregationInput
    | Prisma.MeetingOrderByWithAggregationInput[]
  by: Prisma.MeetingScalarFieldEnum[] | Prisma.MeetingScalarFieldEnum
  having?: Prisma.MeetingScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MeetingCountAggregateInputType | true
  _avg?: MeetingAvgAggregateInputType
  _sum?: MeetingSumAggregateInputType
  _min?: MeetingMinAggregateInputType
  _max?: MeetingMaxAggregateInputType
}

export type MeetingGroupByOutputType = {
  id: string
  title: string
  description: string | null
  scheduledAt: Date
  duration: number | null
  location: string | null
  notes: string | null
  isRecurring: boolean
  recurrenceType: string | null
  isPrivate: boolean
  organizationId: string
  teamId: string | null
  initiativeId: string | null
  ownerId: string | null
  createdById: string
  createdAt: Date
  updatedAt: Date
  _count: MeetingCountAggregateOutputType | null
  _avg: MeetingAvgAggregateOutputType | null
  _sum: MeetingSumAggregateOutputType | null
  _min: MeetingMinAggregateOutputType | null
  _max: MeetingMaxAggregateOutputType | null
}

type GetMeetingGroupByPayload<T extends MeetingGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<MeetingGroupByOutputType, T['by']> & {
        [P in keyof T & keyof MeetingGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MeetingGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MeetingGroupByOutputType[P]>
      }
    >
  >

export type MeetingWhereInput = {
  AND?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
  OR?: Prisma.MeetingWhereInput[]
  NOT?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
  id?: Prisma.StringFilter<'Meeting'> | string
  title?: Prisma.StringFilter<'Meeting'> | string
  description?: Prisma.StringNullableFilter<'Meeting'> | string | null
  scheduledAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
  duration?: Prisma.IntNullableFilter<'Meeting'> | number | null
  location?: Prisma.StringNullableFilter<'Meeting'> | string | null
  notes?: Prisma.StringNullableFilter<'Meeting'> | string | null
  isRecurring?: Prisma.BoolFilter<'Meeting'> | boolean
  recurrenceType?: Prisma.StringNullableFilter<'Meeting'> | string | null
  isPrivate?: Prisma.BoolFilter<'Meeting'> | boolean
  organizationId?: Prisma.StringFilter<'Meeting'> | string
  teamId?: Prisma.StringNullableFilter<'Meeting'> | string | null
  initiativeId?: Prisma.StringNullableFilter<'Meeting'> | string | null
  ownerId?: Prisma.StringNullableFilter<'Meeting'> | string | null
  createdById?: Prisma.StringFilter<'Meeting'> | string
  createdAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  team?: Prisma.XOR<
    Prisma.TeamNullableScalarRelationFilter,
    Prisma.TeamWhereInput
  > | null
  initiative?: Prisma.XOR<
    Prisma.InitiativeNullableScalarRelationFilter,
    Prisma.InitiativeWhereInput
  > | null
  owner?: Prisma.XOR<
    Prisma.PersonNullableScalarRelationFilter,
    Prisma.PersonWhereInput
  > | null
  createdBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  participants?: Prisma.MeetingParticipantListRelationFilter
  instances?: Prisma.MeetingInstanceListRelationFilter
}

export type MeetingOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrderInput | Prisma.SortOrder
  location?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  isRecurring?: Prisma.SortOrder
  recurrenceType?: Prisma.SortOrderInput | Prisma.SortOrder
  isPrivate?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  initiativeId?: Prisma.SortOrderInput | Prisma.SortOrder
  ownerId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organization?: Prisma.OrganizationOrderByWithRelationInput
  team?: Prisma.TeamOrderByWithRelationInput
  initiative?: Prisma.InitiativeOrderByWithRelationInput
  owner?: Prisma.PersonOrderByWithRelationInput
  createdBy?: Prisma.UserOrderByWithRelationInput
  participants?: Prisma.MeetingParticipantOrderByRelationAggregateInput
  instances?: Prisma.MeetingInstanceOrderByRelationAggregateInput
}

export type MeetingWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    AND?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
    OR?: Prisma.MeetingWhereInput[]
    NOT?: Prisma.MeetingWhereInput | Prisma.MeetingWhereInput[]
    title?: Prisma.StringFilter<'Meeting'> | string
    description?: Prisma.StringNullableFilter<'Meeting'> | string | null
    scheduledAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
    duration?: Prisma.IntNullableFilter<'Meeting'> | number | null
    location?: Prisma.StringNullableFilter<'Meeting'> | string | null
    notes?: Prisma.StringNullableFilter<'Meeting'> | string | null
    isRecurring?: Prisma.BoolFilter<'Meeting'> | boolean
    recurrenceType?: Prisma.StringNullableFilter<'Meeting'> | string | null
    isPrivate?: Prisma.BoolFilter<'Meeting'> | boolean
    organizationId?: Prisma.StringFilter<'Meeting'> | string
    teamId?: Prisma.StringNullableFilter<'Meeting'> | string | null
    initiativeId?: Prisma.StringNullableFilter<'Meeting'> | string | null
    ownerId?: Prisma.StringNullableFilter<'Meeting'> | string | null
    createdById?: Prisma.StringFilter<'Meeting'> | string
    createdAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    team?: Prisma.XOR<
      Prisma.TeamNullableScalarRelationFilter,
      Prisma.TeamWhereInput
    > | null
    initiative?: Prisma.XOR<
      Prisma.InitiativeNullableScalarRelationFilter,
      Prisma.InitiativeWhereInput
    > | null
    owner?: Prisma.XOR<
      Prisma.PersonNullableScalarRelationFilter,
      Prisma.PersonWhereInput
    > | null
    createdBy?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >
    participants?: Prisma.MeetingParticipantListRelationFilter
    instances?: Prisma.MeetingInstanceListRelationFilter
  },
  'id'
>

export type MeetingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrderInput | Prisma.SortOrder
  location?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  isRecurring?: Prisma.SortOrder
  recurrenceType?: Prisma.SortOrderInput | Prisma.SortOrder
  isPrivate?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  initiativeId?: Prisma.SortOrderInput | Prisma.SortOrder
  ownerId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MeetingCountOrderByAggregateInput
  _avg?: Prisma.MeetingAvgOrderByAggregateInput
  _max?: Prisma.MeetingMaxOrderByAggregateInput
  _min?: Prisma.MeetingMinOrderByAggregateInput
  _sum?: Prisma.MeetingSumOrderByAggregateInput
}

export type MeetingScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.MeetingScalarWhereWithAggregatesInput
    | Prisma.MeetingScalarWhereWithAggregatesInput[]
  OR?: Prisma.MeetingScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.MeetingScalarWhereWithAggregatesInput
    | Prisma.MeetingScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'Meeting'> | string
  title?: Prisma.StringWithAggregatesFilter<'Meeting'> | string
  description?:
    | Prisma.StringNullableWithAggregatesFilter<'Meeting'>
    | string
    | null
  scheduledAt?: Prisma.DateTimeWithAggregatesFilter<'Meeting'> | Date | string
  duration?: Prisma.IntNullableWithAggregatesFilter<'Meeting'> | number | null
  location?:
    | Prisma.StringNullableWithAggregatesFilter<'Meeting'>
    | string
    | null
  notes?: Prisma.StringNullableWithAggregatesFilter<'Meeting'> | string | null
  isRecurring?: Prisma.BoolWithAggregatesFilter<'Meeting'> | boolean
  recurrenceType?:
    | Prisma.StringNullableWithAggregatesFilter<'Meeting'>
    | string
    | null
  isPrivate?: Prisma.BoolWithAggregatesFilter<'Meeting'> | boolean
  organizationId?: Prisma.StringWithAggregatesFilter<'Meeting'> | string
  teamId?: Prisma.StringNullableWithAggregatesFilter<'Meeting'> | string | null
  initiativeId?:
    | Prisma.StringNullableWithAggregatesFilter<'Meeting'>
    | string
    | null
  ownerId?: Prisma.StringNullableWithAggregatesFilter<'Meeting'> | string | null
  createdById?: Prisma.StringWithAggregatesFilter<'Meeting'> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'Meeting'> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'Meeting'> | Date | string
}

export type MeetingCreateInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateManyInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingListRelationFilter = {
  every?: Prisma.MeetingWhereInput
  some?: Prisma.MeetingWhereInput
  none?: Prisma.MeetingWhereInput
}

export type MeetingOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MeetingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  location?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isRecurring?: Prisma.SortOrder
  recurrenceType?: Prisma.SortOrder
  isPrivate?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  initiativeId?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MeetingAvgOrderByAggregateInput = {
  duration?: Prisma.SortOrder
}

export type MeetingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  location?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isRecurring?: Prisma.SortOrder
  recurrenceType?: Prisma.SortOrder
  isPrivate?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  initiativeId?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MeetingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  scheduledAt?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  location?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isRecurring?: Prisma.SortOrder
  recurrenceType?: Prisma.SortOrder
  isPrivate?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  initiativeId?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MeetingSumOrderByAggregateInput = {
  duration?: Prisma.SortOrder
}

export type MeetingScalarRelationFilter = {
  is?: Prisma.MeetingWhereInput
  isNot?: Prisma.MeetingWhereInput
}

export type MeetingCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOrganizationInput,
        Prisma.MeetingUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.MeetingCreateWithoutOrganizationInput[]
    | Prisma.MeetingUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.MeetingCreateManyOrganizationInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOrganizationInput,
        Prisma.MeetingUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.MeetingCreateWithoutOrganizationInput[]
    | Prisma.MeetingUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.MeetingCreateManyOrganizationInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOrganizationInput,
        Prisma.MeetingUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.MeetingCreateWithoutOrganizationInput[]
    | Prisma.MeetingUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.MeetingCreateManyOrganizationInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.MeetingUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOrganizationInput,
        Prisma.MeetingUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.MeetingCreateWithoutOrganizationInput[]
    | Prisma.MeetingUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput
    | Prisma.MeetingCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.MeetingCreateManyOrganizationInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.MeetingUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutCreatedByInput,
        Prisma.MeetingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.MeetingCreateWithoutCreatedByInput[]
    | Prisma.MeetingUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.MeetingCreateManyCreatedByInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutCreatedByInput,
        Prisma.MeetingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.MeetingCreateWithoutCreatedByInput[]
    | Prisma.MeetingUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.MeetingCreateManyCreatedByInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutCreatedByInput,
        Prisma.MeetingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.MeetingCreateWithoutCreatedByInput[]
    | Prisma.MeetingUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.MeetingCreateManyCreatedByInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.MeetingUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutCreatedByInput,
        Prisma.MeetingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.MeetingCreateWithoutCreatedByInput[]
    | Prisma.MeetingUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput
    | Prisma.MeetingCreateOrConnectWithoutCreatedByInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.MeetingCreateManyCreatedByInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.MeetingUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutTeamInput,
        Prisma.MeetingUncheckedCreateWithoutTeamInput
      >
    | Prisma.MeetingCreateWithoutTeamInput[]
    | Prisma.MeetingUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutTeamInput
    | Prisma.MeetingCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.MeetingCreateManyTeamInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutTeamInput,
        Prisma.MeetingUncheckedCreateWithoutTeamInput
      >
    | Prisma.MeetingCreateWithoutTeamInput[]
    | Prisma.MeetingUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutTeamInput
    | Prisma.MeetingCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.MeetingCreateManyTeamInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutTeamInput,
        Prisma.MeetingUncheckedCreateWithoutTeamInput
      >
    | Prisma.MeetingCreateWithoutTeamInput[]
    | Prisma.MeetingUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutTeamInput
    | Prisma.MeetingCreateOrConnectWithoutTeamInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.MeetingCreateManyTeamInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutTeamInput
    | Prisma.MeetingUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutTeamInput,
        Prisma.MeetingUncheckedCreateWithoutTeamInput
      >
    | Prisma.MeetingCreateWithoutTeamInput[]
    | Prisma.MeetingUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutTeamInput
    | Prisma.MeetingCreateOrConnectWithoutTeamInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.MeetingCreateManyTeamInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutTeamInput
    | Prisma.MeetingUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingCreateNestedManyWithoutOwnerInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOwnerInput,
        Prisma.MeetingUncheckedCreateWithoutOwnerInput
      >
    | Prisma.MeetingCreateWithoutOwnerInput[]
    | Prisma.MeetingUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput[]
  createMany?: Prisma.MeetingCreateManyOwnerInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutOwnerInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOwnerInput,
        Prisma.MeetingUncheckedCreateWithoutOwnerInput
      >
    | Prisma.MeetingCreateWithoutOwnerInput[]
    | Prisma.MeetingUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput[]
  createMany?: Prisma.MeetingCreateManyOwnerInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutOwnerNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOwnerInput,
        Prisma.MeetingUncheckedCreateWithoutOwnerInput
      >
    | Prisma.MeetingCreateWithoutOwnerInput[]
    | Prisma.MeetingUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOwnerInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOwnerInput[]
  createMany?: Prisma.MeetingCreateManyOwnerInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOwnerInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOwnerInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutOwnerInput
    | Prisma.MeetingUpdateManyWithWhereWithoutOwnerInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutOwnerNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutOwnerInput,
        Prisma.MeetingUncheckedCreateWithoutOwnerInput
      >
    | Prisma.MeetingCreateWithoutOwnerInput[]
    | Prisma.MeetingUncheckedCreateWithoutOwnerInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput
    | Prisma.MeetingCreateOrConnectWithoutOwnerInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOwnerInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutOwnerInput[]
  createMany?: Prisma.MeetingCreateManyOwnerInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOwnerInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutOwnerInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutOwnerInput
    | Prisma.MeetingUpdateManyWithWhereWithoutOwnerInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingCreateNestedManyWithoutInitiativeInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutInitiativeInput,
        Prisma.MeetingUncheckedCreateWithoutInitiativeInput
      >
    | Prisma.MeetingCreateWithoutInitiativeInput[]
    | Prisma.MeetingUncheckedCreateWithoutInitiativeInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput[]
  createMany?: Prisma.MeetingCreateManyInitiativeInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUncheckedCreateNestedManyWithoutInitiativeInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutInitiativeInput,
        Prisma.MeetingUncheckedCreateWithoutInitiativeInput
      >
    | Prisma.MeetingCreateWithoutInitiativeInput[]
    | Prisma.MeetingUncheckedCreateWithoutInitiativeInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput[]
  createMany?: Prisma.MeetingCreateManyInitiativeInputEnvelope
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
}

export type MeetingUpdateManyWithoutInitiativeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutInitiativeInput,
        Prisma.MeetingUncheckedCreateWithoutInitiativeInput
      >
    | Prisma.MeetingCreateWithoutInitiativeInput[]
    | Prisma.MeetingUncheckedCreateWithoutInitiativeInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutInitiativeInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutInitiativeInput[]
  createMany?: Prisma.MeetingCreateManyInitiativeInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutInitiativeInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutInitiativeInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutInitiativeInput
    | Prisma.MeetingUpdateManyWithWhereWithoutInitiativeInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingUncheckedUpdateManyWithoutInitiativeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.MeetingCreateWithoutInitiativeInput,
        Prisma.MeetingUncheckedCreateWithoutInitiativeInput
      >
    | Prisma.MeetingCreateWithoutInitiativeInput[]
    | Prisma.MeetingUncheckedCreateWithoutInitiativeInput[]
  connectOrCreate?:
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput
    | Prisma.MeetingCreateOrConnectWithoutInitiativeInput[]
  upsert?:
    | Prisma.MeetingUpsertWithWhereUniqueWithoutInitiativeInput
    | Prisma.MeetingUpsertWithWhereUniqueWithoutInitiativeInput[]
  createMany?: Prisma.MeetingCreateManyInitiativeInputEnvelope
  set?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  disconnect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  delete?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  connect?: Prisma.MeetingWhereUniqueInput | Prisma.MeetingWhereUniqueInput[]
  update?:
    | Prisma.MeetingUpdateWithWhereUniqueWithoutInitiativeInput
    | Prisma.MeetingUpdateWithWhereUniqueWithoutInitiativeInput[]
  updateMany?:
    | Prisma.MeetingUpdateManyWithWhereWithoutInitiativeInput
    | Prisma.MeetingUpdateManyWithWhereWithoutInitiativeInput[]
  deleteMany?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
}

export type MeetingCreateNestedOneWithoutParticipantsInput = {
  create?: Prisma.XOR<
    Prisma.MeetingCreateWithoutParticipantsInput,
    Prisma.MeetingUncheckedCreateWithoutParticipantsInput
  >
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutParticipantsInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutParticipantsNestedInput = {
  create?: Prisma.XOR<
    Prisma.MeetingCreateWithoutParticipantsInput,
    Prisma.MeetingUncheckedCreateWithoutParticipantsInput
  >
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutParticipantsInput
  upsert?: Prisma.MeetingUpsertWithoutParticipantsInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.MeetingUpdateToOneWithWhereWithoutParticipantsInput,
      Prisma.MeetingUpdateWithoutParticipantsInput
    >,
    Prisma.MeetingUncheckedUpdateWithoutParticipantsInput
  >
}

export type MeetingCreateNestedOneWithoutInstancesInput = {
  create?: Prisma.XOR<
    Prisma.MeetingCreateWithoutInstancesInput,
    Prisma.MeetingUncheckedCreateWithoutInstancesInput
  >
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutInstancesInput
  connect?: Prisma.MeetingWhereUniqueInput
}

export type MeetingUpdateOneRequiredWithoutInstancesNestedInput = {
  create?: Prisma.XOR<
    Prisma.MeetingCreateWithoutInstancesInput,
    Prisma.MeetingUncheckedCreateWithoutInstancesInput
  >
  connectOrCreate?: Prisma.MeetingCreateOrConnectWithoutInstancesInput
  upsert?: Prisma.MeetingUpsertWithoutInstancesInput
  connect?: Prisma.MeetingWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.MeetingUpdateToOneWithWhereWithoutInstancesInput,
      Prisma.MeetingUpdateWithoutInstancesInput
    >,
    Prisma.MeetingUncheckedUpdateWithoutInstancesInput
  >
}

export type MeetingCreateWithoutOrganizationInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutOrganizationInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutOrganizationInput,
    Prisma.MeetingUncheckedCreateWithoutOrganizationInput
  >
}

export type MeetingCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.MeetingCreateManyOrganizationInput
    | Prisma.MeetingCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutOrganizationInput,
    Prisma.MeetingUncheckedUpdateWithoutOrganizationInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutOrganizationInput,
    Prisma.MeetingUncheckedCreateWithoutOrganizationInput
  >
}

export type MeetingUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutOrganizationInput,
    Prisma.MeetingUncheckedUpdateWithoutOrganizationInput
  >
}

export type MeetingUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyWithoutOrganizationInput
  >
}

export type MeetingScalarWhereInput = {
  AND?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
  OR?: Prisma.MeetingScalarWhereInput[]
  NOT?: Prisma.MeetingScalarWhereInput | Prisma.MeetingScalarWhereInput[]
  id?: Prisma.StringFilter<'Meeting'> | string
  title?: Prisma.StringFilter<'Meeting'> | string
  description?: Prisma.StringNullableFilter<'Meeting'> | string | null
  scheduledAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
  duration?: Prisma.IntNullableFilter<'Meeting'> | number | null
  location?: Prisma.StringNullableFilter<'Meeting'> | string | null
  notes?: Prisma.StringNullableFilter<'Meeting'> | string | null
  isRecurring?: Prisma.BoolFilter<'Meeting'> | boolean
  recurrenceType?: Prisma.StringNullableFilter<'Meeting'> | string | null
  isPrivate?: Prisma.BoolFilter<'Meeting'> | boolean
  organizationId?: Prisma.StringFilter<'Meeting'> | string
  teamId?: Prisma.StringNullableFilter<'Meeting'> | string | null
  initiativeId?: Prisma.StringNullableFilter<'Meeting'> | string | null
  ownerId?: Prisma.StringNullableFilter<'Meeting'> | string | null
  createdById?: Prisma.StringFilter<'Meeting'> | string
  createdAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Meeting'> | Date | string
}

export type MeetingCreateWithoutCreatedByInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutCreatedByInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutCreatedByInput,
    Prisma.MeetingUncheckedCreateWithoutCreatedByInput
  >
}

export type MeetingCreateManyCreatedByInputEnvelope = {
  data:
    | Prisma.MeetingCreateManyCreatedByInput
    | Prisma.MeetingCreateManyCreatedByInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutCreatedByInput,
    Prisma.MeetingUncheckedUpdateWithoutCreatedByInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutCreatedByInput,
    Prisma.MeetingUncheckedCreateWithoutCreatedByInput
  >
}

export type MeetingUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutCreatedByInput,
    Prisma.MeetingUncheckedUpdateWithoutCreatedByInput
  >
}

export type MeetingUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyWithoutCreatedByInput
  >
}

export type MeetingCreateWithoutTeamInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutTeamInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutTeamInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutTeamInput,
    Prisma.MeetingUncheckedCreateWithoutTeamInput
  >
}

export type MeetingCreateManyTeamInputEnvelope = {
  data: Prisma.MeetingCreateManyTeamInput | Prisma.MeetingCreateManyTeamInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutTeamInput,
    Prisma.MeetingUncheckedUpdateWithoutTeamInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutTeamInput,
    Prisma.MeetingUncheckedCreateWithoutTeamInput
  >
}

export type MeetingUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutTeamInput,
    Prisma.MeetingUncheckedUpdateWithoutTeamInput
  >
}

export type MeetingUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyWithoutTeamInput
  >
}

export type MeetingCreateWithoutOwnerInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutOwnerInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutOwnerInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutOwnerInput,
    Prisma.MeetingUncheckedCreateWithoutOwnerInput
  >
}

export type MeetingCreateManyOwnerInputEnvelope = {
  data:
    | Prisma.MeetingCreateManyOwnerInput
    | Prisma.MeetingCreateManyOwnerInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutOwnerInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutOwnerInput,
    Prisma.MeetingUncheckedUpdateWithoutOwnerInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutOwnerInput,
    Prisma.MeetingUncheckedCreateWithoutOwnerInput
  >
}

export type MeetingUpdateWithWhereUniqueWithoutOwnerInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutOwnerInput,
    Prisma.MeetingUncheckedUpdateWithoutOwnerInput
  >
}

export type MeetingUpdateManyWithWhereWithoutOwnerInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyWithoutOwnerInput
  >
}

export type MeetingCreateWithoutInitiativeInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutInitiativeInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutInitiativeInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutInitiativeInput,
    Prisma.MeetingUncheckedCreateWithoutInitiativeInput
  >
}

export type MeetingCreateManyInitiativeInputEnvelope = {
  data:
    | Prisma.MeetingCreateManyInitiativeInput
    | Prisma.MeetingCreateManyInitiativeInput[]
  skipDuplicates?: boolean
}

export type MeetingUpsertWithWhereUniqueWithoutInitiativeInput = {
  where: Prisma.MeetingWhereUniqueInput
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutInitiativeInput,
    Prisma.MeetingUncheckedUpdateWithoutInitiativeInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutInitiativeInput,
    Prisma.MeetingUncheckedCreateWithoutInitiativeInput
  >
}

export type MeetingUpdateWithWhereUniqueWithoutInitiativeInput = {
  where: Prisma.MeetingWhereUniqueInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutInitiativeInput,
    Prisma.MeetingUncheckedUpdateWithoutInitiativeInput
  >
}

export type MeetingUpdateManyWithWhereWithoutInitiativeInput = {
  where: Prisma.MeetingScalarWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyWithoutInitiativeInput
  >
}

export type MeetingCreateWithoutParticipantsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  instances?: Prisma.MeetingInstanceCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutParticipantsInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  instances?: Prisma.MeetingInstanceUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutParticipantsInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutParticipantsInput,
    Prisma.MeetingUncheckedCreateWithoutParticipantsInput
  >
}

export type MeetingUpsertWithoutParticipantsInput = {
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutParticipantsInput,
    Prisma.MeetingUncheckedUpdateWithoutParticipantsInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutParticipantsInput,
    Prisma.MeetingUncheckedCreateWithoutParticipantsInput
  >
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutParticipantsInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutParticipantsInput,
    Prisma.MeetingUncheckedUpdateWithoutParticipantsInput
  >
}

export type MeetingUpdateWithoutParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateWithoutInstancesInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutMeetingsInput
  team?: Prisma.TeamCreateNestedOneWithoutMeetingsInput
  initiative?: Prisma.InitiativeCreateNestedOneWithoutMeetingsInput
  owner?: Prisma.PersonCreateNestedOneWithoutOwnedMeetingsInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedMeetingsInput
  participants?: Prisma.MeetingParticipantCreateNestedManyWithoutMeetingInput
}

export type MeetingUncheckedCreateWithoutInstancesInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
  participants?: Prisma.MeetingParticipantUncheckedCreateNestedManyWithoutMeetingInput
}

export type MeetingCreateOrConnectWithoutInstancesInput = {
  where: Prisma.MeetingWhereUniqueInput
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutInstancesInput,
    Prisma.MeetingUncheckedCreateWithoutInstancesInput
  >
}

export type MeetingUpsertWithoutInstancesInput = {
  update: Prisma.XOR<
    Prisma.MeetingUpdateWithoutInstancesInput,
    Prisma.MeetingUncheckedUpdateWithoutInstancesInput
  >
  create: Prisma.XOR<
    Prisma.MeetingCreateWithoutInstancesInput,
    Prisma.MeetingUncheckedCreateWithoutInstancesInput
  >
  where?: Prisma.MeetingWhereInput
}

export type MeetingUpdateToOneWithWhereWithoutInstancesInput = {
  where?: Prisma.MeetingWhereInput
  data: Prisma.XOR<
    Prisma.MeetingUpdateWithoutInstancesInput,
    Prisma.MeetingUncheckedUpdateWithoutInstancesInput
  >
}

export type MeetingUpdateWithoutInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutInstancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingCreateManyOrganizationInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingCreateManyCreatedByInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  ownerId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingCreateManyTeamInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  initiativeId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingCreateManyOwnerInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  initiativeId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  initiative?: Prisma.InitiativeUpdateOneWithoutMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  initiativeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MeetingCreateManyInitiativeInput = {
  id?: string
  title: string
  description?: string | null
  scheduledAt: Date | string
  duration?: number | null
  location?: string | null
  notes?: string | null
  isRecurring?: boolean
  recurrenceType?: string | null
  isPrivate?: boolean
  organizationId: string
  teamId?: string | null
  ownerId?: string | null
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MeetingUpdateWithoutInitiativeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutMeetingsNestedInput
  team?: Prisma.TeamUpdateOneWithoutMeetingsNestedInput
  owner?: Prisma.PersonUpdateOneWithoutOwnedMeetingsNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedMeetingsNestedInput
  participants?: Prisma.MeetingParticipantUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateWithoutInitiativeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  participants?: Prisma.MeetingParticipantUncheckedUpdateManyWithoutMeetingNestedInput
  instances?: Prisma.MeetingInstanceUncheckedUpdateManyWithoutMeetingNestedInput
}

export type MeetingUncheckedUpdateManyWithoutInitiativeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  scheduledAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  duration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  location?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isRecurring?: Prisma.BoolFieldUpdateOperationsInput | boolean
  recurrenceType?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null
  isPrivate?: Prisma.BoolFieldUpdateOperationsInput | boolean
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

/**
 * Count Type MeetingCountOutputType
 */

export type MeetingCountOutputType = {
  participants: number
  instances: number
}

export type MeetingCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  participants?: boolean | MeetingCountOutputTypeCountParticipantsArgs
  instances?: boolean | MeetingCountOutputTypeCountInstancesArgs
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MeetingCountOutputType
   */
  select?: Prisma.MeetingCountOutputTypeSelect<ExtArgs> | null
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountParticipantsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingParticipantWhereInput
}

/**
 * MeetingCountOutputType without action
 */
export type MeetingCountOutputTypeCountInstancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingInstanceWhereInput
}

export type MeetingSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    title?: boolean
    description?: boolean
    scheduledAt?: boolean
    duration?: boolean
    location?: boolean
    notes?: boolean
    isRecurring?: boolean
    recurrenceType?: boolean
    isPrivate?: boolean
    organizationId?: boolean
    teamId?: boolean
    initiativeId?: boolean
    ownerId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    team?: boolean | Prisma.Meeting$teamArgs<ExtArgs>
    initiative?: boolean | Prisma.Meeting$initiativeArgs<ExtArgs>
    owner?: boolean | Prisma.Meeting$ownerArgs<ExtArgs>
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
    participants?: boolean | Prisma.Meeting$participantsArgs<ExtArgs>
    instances?: boolean | Prisma.Meeting$instancesArgs<ExtArgs>
    _count?: boolean | Prisma.MeetingCountOutputTypeDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['meeting']
>

export type MeetingSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    title?: boolean
    description?: boolean
    scheduledAt?: boolean
    duration?: boolean
    location?: boolean
    notes?: boolean
    isRecurring?: boolean
    recurrenceType?: boolean
    isPrivate?: boolean
    organizationId?: boolean
    teamId?: boolean
    initiativeId?: boolean
    ownerId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    team?: boolean | Prisma.Meeting$teamArgs<ExtArgs>
    initiative?: boolean | Prisma.Meeting$initiativeArgs<ExtArgs>
    owner?: boolean | Prisma.Meeting$ownerArgs<ExtArgs>
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['meeting']
>

export type MeetingSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    title?: boolean
    description?: boolean
    scheduledAt?: boolean
    duration?: boolean
    location?: boolean
    notes?: boolean
    isRecurring?: boolean
    recurrenceType?: boolean
    isPrivate?: boolean
    organizationId?: boolean
    teamId?: boolean
    initiativeId?: boolean
    ownerId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    team?: boolean | Prisma.Meeting$teamArgs<ExtArgs>
    initiative?: boolean | Prisma.Meeting$initiativeArgs<ExtArgs>
    owner?: boolean | Prisma.Meeting$ownerArgs<ExtArgs>
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['meeting']
>

export type MeetingSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  scheduledAt?: boolean
  duration?: boolean
  location?: boolean
  notes?: boolean
  isRecurring?: boolean
  recurrenceType?: boolean
  isPrivate?: boolean
  organizationId?: boolean
  teamId?: boolean
  initiativeId?: boolean
  ownerId?: boolean
  createdById?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MeetingOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'title'
  | 'description'
  | 'scheduledAt'
  | 'duration'
  | 'location'
  | 'notes'
  | 'isRecurring'
  | 'recurrenceType'
  | 'isPrivate'
  | 'organizationId'
  | 'teamId'
  | 'initiativeId'
  | 'ownerId'
  | 'createdById'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['meeting']
>
export type MeetingInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  team?: boolean | Prisma.Meeting$teamArgs<ExtArgs>
  initiative?: boolean | Prisma.Meeting$initiativeArgs<ExtArgs>
  owner?: boolean | Prisma.Meeting$ownerArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  participants?: boolean | Prisma.Meeting$participantsArgs<ExtArgs>
  instances?: boolean | Prisma.Meeting$instancesArgs<ExtArgs>
  _count?: boolean | Prisma.MeetingCountOutputTypeDefaultArgs<ExtArgs>
}
export type MeetingIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  team?: boolean | Prisma.Meeting$teamArgs<ExtArgs>
  initiative?: boolean | Prisma.Meeting$initiativeArgs<ExtArgs>
  owner?: boolean | Prisma.Meeting$ownerArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type MeetingIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  team?: boolean | Prisma.Meeting$teamArgs<ExtArgs>
  initiative?: boolean | Prisma.Meeting$initiativeArgs<ExtArgs>
  owner?: boolean | Prisma.Meeting$ownerArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $MeetingPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'Meeting'
  objects: {
    organization: Prisma.$OrganizationPayload<ExtArgs>
    team: Prisma.$TeamPayload<ExtArgs> | null
    initiative: Prisma.$InitiativePayload<ExtArgs> | null
    owner: Prisma.$PersonPayload<ExtArgs> | null
    createdBy: Prisma.$UserPayload<ExtArgs>
    participants: Prisma.$MeetingParticipantPayload<ExtArgs>[]
    instances: Prisma.$MeetingInstancePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      title: string
      description: string | null
      scheduledAt: Date
      duration: number | null
      location: string | null
      notes: string | null
      isRecurring: boolean
      recurrenceType: string | null
      isPrivate: boolean
      organizationId: string
      teamId: string | null
      initiativeId: string | null
      ownerId: string | null
      createdById: string
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['meeting']
  >
  composites: {}
}

export type MeetingGetPayload<
  S extends boolean | null | undefined | MeetingDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$MeetingPayload, S>

export type MeetingCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<MeetingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: MeetingCountAggregateInputType | true
}

export interface MeetingDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['Meeting']
    meta: { name: 'Meeting' }
  }
  /**
   * Find zero or one Meeting that matches the filter.
   * @param {MeetingFindUniqueArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MeetingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, MeetingFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one Meeting that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MeetingFindUniqueOrThrowArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MeetingFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, MeetingFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Meeting that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingFindFirstArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MeetingFindFirstArgs>(
    args?: Prisma.SelectSubset<T, MeetingFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Meeting that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingFindFirstOrThrowArgs} args - Arguments to find a Meeting
   * @example
   * // Get one Meeting
   * const meeting = await prisma.meeting.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MeetingFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, MeetingFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more Meetings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Meetings
   * const meetings = await prisma.meeting.findMany()
   *
   * // Get first 10 Meetings
   * const meetings = await prisma.meeting.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const meetingWithIdOnly = await prisma.meeting.findMany({ select: { id: true } })
   *
   */
  findMany<T extends MeetingFindManyArgs>(
    args?: Prisma.SelectSubset<T, MeetingFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a Meeting.
   * @param {MeetingCreateArgs} args - Arguments to create a Meeting.
   * @example
   * // Create one Meeting
   * const Meeting = await prisma.meeting.create({
   *   data: {
   *     // ... data to create a Meeting
   *   }
   * })
   *
   */
  create<T extends MeetingCreateArgs>(
    args: Prisma.SelectSubset<T, MeetingCreateArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many Meetings.
   * @param {MeetingCreateManyArgs} args - Arguments to create many Meetings.
   * @example
   * // Create many Meetings
   * const meeting = await prisma.meeting.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends MeetingCreateManyArgs>(
    args?: Prisma.SelectSubset<T, MeetingCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Meetings and returns the data saved in the database.
   * @param {MeetingCreateManyAndReturnArgs} args - Arguments to create many Meetings.
   * @example
   * // Create many Meetings
   * const meeting = await prisma.meeting.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Meetings and only return the `id`
   * const meetingWithIdOnly = await prisma.meeting.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends MeetingCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, MeetingCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a Meeting.
   * @param {MeetingDeleteArgs} args - Arguments to delete one Meeting.
   * @example
   * // Delete one Meeting
   * const Meeting = await prisma.meeting.delete({
   *   where: {
   *     // ... filter to delete one Meeting
   *   }
   * })
   *
   */
  delete<T extends MeetingDeleteArgs>(
    args: Prisma.SelectSubset<T, MeetingDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one Meeting.
   * @param {MeetingUpdateArgs} args - Arguments to update one Meeting.
   * @example
   * // Update one Meeting
   * const meeting = await prisma.meeting.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends MeetingUpdateArgs>(
    args: Prisma.SelectSubset<T, MeetingUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more Meetings.
   * @param {MeetingDeleteManyArgs} args - Arguments to filter Meetings to delete.
   * @example
   * // Delete a few Meetings
   * const { count } = await prisma.meeting.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends MeetingDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, MeetingDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Meetings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Meetings
   * const meeting = await prisma.meeting.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends MeetingUpdateManyArgs>(
    args: Prisma.SelectSubset<T, MeetingUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Meetings and returns the data updated in the database.
   * @param {MeetingUpdateManyAndReturnArgs} args - Arguments to update many Meetings.
   * @example
   * // Update many Meetings
   * const meeting = await prisma.meeting.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Meetings and only return the `id`
   * const meetingWithIdOnly = await prisma.meeting.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends MeetingUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, MeetingUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one Meeting.
   * @param {MeetingUpsertArgs} args - Arguments to update or create a Meeting.
   * @example
   * // Update or create a Meeting
   * const meeting = await prisma.meeting.upsert({
   *   create: {
   *     // ... data to create a Meeting
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Meeting we want to update
   *   }
   * })
   */
  upsert<T extends MeetingUpsertArgs>(
    args: Prisma.SelectSubset<T, MeetingUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__MeetingClient<
    runtime.Types.Result.GetResult<
      Prisma.$MeetingPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of Meetings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingCountArgs} args - Arguments to filter Meetings to count.
   * @example
   * // Count the number of Meetings
   * const count = await prisma.meeting.count({
   *   where: {
   *     // ... the filter for the Meetings we want to count
   *   }
   * })
   **/
  count<T extends MeetingCountArgs>(
    args?: Prisma.Subset<T, MeetingCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MeetingCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Meeting.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends MeetingAggregateArgs>(
    args: Prisma.Subset<T, MeetingAggregateArgs>
  ): Prisma.PrismaPromise<GetMeetingAggregateType<T>>

  /**
   * Group by Meeting.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MeetingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends MeetingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MeetingGroupByArgs['orderBy'] }
      : { orderBy?: MeetingGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, MeetingGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetMeetingGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Meeting model
   */
  readonly fields: MeetingFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for Meeting.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MeetingClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  team<T extends Prisma.Meeting$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Meeting$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  initiative<T extends Prisma.Meeting$initiativeArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Meeting$initiativeArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  owner<T extends Prisma.Meeting$ownerArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Meeting$ownerArgs<ExtArgs>>
  ): Prisma.Prisma__PersonClient<
    runtime.Types.Result.GetResult<
      Prisma.$PersonPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  createdBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  participants<T extends Prisma.Meeting$participantsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Meeting$participantsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingParticipantPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  instances<T extends Prisma.Meeting$instancesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Meeting$instancesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingInstancePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the Meeting model
 */
export interface MeetingFieldRefs {
  readonly id: Prisma.FieldRef<'Meeting', 'String'>
  readonly title: Prisma.FieldRef<'Meeting', 'String'>
  readonly description: Prisma.FieldRef<'Meeting', 'String'>
  readonly scheduledAt: Prisma.FieldRef<'Meeting', 'DateTime'>
  readonly duration: Prisma.FieldRef<'Meeting', 'Int'>
  readonly location: Prisma.FieldRef<'Meeting', 'String'>
  readonly notes: Prisma.FieldRef<'Meeting', 'String'>
  readonly isRecurring: Prisma.FieldRef<'Meeting', 'Boolean'>
  readonly recurrenceType: Prisma.FieldRef<'Meeting', 'String'>
  readonly isPrivate: Prisma.FieldRef<'Meeting', 'Boolean'>
  readonly organizationId: Prisma.FieldRef<'Meeting', 'String'>
  readonly teamId: Prisma.FieldRef<'Meeting', 'String'>
  readonly initiativeId: Prisma.FieldRef<'Meeting', 'String'>
  readonly ownerId: Prisma.FieldRef<'Meeting', 'String'>
  readonly createdById: Prisma.FieldRef<'Meeting', 'String'>
  readonly createdAt: Prisma.FieldRef<'Meeting', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'Meeting', 'DateTime'>
}

// Custom InputTypes
/**
 * Meeting findUnique
 */
export type MeetingFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting findUniqueOrThrow
 */
export type MeetingFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting findFirst
 */
export type MeetingFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Meetings to fetch.
   */
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Meetings.
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Meetings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Meetings.
   */
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Meeting findFirstOrThrow
 */
export type MeetingFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meeting to fetch.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Meetings to fetch.
   */
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Meetings.
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Meetings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Meetings.
   */
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Meeting findMany
 */
export type MeetingFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter, which Meetings to fetch.
   */
  where?: Prisma.MeetingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Meetings to fetch.
   */
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Meetings.
   */
  cursor?: Prisma.MeetingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Meetings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Meetings.
   */
  skip?: number
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Meeting create
 */
export type MeetingCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * The data needed to create a Meeting.
   */
  data: Prisma.XOR<
    Prisma.MeetingCreateInput,
    Prisma.MeetingUncheckedCreateInput
  >
}

/**
 * Meeting createMany
 */
export type MeetingCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Meetings.
   */
  data: Prisma.MeetingCreateManyInput | Prisma.MeetingCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Meeting createManyAndReturn
 */
export type MeetingCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * The data used to create many Meetings.
   */
  data: Prisma.MeetingCreateManyInput | Prisma.MeetingCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Meeting update
 */
export type MeetingUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * The data needed to update a Meeting.
   */
  data: Prisma.XOR<
    Prisma.MeetingUpdateInput,
    Prisma.MeetingUncheckedUpdateInput
  >
  /**
   * Choose, which Meeting to update.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting updateMany
 */
export type MeetingUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Meetings.
   */
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyInput
  >
  /**
   * Filter which Meetings to update
   */
  where?: Prisma.MeetingWhereInput
  /**
   * Limit how many Meetings to update.
   */
  limit?: number
}

/**
 * Meeting updateManyAndReturn
 */
export type MeetingUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * The data used to update Meetings.
   */
  data: Prisma.XOR<
    Prisma.MeetingUpdateManyMutationInput,
    Prisma.MeetingUncheckedUpdateManyInput
  >
  /**
   * Filter which Meetings to update
   */
  where?: Prisma.MeetingWhereInput
  /**
   * Limit how many Meetings to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Meeting upsert
 */
export type MeetingUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * The filter to search for the Meeting to update in case it exists.
   */
  where: Prisma.MeetingWhereUniqueInput
  /**
   * In case the Meeting found by the `where` argument doesn't exist, create a new Meeting with this data.
   */
  create: Prisma.XOR<
    Prisma.MeetingCreateInput,
    Prisma.MeetingUncheckedCreateInput
  >
  /**
   * In case the Meeting was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.MeetingUpdateInput,
    Prisma.MeetingUncheckedUpdateInput
  >
}

/**
 * Meeting delete
 */
export type MeetingDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  /**
   * Filter which Meeting to delete.
   */
  where: Prisma.MeetingWhereUniqueInput
}

/**
 * Meeting deleteMany
 */
export type MeetingDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Meetings to delete
   */
  where?: Prisma.MeetingWhereInput
  /**
   * Limit how many Meetings to delete.
   */
  limit?: number
}

/**
 * Meeting.team
 */
export type Meeting$teamArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null
  where?: Prisma.TeamWhereInput
}

/**
 * Meeting.initiative
 */
export type Meeting$initiativeArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  where?: Prisma.InitiativeWhereInput
}

/**
 * Meeting.owner
 */
export type Meeting$ownerArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  where?: Prisma.PersonWhereInput
}

/**
 * Meeting.participants
 */
export type Meeting$participantsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MeetingParticipant
   */
  select?: Prisma.MeetingParticipantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingParticipant
   */
  omit?: Prisma.MeetingParticipantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingParticipantInclude<ExtArgs> | null
  where?: Prisma.MeetingParticipantWhereInput
  orderBy?:
    | Prisma.MeetingParticipantOrderByWithRelationInput
    | Prisma.MeetingParticipantOrderByWithRelationInput[]
  cursor?: Prisma.MeetingParticipantWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.MeetingParticipantScalarFieldEnum
    | Prisma.MeetingParticipantScalarFieldEnum[]
}

/**
 * Meeting.instances
 */
export type Meeting$instancesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the MeetingInstance
   */
  select?: Prisma.MeetingInstanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the MeetingInstance
   */
  omit?: Prisma.MeetingInstanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInstanceInclude<ExtArgs> | null
  where?: Prisma.MeetingInstanceWhereInput
  orderBy?:
    | Prisma.MeetingInstanceOrderByWithRelationInput
    | Prisma.MeetingInstanceOrderByWithRelationInput[]
  cursor?: Prisma.MeetingInstanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.MeetingInstanceScalarFieldEnum
    | Prisma.MeetingInstanceScalarFieldEnum[]
}

/**
 * Meeting without action
 */
export type MeetingDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
}
