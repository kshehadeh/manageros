/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `EntityLink` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model EntityLink
 *
 */
export type EntityLinkModel =
  runtime.Types.Result.DefaultSelection<Prisma.$EntityLinkPayload>

export type AggregateEntityLink = {
  _count: EntityLinkCountAggregateOutputType | null
  _min: EntityLinkMinAggregateOutputType | null
  _max: EntityLinkMaxAggregateOutputType | null
}

export type EntityLinkMinAggregateOutputType = {
  id: string | null
  url: string | null
  title: string | null
  description: string | null
  entityType: string | null
  entityId: string | null
  organizationId: string | null
  createdById: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EntityLinkMaxAggregateOutputType = {
  id: string | null
  url: string | null
  title: string | null
  description: string | null
  entityType: string | null
  entityId: string | null
  organizationId: string | null
  createdById: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EntityLinkCountAggregateOutputType = {
  id: number
  url: number
  title: number
  description: number
  entityType: number
  entityId: number
  organizationId: number
  createdById: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type EntityLinkMinAggregateInputType = {
  id?: true
  url?: true
  title?: true
  description?: true
  entityType?: true
  entityId?: true
  organizationId?: true
  createdById?: true
  createdAt?: true
  updatedAt?: true
}

export type EntityLinkMaxAggregateInputType = {
  id?: true
  url?: true
  title?: true
  description?: true
  entityType?: true
  entityId?: true
  organizationId?: true
  createdById?: true
  createdAt?: true
  updatedAt?: true
}

export type EntityLinkCountAggregateInputType = {
  id?: true
  url?: true
  title?: true
  description?: true
  entityType?: true
  entityId?: true
  organizationId?: true
  createdById?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type EntityLinkAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which EntityLink to aggregate.
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EntityLinks to fetch.
   */
  orderBy?:
    | Prisma.EntityLinkOrderByWithRelationInput
    | Prisma.EntityLinkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.EntityLinkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EntityLinks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EntityLinks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned EntityLinks
   **/
  _count?: true | EntityLinkCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: EntityLinkMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: EntityLinkMaxAggregateInputType
}

export type GetEntityLinkAggregateType<T extends EntityLinkAggregateArgs> = {
  [P in keyof T & keyof AggregateEntityLink]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEntityLink[P]>
    : Prisma.GetScalarType<T[P], AggregateEntityLink[P]>
}

export type EntityLinkGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EntityLinkWhereInput
  orderBy?:
    | Prisma.EntityLinkOrderByWithAggregationInput
    | Prisma.EntityLinkOrderByWithAggregationInput[]
  by: Prisma.EntityLinkScalarFieldEnum[] | Prisma.EntityLinkScalarFieldEnum
  having?: Prisma.EntityLinkScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EntityLinkCountAggregateInputType | true
  _min?: EntityLinkMinAggregateInputType
  _max?: EntityLinkMaxAggregateInputType
}

export type EntityLinkGroupByOutputType = {
  id: string
  url: string
  title: string | null
  description: string | null
  entityType: string
  entityId: string
  organizationId: string
  createdById: string
  createdAt: Date
  updatedAt: Date
  _count: EntityLinkCountAggregateOutputType | null
  _min: EntityLinkMinAggregateOutputType | null
  _max: EntityLinkMaxAggregateOutputType | null
}

type GetEntityLinkGroupByPayload<T extends EntityLinkGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<EntityLinkGroupByOutputType, T['by']> & {
        [P in keyof T & keyof EntityLinkGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EntityLinkGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EntityLinkGroupByOutputType[P]>
      }
    >
  >

export type EntityLinkWhereInput = {
  AND?: Prisma.EntityLinkWhereInput | Prisma.EntityLinkWhereInput[]
  OR?: Prisma.EntityLinkWhereInput[]
  NOT?: Prisma.EntityLinkWhereInput | Prisma.EntityLinkWhereInput[]
  id?: Prisma.StringFilter<'EntityLink'> | string
  url?: Prisma.StringFilter<'EntityLink'> | string
  title?: Prisma.StringNullableFilter<'EntityLink'> | string | null
  description?: Prisma.StringNullableFilter<'EntityLink'> | string | null
  entityType?: Prisma.StringFilter<'EntityLink'> | string
  entityId?: Prisma.StringFilter<'EntityLink'> | string
  organizationId?: Prisma.StringFilter<'EntityLink'> | string
  createdById?: Prisma.StringFilter<'EntityLink'> | string
  createdAt?: Prisma.DateTimeFilter<'EntityLink'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'EntityLink'> | Date | string
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  createdBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type EntityLinkOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organization?: Prisma.OrganizationOrderByWithRelationInput
  createdBy?: Prisma.UserOrderByWithRelationInput
}

export type EntityLinkWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    AND?: Prisma.EntityLinkWhereInput | Prisma.EntityLinkWhereInput[]
    OR?: Prisma.EntityLinkWhereInput[]
    NOT?: Prisma.EntityLinkWhereInput | Prisma.EntityLinkWhereInput[]
    url?: Prisma.StringFilter<'EntityLink'> | string
    title?: Prisma.StringNullableFilter<'EntityLink'> | string | null
    description?: Prisma.StringNullableFilter<'EntityLink'> | string | null
    entityType?: Prisma.StringFilter<'EntityLink'> | string
    entityId?: Prisma.StringFilter<'EntityLink'> | string
    organizationId?: Prisma.StringFilter<'EntityLink'> | string
    createdById?: Prisma.StringFilter<'EntityLink'> | string
    createdAt?: Prisma.DateTimeFilter<'EntityLink'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'EntityLink'> | Date | string
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    createdBy?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >
  },
  'id'
>

export type EntityLinkOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  title?: Prisma.SortOrderInput | Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.EntityLinkCountOrderByAggregateInput
  _max?: Prisma.EntityLinkMaxOrderByAggregateInput
  _min?: Prisma.EntityLinkMinOrderByAggregateInput
}

export type EntityLinkScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.EntityLinkScalarWhereWithAggregatesInput
    | Prisma.EntityLinkScalarWhereWithAggregatesInput[]
  OR?: Prisma.EntityLinkScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.EntityLinkScalarWhereWithAggregatesInput
    | Prisma.EntityLinkScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'EntityLink'> | string
  url?: Prisma.StringWithAggregatesFilter<'EntityLink'> | string
  title?:
    | Prisma.StringNullableWithAggregatesFilter<'EntityLink'>
    | string
    | null
  description?:
    | Prisma.StringNullableWithAggregatesFilter<'EntityLink'>
    | string
    | null
  entityType?: Prisma.StringWithAggregatesFilter<'EntityLink'> | string
  entityId?: Prisma.StringWithAggregatesFilter<'EntityLink'> | string
  organizationId?: Prisma.StringWithAggregatesFilter<'EntityLink'> | string
  createdById?: Prisma.StringWithAggregatesFilter<'EntityLink'> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'EntityLink'> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'EntityLink'> | Date | string
}

export type EntityLinkCreateInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutEntityLinksInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedEntityLinksInput
}

export type EntityLinkUncheckedCreateInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  organizationId: string
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EntityLinkUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutEntityLinksNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedEntityLinksNestedInput
}

export type EntityLinkUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkCreateManyInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  organizationId: string
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EntityLinkUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkListRelationFilter = {
  every?: Prisma.EntityLinkWhereInput
  some?: Prisma.EntityLinkWhereInput
  none?: Prisma.EntityLinkWhereInput
}

export type EntityLinkOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EntityLinkCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EntityLinkMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EntityLinkMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  url?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EntityLinkCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutOrganizationInput,
        Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.EntityLinkCreateWithoutOrganizationInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.EntityLinkCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
}

export type EntityLinkUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutOrganizationInput,
        Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.EntityLinkCreateWithoutOrganizationInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.EntityLinkCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
}

export type EntityLinkUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutOrganizationInput,
        Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.EntityLinkCreateWithoutOrganizationInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.EntityLinkCreateManyOrganizationInputEnvelope
  set?: Prisma.EntityLinkWhereUniqueInput | Prisma.EntityLinkWhereUniqueInput[]
  disconnect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  delete?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  update?:
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.EntityLinkUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.EntityLinkUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.EntityLinkScalarWhereInput
    | Prisma.EntityLinkScalarWhereInput[]
}

export type EntityLinkUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutOrganizationInput,
        Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.EntityLinkCreateWithoutOrganizationInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput
    | Prisma.EntityLinkCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.EntityLinkCreateManyOrganizationInputEnvelope
  set?: Prisma.EntityLinkWhereUniqueInput | Prisma.EntityLinkWhereUniqueInput[]
  disconnect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  delete?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  update?:
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.EntityLinkUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.EntityLinkUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.EntityLinkScalarWhereInput
    | Prisma.EntityLinkScalarWhereInput[]
}

export type EntityLinkCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutCreatedByInput,
        Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.EntityLinkCreateWithoutCreatedByInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.EntityLinkCreateManyCreatedByInputEnvelope
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
}

export type EntityLinkUncheckedCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutCreatedByInput,
        Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.EntityLinkCreateWithoutCreatedByInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.EntityLinkCreateManyCreatedByInputEnvelope
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
}

export type EntityLinkUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutCreatedByInput,
        Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.EntityLinkCreateWithoutCreatedByInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput[]
  upsert?:
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.EntityLinkCreateManyCreatedByInputEnvelope
  set?: Prisma.EntityLinkWhereUniqueInput | Prisma.EntityLinkWhereUniqueInput[]
  disconnect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  delete?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  update?:
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?:
    | Prisma.EntityLinkUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.EntityLinkUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?:
    | Prisma.EntityLinkScalarWhereInput
    | Prisma.EntityLinkScalarWhereInput[]
}

export type EntityLinkUncheckedUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EntityLinkCreateWithoutCreatedByInput,
        Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.EntityLinkCreateWithoutCreatedByInput[]
    | Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?:
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput
    | Prisma.EntityLinkCreateOrConnectWithoutCreatedByInput[]
  upsert?:
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.EntityLinkUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.EntityLinkCreateManyCreatedByInputEnvelope
  set?: Prisma.EntityLinkWhereUniqueInput | Prisma.EntityLinkWhereUniqueInput[]
  disconnect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  delete?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  connect?:
    | Prisma.EntityLinkWhereUniqueInput
    | Prisma.EntityLinkWhereUniqueInput[]
  update?:
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.EntityLinkUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?:
    | Prisma.EntityLinkUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.EntityLinkUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?:
    | Prisma.EntityLinkScalarWhereInput
    | Prisma.EntityLinkScalarWhereInput[]
}

export type EntityLinkCreateWithoutOrganizationInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedEntityLinksInput
}

export type EntityLinkUncheckedCreateWithoutOrganizationInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EntityLinkCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.EntityLinkWhereUniqueInput
  create: Prisma.XOR<
    Prisma.EntityLinkCreateWithoutOrganizationInput,
    Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput
  >
}

export type EntityLinkCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.EntityLinkCreateManyOrganizationInput
    | Prisma.EntityLinkCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type EntityLinkUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.EntityLinkWhereUniqueInput
  update: Prisma.XOR<
    Prisma.EntityLinkUpdateWithoutOrganizationInput,
    Prisma.EntityLinkUncheckedUpdateWithoutOrganizationInput
  >
  create: Prisma.XOR<
    Prisma.EntityLinkCreateWithoutOrganizationInput,
    Prisma.EntityLinkUncheckedCreateWithoutOrganizationInput
  >
}

export type EntityLinkUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.EntityLinkWhereUniqueInput
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateWithoutOrganizationInput,
    Prisma.EntityLinkUncheckedUpdateWithoutOrganizationInput
  >
}

export type EntityLinkUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.EntityLinkScalarWhereInput
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateManyMutationInput,
    Prisma.EntityLinkUncheckedUpdateManyWithoutOrganizationInput
  >
}

export type EntityLinkScalarWhereInput = {
  AND?: Prisma.EntityLinkScalarWhereInput | Prisma.EntityLinkScalarWhereInput[]
  OR?: Prisma.EntityLinkScalarWhereInput[]
  NOT?: Prisma.EntityLinkScalarWhereInput | Prisma.EntityLinkScalarWhereInput[]
  id?: Prisma.StringFilter<'EntityLink'> | string
  url?: Prisma.StringFilter<'EntityLink'> | string
  title?: Prisma.StringNullableFilter<'EntityLink'> | string | null
  description?: Prisma.StringNullableFilter<'EntityLink'> | string | null
  entityType?: Prisma.StringFilter<'EntityLink'> | string
  entityId?: Prisma.StringFilter<'EntityLink'> | string
  organizationId?: Prisma.StringFilter<'EntityLink'> | string
  createdById?: Prisma.StringFilter<'EntityLink'> | string
  createdAt?: Prisma.DateTimeFilter<'EntityLink'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'EntityLink'> | Date | string
}

export type EntityLinkCreateWithoutCreatedByInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutEntityLinksInput
}

export type EntityLinkUncheckedCreateWithoutCreatedByInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  organizationId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EntityLinkCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.EntityLinkWhereUniqueInput
  create: Prisma.XOR<
    Prisma.EntityLinkCreateWithoutCreatedByInput,
    Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput
  >
}

export type EntityLinkCreateManyCreatedByInputEnvelope = {
  data:
    | Prisma.EntityLinkCreateManyCreatedByInput
    | Prisma.EntityLinkCreateManyCreatedByInput[]
  skipDuplicates?: boolean
}

export type EntityLinkUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.EntityLinkWhereUniqueInput
  update: Prisma.XOR<
    Prisma.EntityLinkUpdateWithoutCreatedByInput,
    Prisma.EntityLinkUncheckedUpdateWithoutCreatedByInput
  >
  create: Prisma.XOR<
    Prisma.EntityLinkCreateWithoutCreatedByInput,
    Prisma.EntityLinkUncheckedCreateWithoutCreatedByInput
  >
}

export type EntityLinkUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.EntityLinkWhereUniqueInput
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateWithoutCreatedByInput,
    Prisma.EntityLinkUncheckedUpdateWithoutCreatedByInput
  >
}

export type EntityLinkUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.EntityLinkScalarWhereInput
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateManyMutationInput,
    Prisma.EntityLinkUncheckedUpdateManyWithoutCreatedByInput
  >
}

export type EntityLinkCreateManyOrganizationInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  createdById: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EntityLinkUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedEntityLinksNestedInput
}

export type EntityLinkUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkCreateManyCreatedByInput = {
  id?: string
  url: string
  title?: string | null
  description?: string | null
  entityType: string
  entityId: string
  organizationId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EntityLinkUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutEntityLinksNestedInput
}

export type EntityLinkUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  url?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EntityLinkSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    url?: boolean
    title?: boolean
    description?: boolean
    entityType?: boolean
    entityId?: boolean
    organizationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['entityLink']
>

export type EntityLinkSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    url?: boolean
    title?: boolean
    description?: boolean
    entityType?: boolean
    entityId?: boolean
    organizationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['entityLink']
>

export type EntityLinkSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    url?: boolean
    title?: boolean
    description?: boolean
    entityType?: boolean
    entityId?: boolean
    organizationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['entityLink']
>

export type EntityLinkSelectScalar = {
  id?: boolean
  url?: boolean
  title?: boolean
  description?: boolean
  entityType?: boolean
  entityId?: boolean
  organizationId?: boolean
  createdById?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type EntityLinkOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'url'
  | 'title'
  | 'description'
  | 'entityType'
  | 'entityId'
  | 'organizationId'
  | 'createdById'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['entityLink']
>
export type EntityLinkInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type EntityLinkIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type EntityLinkIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $EntityLinkPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'EntityLink'
  objects: {
    organization: Prisma.$OrganizationPayload<ExtArgs>
    createdBy: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      url: string
      title: string | null
      description: string | null
      entityType: string
      entityId: string
      organizationId: string
      createdById: string
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['entityLink']
  >
  composites: {}
}

export type EntityLinkGetPayload<
  S extends boolean | null | undefined | EntityLinkDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$EntityLinkPayload, S>

export type EntityLinkCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<EntityLinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: EntityLinkCountAggregateInputType | true
}

export interface EntityLinkDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['EntityLink']
    meta: { name: 'EntityLink' }
  }
  /**
   * Find zero or one EntityLink that matches the filter.
   * @param {EntityLinkFindUniqueArgs} args - Arguments to find a EntityLink
   * @example
   * // Get one EntityLink
   * const entityLink = await prisma.entityLink.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EntityLinkFindUniqueArgs>(
    args: Prisma.SelectSubset<T, EntityLinkFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one EntityLink that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EntityLinkFindUniqueOrThrowArgs} args - Arguments to find a EntityLink
   * @example
   * // Get one EntityLink
   * const entityLink = await prisma.entityLink.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EntityLinkFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, EntityLinkFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first EntityLink that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkFindFirstArgs} args - Arguments to find a EntityLink
   * @example
   * // Get one EntityLink
   * const entityLink = await prisma.entityLink.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EntityLinkFindFirstArgs>(
    args?: Prisma.SelectSubset<T, EntityLinkFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first EntityLink that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkFindFirstOrThrowArgs} args - Arguments to find a EntityLink
   * @example
   * // Get one EntityLink
   * const entityLink = await prisma.entityLink.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EntityLinkFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, EntityLinkFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more EntityLinks that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EntityLinks
   * const entityLinks = await prisma.entityLink.findMany()
   *
   * // Get first 10 EntityLinks
   * const entityLinks = await prisma.entityLink.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const entityLinkWithIdOnly = await prisma.entityLink.findMany({ select: { id: true } })
   *
   */
  findMany<T extends EntityLinkFindManyArgs>(
    args?: Prisma.SelectSubset<T, EntityLinkFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a EntityLink.
   * @param {EntityLinkCreateArgs} args - Arguments to create a EntityLink.
   * @example
   * // Create one EntityLink
   * const EntityLink = await prisma.entityLink.create({
   *   data: {
   *     // ... data to create a EntityLink
   *   }
   * })
   *
   */
  create<T extends EntityLinkCreateArgs>(
    args: Prisma.SelectSubset<T, EntityLinkCreateArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many EntityLinks.
   * @param {EntityLinkCreateManyArgs} args - Arguments to create many EntityLinks.
   * @example
   * // Create many EntityLinks
   * const entityLink = await prisma.entityLink.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends EntityLinkCreateManyArgs>(
    args?: Prisma.SelectSubset<T, EntityLinkCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many EntityLinks and returns the data saved in the database.
   * @param {EntityLinkCreateManyAndReturnArgs} args - Arguments to create many EntityLinks.
   * @example
   * // Create many EntityLinks
   * const entityLink = await prisma.entityLink.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many EntityLinks and only return the `id`
   * const entityLinkWithIdOnly = await prisma.entityLink.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends EntityLinkCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, EntityLinkCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a EntityLink.
   * @param {EntityLinkDeleteArgs} args - Arguments to delete one EntityLink.
   * @example
   * // Delete one EntityLink
   * const EntityLink = await prisma.entityLink.delete({
   *   where: {
   *     // ... filter to delete one EntityLink
   *   }
   * })
   *
   */
  delete<T extends EntityLinkDeleteArgs>(
    args: Prisma.SelectSubset<T, EntityLinkDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one EntityLink.
   * @param {EntityLinkUpdateArgs} args - Arguments to update one EntityLink.
   * @example
   * // Update one EntityLink
   * const entityLink = await prisma.entityLink.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends EntityLinkUpdateArgs>(
    args: Prisma.SelectSubset<T, EntityLinkUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more EntityLinks.
   * @param {EntityLinkDeleteManyArgs} args - Arguments to filter EntityLinks to delete.
   * @example
   * // Delete a few EntityLinks
   * const { count } = await prisma.entityLink.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends EntityLinkDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, EntityLinkDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EntityLinks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EntityLinks
   * const entityLink = await prisma.entityLink.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends EntityLinkUpdateManyArgs>(
    args: Prisma.SelectSubset<T, EntityLinkUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EntityLinks and returns the data updated in the database.
   * @param {EntityLinkUpdateManyAndReturnArgs} args - Arguments to update many EntityLinks.
   * @example
   * // Update many EntityLinks
   * const entityLink = await prisma.entityLink.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more EntityLinks and only return the `id`
   * const entityLinkWithIdOnly = await prisma.entityLink.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends EntityLinkUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, EntityLinkUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one EntityLink.
   * @param {EntityLinkUpsertArgs} args - Arguments to update or create a EntityLink.
   * @example
   * // Update or create a EntityLink
   * const entityLink = await prisma.entityLink.upsert({
   *   create: {
   *     // ... data to create a EntityLink
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EntityLink we want to update
   *   }
   * })
   */
  upsert<T extends EntityLinkUpsertArgs>(
    args: Prisma.SelectSubset<T, EntityLinkUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__EntityLinkClient<
    runtime.Types.Result.GetResult<
      Prisma.$EntityLinkPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of EntityLinks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkCountArgs} args - Arguments to filter EntityLinks to count.
   * @example
   * // Count the number of EntityLinks
   * const count = await prisma.entityLink.count({
   *   where: {
   *     // ... the filter for the EntityLinks we want to count
   *   }
   * })
   **/
  count<T extends EntityLinkCountArgs>(
    args?: Prisma.Subset<T, EntityLinkCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EntityLinkCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a EntityLink.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends EntityLinkAggregateArgs>(
    args: Prisma.Subset<T, EntityLinkAggregateArgs>
  ): Prisma.PrismaPromise<GetEntityLinkAggregateType<T>>

  /**
   * Group by EntityLink.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EntityLinkGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends EntityLinkGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EntityLinkGroupByArgs['orderBy'] }
      : { orderBy?: EntityLinkGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, EntityLinkGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetEntityLinkGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EntityLink model
   */
  readonly fields: EntityLinkFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for EntityLink.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EntityLinkClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  createdBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the EntityLink model
 */
export interface EntityLinkFieldRefs {
  readonly id: Prisma.FieldRef<'EntityLink', 'String'>
  readonly url: Prisma.FieldRef<'EntityLink', 'String'>
  readonly title: Prisma.FieldRef<'EntityLink', 'String'>
  readonly description: Prisma.FieldRef<'EntityLink', 'String'>
  readonly entityType: Prisma.FieldRef<'EntityLink', 'String'>
  readonly entityId: Prisma.FieldRef<'EntityLink', 'String'>
  readonly organizationId: Prisma.FieldRef<'EntityLink', 'String'>
  readonly createdById: Prisma.FieldRef<'EntityLink', 'String'>
  readonly createdAt: Prisma.FieldRef<'EntityLink', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'EntityLink', 'DateTime'>
}

// Custom InputTypes
/**
 * EntityLink findUnique
 */
export type EntityLinkFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * Filter, which EntityLink to fetch.
   */
  where: Prisma.EntityLinkWhereUniqueInput
}

/**
 * EntityLink findUniqueOrThrow
 */
export type EntityLinkFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * Filter, which EntityLink to fetch.
   */
  where: Prisma.EntityLinkWhereUniqueInput
}

/**
 * EntityLink findFirst
 */
export type EntityLinkFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * Filter, which EntityLink to fetch.
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EntityLinks to fetch.
   */
  orderBy?:
    | Prisma.EntityLinkOrderByWithRelationInput
    | Prisma.EntityLinkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EntityLinks.
   */
  cursor?: Prisma.EntityLinkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EntityLinks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EntityLinks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EntityLinks.
   */
  distinct?:
    | Prisma.EntityLinkScalarFieldEnum
    | Prisma.EntityLinkScalarFieldEnum[]
}

/**
 * EntityLink findFirstOrThrow
 */
export type EntityLinkFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * Filter, which EntityLink to fetch.
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EntityLinks to fetch.
   */
  orderBy?:
    | Prisma.EntityLinkOrderByWithRelationInput
    | Prisma.EntityLinkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EntityLinks.
   */
  cursor?: Prisma.EntityLinkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EntityLinks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EntityLinks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EntityLinks.
   */
  distinct?:
    | Prisma.EntityLinkScalarFieldEnum
    | Prisma.EntityLinkScalarFieldEnum[]
}

/**
 * EntityLink findMany
 */
export type EntityLinkFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * Filter, which EntityLinks to fetch.
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EntityLinks to fetch.
   */
  orderBy?:
    | Prisma.EntityLinkOrderByWithRelationInput
    | Prisma.EntityLinkOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing EntityLinks.
   */
  cursor?: Prisma.EntityLinkWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EntityLinks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EntityLinks.
   */
  skip?: number
  distinct?:
    | Prisma.EntityLinkScalarFieldEnum
    | Prisma.EntityLinkScalarFieldEnum[]
}

/**
 * EntityLink create
 */
export type EntityLinkCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * The data needed to create a EntityLink.
   */
  data: Prisma.XOR<
    Prisma.EntityLinkCreateInput,
    Prisma.EntityLinkUncheckedCreateInput
  >
}

/**
 * EntityLink createMany
 */
export type EntityLinkCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many EntityLinks.
   */
  data: Prisma.EntityLinkCreateManyInput | Prisma.EntityLinkCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * EntityLink createManyAndReturn
 */
export type EntityLinkCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * The data used to create many EntityLinks.
   */
  data: Prisma.EntityLinkCreateManyInput | Prisma.EntityLinkCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * EntityLink update
 */
export type EntityLinkUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * The data needed to update a EntityLink.
   */
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateInput,
    Prisma.EntityLinkUncheckedUpdateInput
  >
  /**
   * Choose, which EntityLink to update.
   */
  where: Prisma.EntityLinkWhereUniqueInput
}

/**
 * EntityLink updateMany
 */
export type EntityLinkUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update EntityLinks.
   */
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateManyMutationInput,
    Prisma.EntityLinkUncheckedUpdateManyInput
  >
  /**
   * Filter which EntityLinks to update
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * Limit how many EntityLinks to update.
   */
  limit?: number
}

/**
 * EntityLink updateManyAndReturn
 */
export type EntityLinkUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * The data used to update EntityLinks.
   */
  data: Prisma.XOR<
    Prisma.EntityLinkUpdateManyMutationInput,
    Prisma.EntityLinkUncheckedUpdateManyInput
  >
  /**
   * Filter which EntityLinks to update
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * Limit how many EntityLinks to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * EntityLink upsert
 */
export type EntityLinkUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * The filter to search for the EntityLink to update in case it exists.
   */
  where: Prisma.EntityLinkWhereUniqueInput
  /**
   * In case the EntityLink found by the `where` argument doesn't exist, create a new EntityLink with this data.
   */
  create: Prisma.XOR<
    Prisma.EntityLinkCreateInput,
    Prisma.EntityLinkUncheckedCreateInput
  >
  /**
   * In case the EntityLink was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.EntityLinkUpdateInput,
    Prisma.EntityLinkUncheckedUpdateInput
  >
}

/**
 * EntityLink delete
 */
export type EntityLinkDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
  /**
   * Filter which EntityLink to delete.
   */
  where: Prisma.EntityLinkWhereUniqueInput
}

/**
 * EntityLink deleteMany
 */
export type EntityLinkDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which EntityLinks to delete
   */
  where?: Prisma.EntityLinkWhereInput
  /**
   * Limit how many EntityLinks to delete.
   */
  limit?: number
}

/**
 * EntityLink without action
 */
export type EntityLinkDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EntityLink
   */
  select?: Prisma.EntityLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EntityLink
   */
  omit?: Prisma.EntityLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EntityLinkInclude<ExtArgs> | null
}
