/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `OrganizationInvitation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model OrganizationInvitation
 *
 */
export type OrganizationInvitationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$OrganizationInvitationPayload>

export type AggregateOrganizationInvitation = {
  _count: OrganizationInvitationCountAggregateOutputType | null
  _min: OrganizationInvitationMinAggregateOutputType | null
  _max: OrganizationInvitationMaxAggregateOutputType | null
}

export type OrganizationInvitationMinAggregateOutputType = {
  id: string | null
  email: string | null
  organizationId: string | null
  invitedById: string | null
  status: string | null
  expiresAt: Date | null
  acceptedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OrganizationInvitationMaxAggregateOutputType = {
  id: string | null
  email: string | null
  organizationId: string | null
  invitedById: string | null
  status: string | null
  expiresAt: Date | null
  acceptedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OrganizationInvitationCountAggregateOutputType = {
  id: number
  email: number
  organizationId: number
  invitedById: number
  status: number
  expiresAt: number
  acceptedAt: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type OrganizationInvitationMinAggregateInputType = {
  id?: true
  email?: true
  organizationId?: true
  invitedById?: true
  status?: true
  expiresAt?: true
  acceptedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type OrganizationInvitationMaxAggregateInputType = {
  id?: true
  email?: true
  organizationId?: true
  invitedById?: true
  status?: true
  expiresAt?: true
  acceptedAt?: true
  createdAt?: true
  updatedAt?: true
}

export type OrganizationInvitationCountAggregateInputType = {
  id?: true
  email?: true
  organizationId?: true
  invitedById?: true
  status?: true
  expiresAt?: true
  acceptedAt?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type OrganizationInvitationAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which OrganizationInvitation to aggregate.
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationInvitations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationInvitationOrderByWithRelationInput
    | Prisma.OrganizationInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.OrganizationInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationInvitations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned OrganizationInvitations
   **/
  _count?: true | OrganizationInvitationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: OrganizationInvitationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: OrganizationInvitationMaxAggregateInputType
}

export type GetOrganizationInvitationAggregateType<
  T extends OrganizationInvitationAggregateArgs,
> = {
  [P in keyof T & keyof AggregateOrganizationInvitation]: P extends
    | '_count'
    | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrganizationInvitation[P]>
    : Prisma.GetScalarType<T[P], AggregateOrganizationInvitation[P]>
}

export type OrganizationInvitationGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OrganizationInvitationWhereInput
  orderBy?:
    | Prisma.OrganizationInvitationOrderByWithAggregationInput
    | Prisma.OrganizationInvitationOrderByWithAggregationInput[]
  by:
    | Prisma.OrganizationInvitationScalarFieldEnum[]
    | Prisma.OrganizationInvitationScalarFieldEnum
  having?: Prisma.OrganizationInvitationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OrganizationInvitationCountAggregateInputType | true
  _min?: OrganizationInvitationMinAggregateInputType
  _max?: OrganizationInvitationMaxAggregateInputType
}

export type OrganizationInvitationGroupByOutputType = {
  id: string
  email: string
  organizationId: string
  invitedById: string
  status: string
  expiresAt: Date
  acceptedAt: Date | null
  createdAt: Date
  updatedAt: Date
  _count: OrganizationInvitationCountAggregateOutputType | null
  _min: OrganizationInvitationMinAggregateOutputType | null
  _max: OrganizationInvitationMaxAggregateOutputType | null
}

type GetOrganizationInvitationGroupByPayload<
  T extends OrganizationInvitationGroupByArgs,
> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OrganizationInvitationGroupByOutputType, T['by']> & {
      [P in keyof T &
        keyof OrganizationInvitationGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<
              T[P],
              OrganizationInvitationGroupByOutputType[P]
            >
        : Prisma.GetScalarType<T[P], OrganizationInvitationGroupByOutputType[P]>
    }
  >
>

export type OrganizationInvitationWhereInput = {
  AND?:
    | Prisma.OrganizationInvitationWhereInput
    | Prisma.OrganizationInvitationWhereInput[]
  OR?: Prisma.OrganizationInvitationWhereInput[]
  NOT?:
    | Prisma.OrganizationInvitationWhereInput
    | Prisma.OrganizationInvitationWhereInput[]
  id?: Prisma.StringFilter<'OrganizationInvitation'> | string
  email?: Prisma.StringFilter<'OrganizationInvitation'> | string
  organizationId?: Prisma.StringFilter<'OrganizationInvitation'> | string
  invitedById?: Prisma.StringFilter<'OrganizationInvitation'> | string
  status?: Prisma.StringFilter<'OrganizationInvitation'> | string
  expiresAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
  acceptedAt?:
    | Prisma.DateTimeNullableFilter<'OrganizationInvitation'>
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  invitedBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type OrganizationInvitationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  status?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organization?: Prisma.OrganizationOrderByWithRelationInput
  invitedBy?: Prisma.UserOrderByWithRelationInput
}

export type OrganizationInvitationWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    email_organizationId?: Prisma.OrganizationInvitationEmailOrganizationIdCompoundUniqueInput
    AND?:
      | Prisma.OrganizationInvitationWhereInput
      | Prisma.OrganizationInvitationWhereInput[]
    OR?: Prisma.OrganizationInvitationWhereInput[]
    NOT?:
      | Prisma.OrganizationInvitationWhereInput
      | Prisma.OrganizationInvitationWhereInput[]
    email?: Prisma.StringFilter<'OrganizationInvitation'> | string
    organizationId?: Prisma.StringFilter<'OrganizationInvitation'> | string
    invitedById?: Prisma.StringFilter<'OrganizationInvitation'> | string
    status?: Prisma.StringFilter<'OrganizationInvitation'> | string
    expiresAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
    acceptedAt?:
      | Prisma.DateTimeNullableFilter<'OrganizationInvitation'>
      | Date
      | string
      | null
    createdAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    invitedBy?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >
  },
  'id' | 'email_organizationId'
>

export type OrganizationInvitationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  status?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.OrganizationInvitationCountOrderByAggregateInput
  _max?: Prisma.OrganizationInvitationMaxOrderByAggregateInput
  _min?: Prisma.OrganizationInvitationMinOrderByAggregateInput
}

export type OrganizationInvitationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.OrganizationInvitationScalarWhereWithAggregatesInput
    | Prisma.OrganizationInvitationScalarWhereWithAggregatesInput[]
  OR?: Prisma.OrganizationInvitationScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.OrganizationInvitationScalarWhereWithAggregatesInput
    | Prisma.OrganizationInvitationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'OrganizationInvitation'> | string
  email?: Prisma.StringWithAggregatesFilter<'OrganizationInvitation'> | string
  organizationId?:
    | Prisma.StringWithAggregatesFilter<'OrganizationInvitation'>
    | string
  invitedById?:
    | Prisma.StringWithAggregatesFilter<'OrganizationInvitation'>
    | string
  status?: Prisma.StringWithAggregatesFilter<'OrganizationInvitation'> | string
  expiresAt?:
    | Prisma.DateTimeWithAggregatesFilter<'OrganizationInvitation'>
    | Date
    | string
  acceptedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'OrganizationInvitation'>
    | Date
    | string
    | null
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'OrganizationInvitation'>
    | Date
    | string
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<'OrganizationInvitation'>
    | Date
    | string
}

export type OrganizationInvitationCreateInput = {
  id?: string
  email: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutInvitationsInput
  invitedBy: Prisma.UserCreateNestedOneWithoutSentInvitationsInput
}

export type OrganizationInvitationUncheckedCreateInput = {
  id?: string
  email: string
  organizationId: string
  invitedById: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationInvitationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInvitationsNestedInput
  invitedBy?: Prisma.UserUpdateOneRequiredWithoutSentInvitationsNestedInput
}

export type OrganizationInvitationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationInvitationCreateManyInput = {
  id?: string
  email: string
  organizationId: string
  invitedById: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationInvitationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationInvitationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationInvitationListRelationFilter = {
  every?: Prisma.OrganizationInvitationWhereInput
  some?: Prisma.OrganizationInvitationWhereInput
  none?: Prisma.OrganizationInvitationWhereInput
}

export type OrganizationInvitationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type OrganizationInvitationEmailOrganizationIdCompoundUniqueInput = {
  email: string
  organizationId: string
}

export type OrganizationInvitationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  status?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationInvitationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  status?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationInvitationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  status?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OrganizationInvitationCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationInvitationCreateWithoutOrganizationInput,
        Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.OrganizationInvitationCreateWithoutOrganizationInput[]
    | Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput
    | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.OrganizationInvitationCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
}

export type OrganizationInvitationUncheckedCreateNestedManyWithoutOrganizationInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.OrganizationInvitationCreateWithoutOrganizationInput,
          Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput
        >
      | Prisma.OrganizationInvitationCreateWithoutOrganizationInput[]
      | Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?:
      | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput
      | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput[]
    createMany?: Prisma.OrganizationInvitationCreateManyOrganizationInputEnvelope
    connect?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
  }

export type OrganizationInvitationUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationInvitationCreateWithoutOrganizationInput,
        Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.OrganizationInvitationCreateWithoutOrganizationInput[]
    | Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput
    | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.OrganizationInvitationCreateManyOrganizationInputEnvelope
  set?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  disconnect?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  delete?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  connect?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  update?:
    | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.OrganizationInvitationScalarWhereInput
    | Prisma.OrganizationInvitationScalarWhereInput[]
}

export type OrganizationInvitationUncheckedUpdateManyWithoutOrganizationNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.OrganizationInvitationCreateWithoutOrganizationInput,
          Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput
        >
      | Prisma.OrganizationInvitationCreateWithoutOrganizationInput[]
      | Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?:
      | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput
      | Prisma.OrganizationInvitationCreateOrConnectWithoutOrganizationInput[]
    upsert?:
      | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutOrganizationInput
      | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: Prisma.OrganizationInvitationCreateManyOrganizationInputEnvelope
    set?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    disconnect?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    delete?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    connect?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    update?:
      | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutOrganizationInput
      | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?:
      | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutOrganizationInput
      | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?:
      | Prisma.OrganizationInvitationScalarWhereInput
      | Prisma.OrganizationInvitationScalarWhereInput[]
  }

export type OrganizationInvitationCreateNestedManyWithoutInvitedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationInvitationCreateWithoutInvitedByInput,
        Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput
      >
    | Prisma.OrganizationInvitationCreateWithoutInvitedByInput[]
    | Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput[]
  connectOrCreate?:
    | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput
    | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput[]
  createMany?: Prisma.OrganizationInvitationCreateManyInvitedByInputEnvelope
  connect?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
}

export type OrganizationInvitationUncheckedCreateNestedManyWithoutInvitedByInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.OrganizationInvitationCreateWithoutInvitedByInput,
          Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput
        >
      | Prisma.OrganizationInvitationCreateWithoutInvitedByInput[]
      | Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?:
      | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput
      | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput[]
    createMany?: Prisma.OrganizationInvitationCreateManyInvitedByInputEnvelope
    connect?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
  }

export type OrganizationInvitationUpdateManyWithoutInvitedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationInvitationCreateWithoutInvitedByInput,
        Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput
      >
    | Prisma.OrganizationInvitationCreateWithoutInvitedByInput[]
    | Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput[]
  connectOrCreate?:
    | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput
    | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput[]
  upsert?:
    | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutInvitedByInput
    | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutInvitedByInput[]
  createMany?: Prisma.OrganizationInvitationCreateManyInvitedByInputEnvelope
  set?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  disconnect?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  delete?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  connect?:
    | Prisma.OrganizationInvitationWhereUniqueInput
    | Prisma.OrganizationInvitationWhereUniqueInput[]
  update?:
    | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutInvitedByInput
    | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutInvitedByInput[]
  updateMany?:
    | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutInvitedByInput
    | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutInvitedByInput[]
  deleteMany?:
    | Prisma.OrganizationInvitationScalarWhereInput
    | Prisma.OrganizationInvitationScalarWhereInput[]
}

export type OrganizationInvitationUncheckedUpdateManyWithoutInvitedByNestedInput =
  {
    create?:
      | Prisma.XOR<
          Prisma.OrganizationInvitationCreateWithoutInvitedByInput,
          Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput
        >
      | Prisma.OrganizationInvitationCreateWithoutInvitedByInput[]
      | Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?:
      | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput
      | Prisma.OrganizationInvitationCreateOrConnectWithoutInvitedByInput[]
    upsert?:
      | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutInvitedByInput
      | Prisma.OrganizationInvitationUpsertWithWhereUniqueWithoutInvitedByInput[]
    createMany?: Prisma.OrganizationInvitationCreateManyInvitedByInputEnvelope
    set?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    disconnect?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    delete?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    connect?:
      | Prisma.OrganizationInvitationWhereUniqueInput
      | Prisma.OrganizationInvitationWhereUniqueInput[]
    update?:
      | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutInvitedByInput
      | Prisma.OrganizationInvitationUpdateWithWhereUniqueWithoutInvitedByInput[]
    updateMany?:
      | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutInvitedByInput
      | Prisma.OrganizationInvitationUpdateManyWithWhereWithoutInvitedByInput[]
    deleteMany?:
      | Prisma.OrganizationInvitationScalarWhereInput
      | Prisma.OrganizationInvitationScalarWhereInput[]
  }

export type OrganizationInvitationCreateWithoutOrganizationInput = {
  id?: string
  email: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  invitedBy: Prisma.UserCreateNestedOneWithoutSentInvitationsInput
}

export type OrganizationInvitationUncheckedCreateWithoutOrganizationInput = {
  id?: string
  email: string
  invitedById: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationInvitationCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.OrganizationInvitationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationInvitationCreateWithoutOrganizationInput,
    Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput
  >
}

export type OrganizationInvitationCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.OrganizationInvitationCreateManyOrganizationInput
    | Prisma.OrganizationInvitationCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type OrganizationInvitationUpsertWithWhereUniqueWithoutOrganizationInput =
  {
    where: Prisma.OrganizationInvitationWhereUniqueInput
    update: Prisma.XOR<
      Prisma.OrganizationInvitationUpdateWithoutOrganizationInput,
      Prisma.OrganizationInvitationUncheckedUpdateWithoutOrganizationInput
    >
    create: Prisma.XOR<
      Prisma.OrganizationInvitationCreateWithoutOrganizationInput,
      Prisma.OrganizationInvitationUncheckedCreateWithoutOrganizationInput
    >
  }

export type OrganizationInvitationUpdateWithWhereUniqueWithoutOrganizationInput =
  {
    where: Prisma.OrganizationInvitationWhereUniqueInput
    data: Prisma.XOR<
      Prisma.OrganizationInvitationUpdateWithoutOrganizationInput,
      Prisma.OrganizationInvitationUncheckedUpdateWithoutOrganizationInput
    >
  }

export type OrganizationInvitationUpdateManyWithWhereWithoutOrganizationInput =
  {
    where: Prisma.OrganizationInvitationScalarWhereInput
    data: Prisma.XOR<
      Prisma.OrganizationInvitationUpdateManyMutationInput,
      Prisma.OrganizationInvitationUncheckedUpdateManyWithoutOrganizationInput
    >
  }

export type OrganizationInvitationScalarWhereInput = {
  AND?:
    | Prisma.OrganizationInvitationScalarWhereInput
    | Prisma.OrganizationInvitationScalarWhereInput[]
  OR?: Prisma.OrganizationInvitationScalarWhereInput[]
  NOT?:
    | Prisma.OrganizationInvitationScalarWhereInput
    | Prisma.OrganizationInvitationScalarWhereInput[]
  id?: Prisma.StringFilter<'OrganizationInvitation'> | string
  email?: Prisma.StringFilter<'OrganizationInvitation'> | string
  organizationId?: Prisma.StringFilter<'OrganizationInvitation'> | string
  invitedById?: Prisma.StringFilter<'OrganizationInvitation'> | string
  status?: Prisma.StringFilter<'OrganizationInvitation'> | string
  expiresAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
  acceptedAt?:
    | Prisma.DateTimeNullableFilter<'OrganizationInvitation'>
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'OrganizationInvitation'> | Date | string
}

export type OrganizationInvitationCreateWithoutInvitedByInput = {
  id?: string
  email: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutInvitationsInput
}

export type OrganizationInvitationUncheckedCreateWithoutInvitedByInput = {
  id?: string
  email: string
  organizationId: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationInvitationCreateOrConnectWithoutInvitedByInput = {
  where: Prisma.OrganizationInvitationWhereUniqueInput
  create: Prisma.XOR<
    Prisma.OrganizationInvitationCreateWithoutInvitedByInput,
    Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput
  >
}

export type OrganizationInvitationCreateManyInvitedByInputEnvelope = {
  data:
    | Prisma.OrganizationInvitationCreateManyInvitedByInput
    | Prisma.OrganizationInvitationCreateManyInvitedByInput[]
  skipDuplicates?: boolean
}

export type OrganizationInvitationUpsertWithWhereUniqueWithoutInvitedByInput = {
  where: Prisma.OrganizationInvitationWhereUniqueInput
  update: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateWithoutInvitedByInput,
    Prisma.OrganizationInvitationUncheckedUpdateWithoutInvitedByInput
  >
  create: Prisma.XOR<
    Prisma.OrganizationInvitationCreateWithoutInvitedByInput,
    Prisma.OrganizationInvitationUncheckedCreateWithoutInvitedByInput
  >
}

export type OrganizationInvitationUpdateWithWhereUniqueWithoutInvitedByInput = {
  where: Prisma.OrganizationInvitationWhereUniqueInput
  data: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateWithoutInvitedByInput,
    Prisma.OrganizationInvitationUncheckedUpdateWithoutInvitedByInput
  >
}

export type OrganizationInvitationUpdateManyWithWhereWithoutInvitedByInput = {
  where: Prisma.OrganizationInvitationScalarWhereInput
  data: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateManyMutationInput,
    Prisma.OrganizationInvitationUncheckedUpdateManyWithoutInvitedByInput
  >
}

export type OrganizationInvitationCreateManyOrganizationInput = {
  id?: string
  email: string
  invitedById: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationInvitationUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  invitedBy?: Prisma.UserUpdateOneRequiredWithoutSentInvitationsNestedInput
}

export type OrganizationInvitationUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationInvitationUncheckedUpdateManyWithoutOrganizationInput =
  {
    id?: Prisma.StringFieldUpdateOperationsInput | string
    email?: Prisma.StringFieldUpdateOperationsInput | string
    invitedById?: Prisma.StringFieldUpdateOperationsInput | string
    status?: Prisma.StringFieldUpdateOperationsInput | string
    expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?:
      | Prisma.NullableDateTimeFieldUpdateOperationsInput
      | Date
      | string
      | null
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  }

export type OrganizationInvitationCreateManyInvitedByInput = {
  id?: string
  email: string
  organizationId: string
  status?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OrganizationInvitationUpdateWithoutInvitedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInvitationsNestedInput
}

export type OrganizationInvitationUncheckedUpdateWithoutInvitedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationInvitationUncheckedUpdateManyWithoutInvitedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OrganizationInvitationSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    email?: boolean
    organizationId?: boolean
    invitedById?: boolean
    status?: boolean
    expiresAt?: boolean
    acceptedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    invitedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['organizationInvitation']
>

export type OrganizationInvitationSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    email?: boolean
    organizationId?: boolean
    invitedById?: boolean
    status?: boolean
    expiresAt?: boolean
    acceptedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    invitedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['organizationInvitation']
>

export type OrganizationInvitationSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    email?: boolean
    organizationId?: boolean
    invitedById?: boolean
    status?: boolean
    expiresAt?: boolean
    acceptedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    invitedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['organizationInvitation']
>

export type OrganizationInvitationSelectScalar = {
  id?: boolean
  email?: boolean
  organizationId?: boolean
  invitedById?: boolean
  status?: boolean
  expiresAt?: boolean
  acceptedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type OrganizationInvitationOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'email'
  | 'organizationId'
  | 'invitedById'
  | 'status'
  | 'expiresAt'
  | 'acceptedAt'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['organizationInvitation']
>
export type OrganizationInvitationInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  invitedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type OrganizationInvitationIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  invitedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type OrganizationInvitationIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  invitedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $OrganizationInvitationPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'OrganizationInvitation'
  objects: {
    organization: Prisma.$OrganizationPayload<ExtArgs>
    invitedBy: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      email: string
      organizationId: string
      invitedById: string
      status: string
      expiresAt: Date
      acceptedAt: Date | null
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['organizationInvitation']
  >
  composites: {}
}

export type OrganizationInvitationGetPayload<
  S extends boolean | null | undefined | OrganizationInvitationDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$OrganizationInvitationPayload, S>

export type OrganizationInvitationCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  OrganizationInvitationFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: OrganizationInvitationCountAggregateInputType | true
}

export interface OrganizationInvitationDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['OrganizationInvitation']
    meta: { name: 'OrganizationInvitation' }
  }
  /**
   * Find zero or one OrganizationInvitation that matches the filter.
   * @param {OrganizationInvitationFindUniqueArgs} args - Arguments to find a OrganizationInvitation
   * @example
   * // Get one OrganizationInvitation
   * const organizationInvitation = await prisma.organizationInvitation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrganizationInvitationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, OrganizationInvitationFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one OrganizationInvitation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrganizationInvitationFindUniqueOrThrowArgs} args - Arguments to find a OrganizationInvitation
   * @example
   * // Get one OrganizationInvitation
   * const organizationInvitation = await prisma.organizationInvitation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrganizationInvitationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<
      T,
      OrganizationInvitationFindUniqueOrThrowArgs<ExtArgs>
    >
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first OrganizationInvitation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationFindFirstArgs} args - Arguments to find a OrganizationInvitation
   * @example
   * // Get one OrganizationInvitation
   * const organizationInvitation = await prisma.organizationInvitation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrganizationInvitationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, OrganizationInvitationFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first OrganizationInvitation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationFindFirstOrThrowArgs} args - Arguments to find a OrganizationInvitation
   * @example
   * // Get one OrganizationInvitation
   * const organizationInvitation = await prisma.organizationInvitation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrganizationInvitationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<
      T,
      OrganizationInvitationFindFirstOrThrowArgs<ExtArgs>
    >
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more OrganizationInvitations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OrganizationInvitations
   * const organizationInvitations = await prisma.organizationInvitation.findMany()
   *
   * // Get first 10 OrganizationInvitations
   * const organizationInvitations = await prisma.organizationInvitation.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const organizationInvitationWithIdOnly = await prisma.organizationInvitation.findMany({ select: { id: true } })
   *
   */
  findMany<T extends OrganizationInvitationFindManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationInvitationFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a OrganizationInvitation.
   * @param {OrganizationInvitationCreateArgs} args - Arguments to create a OrganizationInvitation.
   * @example
   * // Create one OrganizationInvitation
   * const OrganizationInvitation = await prisma.organizationInvitation.create({
   *   data: {
   *     // ... data to create a OrganizationInvitation
   *   }
   * })
   *
   */
  create<T extends OrganizationInvitationCreateArgs>(
    args: Prisma.SelectSubset<T, OrganizationInvitationCreateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many OrganizationInvitations.
   * @param {OrganizationInvitationCreateManyArgs} args - Arguments to create many OrganizationInvitations.
   * @example
   * // Create many OrganizationInvitations
   * const organizationInvitation = await prisma.organizationInvitation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends OrganizationInvitationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationInvitationCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many OrganizationInvitations and returns the data saved in the database.
   * @param {OrganizationInvitationCreateManyAndReturnArgs} args - Arguments to create many OrganizationInvitations.
   * @example
   * // Create many OrganizationInvitations
   * const organizationInvitation = await prisma.organizationInvitation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many OrganizationInvitations and only return the `id`
   * const organizationInvitationWithIdOnly = await prisma.organizationInvitation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends OrganizationInvitationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      OrganizationInvitationCreateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a OrganizationInvitation.
   * @param {OrganizationInvitationDeleteArgs} args - Arguments to delete one OrganizationInvitation.
   * @example
   * // Delete one OrganizationInvitation
   * const OrganizationInvitation = await prisma.organizationInvitation.delete({
   *   where: {
   *     // ... filter to delete one OrganizationInvitation
   *   }
   * })
   *
   */
  delete<T extends OrganizationInvitationDeleteArgs>(
    args: Prisma.SelectSubset<T, OrganizationInvitationDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one OrganizationInvitation.
   * @param {OrganizationInvitationUpdateArgs} args - Arguments to update one OrganizationInvitation.
   * @example
   * // Update one OrganizationInvitation
   * const organizationInvitation = await prisma.organizationInvitation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends OrganizationInvitationUpdateArgs>(
    args: Prisma.SelectSubset<T, OrganizationInvitationUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more OrganizationInvitations.
   * @param {OrganizationInvitationDeleteManyArgs} args - Arguments to filter OrganizationInvitations to delete.
   * @example
   * // Delete a few OrganizationInvitations
   * const { count } = await prisma.organizationInvitation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends OrganizationInvitationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationInvitationDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OrganizationInvitations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OrganizationInvitations
   * const organizationInvitation = await prisma.organizationInvitation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends OrganizationInvitationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, OrganizationInvitationUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OrganizationInvitations and returns the data updated in the database.
   * @param {OrganizationInvitationUpdateManyAndReturnArgs} args - Arguments to update many OrganizationInvitations.
   * @example
   * // Update many OrganizationInvitations
   * const organizationInvitation = await prisma.organizationInvitation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more OrganizationInvitations and only return the `id`
   * const organizationInvitationWithIdOnly = await prisma.organizationInvitation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends OrganizationInvitationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<
      T,
      OrganizationInvitationUpdateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one OrganizationInvitation.
   * @param {OrganizationInvitationUpsertArgs} args - Arguments to update or create a OrganizationInvitation.
   * @example
   * // Update or create a OrganizationInvitation
   * const organizationInvitation = await prisma.organizationInvitation.upsert({
   *   create: {
   *     // ... data to create a OrganizationInvitation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OrganizationInvitation we want to update
   *   }
   * })
   */
  upsert<T extends OrganizationInvitationUpsertArgs>(
    args: Prisma.SelectSubset<T, OrganizationInvitationUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationInvitationClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationInvitationPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of OrganizationInvitations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationCountArgs} args - Arguments to filter OrganizationInvitations to count.
   * @example
   * // Count the number of OrganizationInvitations
   * const count = await prisma.organizationInvitation.count({
   *   where: {
   *     // ... the filter for the OrganizationInvitations we want to count
   *   }
   * })
   **/
  count<T extends OrganizationInvitationCountArgs>(
    args?: Prisma.Subset<T, OrganizationInvitationCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            OrganizationInvitationCountAggregateOutputType
          >
      : number
  >

  /**
   * Allows you to perform aggregations operations on a OrganizationInvitation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends OrganizationInvitationAggregateArgs>(
    args: Prisma.Subset<T, OrganizationInvitationAggregateArgs>
  ): Prisma.PrismaPromise<GetOrganizationInvitationAggregateType<T>>

  /**
   * Group by OrganizationInvitation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationInvitationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends OrganizationInvitationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrganizationInvitationGroupByArgs['orderBy'] }
      : { orderBy?: OrganizationInvitationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<
      T,
      OrganizationInvitationGroupByArgs,
      OrderByArg
    > &
      InputErrors
  ): {} extends InputErrors
    ? GetOrganizationInvitationGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrganizationInvitation model
   */
  readonly fields: OrganizationInvitationFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for OrganizationInvitation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrganizationInvitationClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  invitedBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the OrganizationInvitation model
 */
export interface OrganizationInvitationFieldRefs {
  readonly id: Prisma.FieldRef<'OrganizationInvitation', 'String'>
  readonly email: Prisma.FieldRef<'OrganizationInvitation', 'String'>
  readonly organizationId: Prisma.FieldRef<'OrganizationInvitation', 'String'>
  readonly invitedById: Prisma.FieldRef<'OrganizationInvitation', 'String'>
  readonly status: Prisma.FieldRef<'OrganizationInvitation', 'String'>
  readonly expiresAt: Prisma.FieldRef<'OrganizationInvitation', 'DateTime'>
  readonly acceptedAt: Prisma.FieldRef<'OrganizationInvitation', 'DateTime'>
  readonly createdAt: Prisma.FieldRef<'OrganizationInvitation', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'OrganizationInvitation', 'DateTime'>
}

// Custom InputTypes
/**
 * OrganizationInvitation findUnique
 */
export type OrganizationInvitationFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OrganizationInvitation to fetch.
   */
  where: Prisma.OrganizationInvitationWhereUniqueInput
}

/**
 * OrganizationInvitation findUniqueOrThrow
 */
export type OrganizationInvitationFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OrganizationInvitation to fetch.
   */
  where: Prisma.OrganizationInvitationWhereUniqueInput
}

/**
 * OrganizationInvitation findFirst
 */
export type OrganizationInvitationFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OrganizationInvitation to fetch.
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationInvitations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationInvitationOrderByWithRelationInput
    | Prisma.OrganizationInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OrganizationInvitations.
   */
  cursor?: Prisma.OrganizationInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationInvitations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OrganizationInvitations.
   */
  distinct?:
    | Prisma.OrganizationInvitationScalarFieldEnum
    | Prisma.OrganizationInvitationScalarFieldEnum[]
}

/**
 * OrganizationInvitation findFirstOrThrow
 */
export type OrganizationInvitationFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OrganizationInvitation to fetch.
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationInvitations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationInvitationOrderByWithRelationInput
    | Prisma.OrganizationInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OrganizationInvitations.
   */
  cursor?: Prisma.OrganizationInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationInvitations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OrganizationInvitations.
   */
  distinct?:
    | Prisma.OrganizationInvitationScalarFieldEnum
    | Prisma.OrganizationInvitationScalarFieldEnum[]
}

/**
 * OrganizationInvitation findMany
 */
export type OrganizationInvitationFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OrganizationInvitations to fetch.
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationInvitations to fetch.
   */
  orderBy?:
    | Prisma.OrganizationInvitationOrderByWithRelationInput
    | Prisma.OrganizationInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing OrganizationInvitations.
   */
  cursor?: Prisma.OrganizationInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationInvitations.
   */
  skip?: number
  distinct?:
    | Prisma.OrganizationInvitationScalarFieldEnum
    | Prisma.OrganizationInvitationScalarFieldEnum[]
}

/**
 * OrganizationInvitation create
 */
export type OrganizationInvitationCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * The data needed to create a OrganizationInvitation.
   */
  data: Prisma.XOR<
    Prisma.OrganizationInvitationCreateInput,
    Prisma.OrganizationInvitationUncheckedCreateInput
  >
}

/**
 * OrganizationInvitation createMany
 */
export type OrganizationInvitationCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many OrganizationInvitations.
   */
  data:
    | Prisma.OrganizationInvitationCreateManyInput
    | Prisma.OrganizationInvitationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * OrganizationInvitation createManyAndReturn
 */
export type OrganizationInvitationCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * The data used to create many OrganizationInvitations.
   */
  data:
    | Prisma.OrganizationInvitationCreateManyInput
    | Prisma.OrganizationInvitationCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * OrganizationInvitation update
 */
export type OrganizationInvitationUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * The data needed to update a OrganizationInvitation.
   */
  data: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateInput,
    Prisma.OrganizationInvitationUncheckedUpdateInput
  >
  /**
   * Choose, which OrganizationInvitation to update.
   */
  where: Prisma.OrganizationInvitationWhereUniqueInput
}

/**
 * OrganizationInvitation updateMany
 */
export type OrganizationInvitationUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update OrganizationInvitations.
   */
  data: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateManyMutationInput,
    Prisma.OrganizationInvitationUncheckedUpdateManyInput
  >
  /**
   * Filter which OrganizationInvitations to update
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * Limit how many OrganizationInvitations to update.
   */
  limit?: number
}

/**
 * OrganizationInvitation updateManyAndReturn
 */
export type OrganizationInvitationUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * The data used to update OrganizationInvitations.
   */
  data: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateManyMutationInput,
    Prisma.OrganizationInvitationUncheckedUpdateManyInput
  >
  /**
   * Filter which OrganizationInvitations to update
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * Limit how many OrganizationInvitations to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * OrganizationInvitation upsert
 */
export type OrganizationInvitationUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * The filter to search for the OrganizationInvitation to update in case it exists.
   */
  where: Prisma.OrganizationInvitationWhereUniqueInput
  /**
   * In case the OrganizationInvitation found by the `where` argument doesn't exist, create a new OrganizationInvitation with this data.
   */
  create: Prisma.XOR<
    Prisma.OrganizationInvitationCreateInput,
    Prisma.OrganizationInvitationUncheckedCreateInput
  >
  /**
   * In case the OrganizationInvitation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.OrganizationInvitationUpdateInput,
    Prisma.OrganizationInvitationUncheckedUpdateInput
  >
}

/**
 * OrganizationInvitation delete
 */
export type OrganizationInvitationDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
  /**
   * Filter which OrganizationInvitation to delete.
   */
  where: Prisma.OrganizationInvitationWhereUniqueInput
}

/**
 * OrganizationInvitation deleteMany
 */
export type OrganizationInvitationDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which OrganizationInvitations to delete
   */
  where?: Prisma.OrganizationInvitationWhereInput
  /**
   * Limit how many OrganizationInvitations to delete.
   */
  limit?: number
}

/**
 * OrganizationInvitation without action
 */
export type OrganizationInvitationDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the OrganizationInvitation
   */
  select?: Prisma.OrganizationInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationInvitation
   */
  omit?: Prisma.OrganizationInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInvitationInclude<ExtArgs> | null
}
