/**
 * Auto-generated help content: Person Overview Report
 *
 * This file is automatically generated from reports-analytics/person-overview-report.md.
 * Do not edit this file manually. Instead, edit the markdown file and run:
 *
 *   bun run help:generate
 *
 * Generated on: 2025-10-18T10:28:31.256Z
 */

export interface HelpContent {
  id: string
  title: string
  content: string
  category?: string
}

export const helpContent: HelpContent = {
  id: 'person-overview-report',
  title: 'Person Overview Report',
  category: 'Reports & Analytics',
  content: `# Person Overview Report

The Person Overview Report provides a comprehensive analysis of an individual's work activity by aggregating data from multiple sources within ManagerOS and external integrations. It offers detailed insights into task completion, initiative involvement, and overall work patterns.

## Overview

### What is the Person Overview Report?

The Person Overview Report is a detailed analytical report that examines a person's work activity over a specified time period. It combines data from tasks, initiatives, GitHub pull requests, Jira tickets, and optional feedback to provide a complete picture of work contributions and patterns.

### Key Features

- **Comprehensive data aggregation** - Combines multiple data sources for complete analysis
- **Flexible time periods** - Configurable date ranges for specific analysis periods
- **Optional feedback integration** - Include or exclude feedback data based on needs
- **External integration support** - Incorporates GitHub and Jira activity
- **Structured output** - Organized markdown format for easy reading and sharing
- **Access control** - Secure access based on user permissions and organization membership

## Data Sources

### Task Management

The report includes detailed task information:

- **Task completion** - Completed tasks within the specified date range
- **Task status** - Current status of all tasks (pending, in progress, completed)
- **Priority levels** - Task priorities and their distribution
- **Initiative associations** - Tasks linked to specific initiatives
- **Completion dates** - When tasks were completed
- **Update timestamps** - Last modification dates

### Initiative Management

Initiative-related data provides context for project work:

- **Initiative participation** - Initiatives the person is involved in
- **Task contributions** - Tasks associated with each initiative
- **Initiative status** - Current status of initiatives
- **Cross-functional work** - Collaboration across different initiatives
- **Project progress** - Contribution to overall initiative goals

### GitHub Integration

For users with linked GitHub accounts:

- **Pull request activity** - PRs created, reviewed, or merged
- **Repository contributions** - Work across different repositories
- **Code review participation** - Review activity and collaboration
- **Merge activity** - Successful code integrations
- **Development metrics** - Lines of code, commits, and other metrics

### Jira Integration

For users with linked Jira accounts:

- **Ticket assignments** - Work items assigned to the person
- **Status updates** - Progress on various tickets
- **Project contributions** - Work across different Jira projects
- **Issue types** - Types of work (bugs, features, tasks)
- **Work activity patterns** - Timing and frequency of work

### Feedback Data (Optional)

When feedback inclusion is enabled:

- **Feedback responses** - Responses to feedback campaigns
- **Performance evaluations** - Ratings and assessments
- **Peer feedback** - Input from colleagues and team members
- **Manager assessments** - Direct manager feedback
- **Development insights** - Areas for improvement and growth

## Usage

### Accessing the Report

1. Navigate to the **Reports** section in the application
2. Select **"Person Overview"** from the available reports
3. Configure the report parameters:
   - **Person**: Select the person to analyze
   - **From Date**: Start of the analysis period
   - **To Date**: End of the analysis period
   - **Include Feedback**: Option to include feedback data
4. Click **Run Report** to generate the analysis

### Report Parameters

#### Required Parameters

- **Person ID**: The person to generate the overview for
- **From Date**: Start date for the analysis period (ISO format: YYYY-MM-DD)
- **To Date**: End date for the analysis period (ISO format: YYYY-MM-DD)

#### Optional Parameters

- **Include Feedback**: Whether to include feedback data in the analysis (default: false)

### Output Format

The report generates a structured markdown document containing:

1. **Header Section**:
   - Person name and basic information
   - Analysis period (from date to date)
   - Report generation timestamp

2. **Task Summary**:
   - Total tasks completed
   - Tasks by status (pending, in progress, completed)
   - Task completion timeline
   - Priority distribution

3. **Initiative Summary**:
   - Initiatives involved in
   - Tasks per initiative
   - Initiative status overview
   - Contribution patterns

4. **GitHub Activity** (if linked):
   - Pull requests created, reviewed, merged
   - Repository contributions
   - Code review activity
   - Development metrics

5. **Jira Activity** (if linked):
   - Tickets assigned and completed
   - Project contributions
   - Issue type distribution
   - Work activity patterns

6. **Feedback Summary** (if included):
   - Feedback responses received
   - Performance ratings
   - Peer input
   - Development areas

## Access Control

### Security Rules

- **Personal Access**: Users can generate overviews for their own linked person record
- **Manager Access**: Managers can generate overviews for their direct reports
- **Admin Access**: Organization administrators can generate overviews for any person in their organization
- **Organization Isolation**: All data is strictly filtered by organization membership
- **Feedback Privacy**: Private feedback is only included if the current user is the author

### Permission Requirements

- User must belong to an organization
- User must have appropriate access to the target person's data
- External integrations must be properly configured for the target person
- Feedback data requires additional permissions based on privacy settings

## Technical Details

### Report Definition

- **Code ID**: \`person-overview\`
- **Supported Renderers**: \`markdown\`
- **Input Schema**: Zod schema with person ID, date range, and feedback inclusion options
- **Output Type**: Structured JSON with comprehensive work activity data

### Data Processing

- **Real-time Data**: Fetches current data from all integrated systems
- **Error Handling**: Graceful degradation if external services are unavailable
- **Data Validation**: Ensures data integrity and consistency
- **Performance Optimization**: Efficient queries to minimize processing time

### Integration Handling

- **GitHub API**: Respects rate limits and handles authentication
- **Jira API**: Manages permissions and data access
- **Database Queries**: Optimized for performance and security
- **Caching Strategy**: No caching - always uses fresh data for accuracy

## Best Practices

### Report Generation

- **Regular Intervals**: Generate overviews weekly or monthly for consistent tracking
- **Appropriate Date Ranges**: Use 2-4 week periods for meaningful analysis
- **Feedback Inclusion**: Include feedback for comprehensive performance reviews
- **Data Quality**: Ensure task statuses and external accounts are up to date

### Content Analysis

- **Pattern Recognition**: Look for trends in task completion and work patterns
- **Initiative Focus**: Analyze contribution to different initiatives
- **External Activity**: Review GitHub and Jira activity for development insights
- **Feedback Integration**: Use feedback data to understand performance perceptions

### Team Usage

- **Performance Reviews**: Use overviews for quarterly or annual evaluations
- **Progress Tracking**: Monitor team member progress and development
- **Workload Analysis**: Understand capacity and work distribution
- **Development Planning**: Identify areas for growth and improvement

## Troubleshooting

### Common Issues

#### Missing Data

- **Verify Integrations**: Ensure GitHub and Jira accounts are properly linked
- **Check Date Ranges**: Confirm data exists for the specified time period
- **Account Linking**: Verify person records are linked to external accounts
- **Permission Issues**: Check API credentials and permissions

#### Data Quality Concerns

- **Task Status**: Verify task completion dates and status updates
- **Initiative Data**: Check initiative associations and status updates
- **External Activity**: Confirm GitHub and Jira integration health
- **Feedback Access**: Verify feedback permissions and privacy settings

#### Access Problems

- **Organization Membership**: Confirm user belongs to the correct organization
- **Person Access**: Verify user has access to the target person's data
- **Manager Relationships**: Check direct report relationships
- **Admin Permissions**: Verify admin access if needed

### Performance Optimization

- **Date Range Limits**: Use reasonable date ranges to avoid timeouts
- **Data Source Selection**: Disable unnecessary integrations if experiencing delays
- **API Limits**: Monitor GitHub and Jira API usage and limits
- **System Resources**: Check server resources during peak usage

## Integration with Other Features

### Performance Management

- **Review Preparation**: Generate overviews before performance discussions
- **Progress Documentation**: Create regular progress reports
- **Achievement Tracking**: Document accomplishments and contributions
- **Development Planning**: Use insights for future goal setting

### Team Management

- **Team Overview**: Generate overviews for all team members
- **Cross-team Analysis**: Compare work patterns across different team members
- **Resource Planning**: Use data for capacity and workload planning
- **Recognition Programs**: Identify high performers and contributors

### Task and Initiative Management

- **Workload Analysis**: Understand task distribution and completion patterns
- **Initiative Tracking**: Monitor contribution to organizational initiatives
- **Capacity Planning**: Use data for future project planning
- **Process Improvement**: Identify workflow optimization opportunities
`,
}
