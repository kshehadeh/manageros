/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Initiative` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model Initiative
 *
 */
export type InitiativeModel =
  runtime.Types.Result.DefaultSelection<Prisma.$InitiativePayload>

export type AggregateInitiative = {
  _count: InitiativeCountAggregateOutputType | null
  _avg: InitiativeAvgAggregateOutputType | null
  _sum: InitiativeSumAggregateOutputType | null
  _min: InitiativeMinAggregateOutputType | null
  _max: InitiativeMaxAggregateOutputType | null
}

export type InitiativeAvgAggregateOutputType = {
  confidence: number | null
}

export type InitiativeSumAggregateOutputType = {
  confidence: number | null
}

export type InitiativeMinAggregateOutputType = {
  id: string | null
  teamId: string | null
  organizationId: string | null
  title: string | null
  summary: string | null
  outcome: string | null
  startDate: Date | null
  targetDate: Date | null
  status: string | null
  rag: string | null
  confidence: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InitiativeMaxAggregateOutputType = {
  id: string | null
  teamId: string | null
  organizationId: string | null
  title: string | null
  summary: string | null
  outcome: string | null
  startDate: Date | null
  targetDate: Date | null
  status: string | null
  rag: string | null
  confidence: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InitiativeCountAggregateOutputType = {
  id: number
  teamId: number
  organizationId: number
  title: number
  summary: number
  outcome: number
  startDate: number
  targetDate: number
  status: number
  rag: number
  confidence: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type InitiativeAvgAggregateInputType = {
  confidence?: true
}

export type InitiativeSumAggregateInputType = {
  confidence?: true
}

export type InitiativeMinAggregateInputType = {
  id?: true
  teamId?: true
  organizationId?: true
  title?: true
  summary?: true
  outcome?: true
  startDate?: true
  targetDate?: true
  status?: true
  rag?: true
  confidence?: true
  createdAt?: true
  updatedAt?: true
}

export type InitiativeMaxAggregateInputType = {
  id?: true
  teamId?: true
  organizationId?: true
  title?: true
  summary?: true
  outcome?: true
  startDate?: true
  targetDate?: true
  status?: true
  rag?: true
  confidence?: true
  createdAt?: true
  updatedAt?: true
}

export type InitiativeCountAggregateInputType = {
  id?: true
  teamId?: true
  organizationId?: true
  title?: true
  summary?: true
  outcome?: true
  startDate?: true
  targetDate?: true
  status?: true
  rag?: true
  confidence?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type InitiativeAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Initiative to aggregate.
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Initiatives to fetch.
   */
  orderBy?:
    | Prisma.InitiativeOrderByWithRelationInput
    | Prisma.InitiativeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.InitiativeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Initiatives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Initiatives.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Initiatives
   **/
  _count?: true | InitiativeCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: InitiativeAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: InitiativeSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: InitiativeMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: InitiativeMaxAggregateInputType
}

export type GetInitiativeAggregateType<T extends InitiativeAggregateArgs> = {
  [P in keyof T & keyof AggregateInitiative]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInitiative[P]>
    : Prisma.GetScalarType<T[P], AggregateInitiative[P]>
}

export type InitiativeGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InitiativeWhereInput
  orderBy?:
    | Prisma.InitiativeOrderByWithAggregationInput
    | Prisma.InitiativeOrderByWithAggregationInput[]
  by: Prisma.InitiativeScalarFieldEnum[] | Prisma.InitiativeScalarFieldEnum
  having?: Prisma.InitiativeScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: InitiativeCountAggregateInputType | true
  _avg?: InitiativeAvgAggregateInputType
  _sum?: InitiativeSumAggregateInputType
  _min?: InitiativeMinAggregateInputType
  _max?: InitiativeMaxAggregateInputType
}

export type InitiativeGroupByOutputType = {
  id: string
  teamId: string | null
  organizationId: string
  title: string
  summary: string | null
  outcome: string | null
  startDate: Date | null
  targetDate: Date | null
  status: string
  rag: string
  confidence: number
  createdAt: Date
  updatedAt: Date
  _count: InitiativeCountAggregateOutputType | null
  _avg: InitiativeAvgAggregateOutputType | null
  _sum: InitiativeSumAggregateOutputType | null
  _min: InitiativeMinAggregateOutputType | null
  _max: InitiativeMaxAggregateOutputType | null
}

type GetInitiativeGroupByPayload<T extends InitiativeGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<InitiativeGroupByOutputType, T['by']> & {
        [P in keyof T & keyof InitiativeGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], InitiativeGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], InitiativeGroupByOutputType[P]>
      }
    >
  >

export type InitiativeWhereInput = {
  AND?: Prisma.InitiativeWhereInput | Prisma.InitiativeWhereInput[]
  OR?: Prisma.InitiativeWhereInput[]
  NOT?: Prisma.InitiativeWhereInput | Prisma.InitiativeWhereInput[]
  id?: Prisma.StringFilter<'Initiative'> | string
  teamId?: Prisma.StringNullableFilter<'Initiative'> | string | null
  organizationId?: Prisma.StringFilter<'Initiative'> | string
  title?: Prisma.StringFilter<'Initiative'> | string
  summary?: Prisma.StringNullableFilter<'Initiative'> | string | null
  outcome?: Prisma.StringNullableFilter<'Initiative'> | string | null
  startDate?: Prisma.DateTimeNullableFilter<'Initiative'> | Date | string | null
  targetDate?:
    | Prisma.DateTimeNullableFilter<'Initiative'>
    | Date
    | string
    | null
  status?: Prisma.StringFilter<'Initiative'> | string
  rag?: Prisma.StringFilter<'Initiative'> | string
  confidence?: Prisma.IntFilter<'Initiative'> | number
  createdAt?: Prisma.DateTimeFilter<'Initiative'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Initiative'> | Date | string
  team?: Prisma.XOR<
    Prisma.TeamNullableScalarRelationFilter,
    Prisma.TeamWhereInput
  > | null
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  objectives?: Prisma.ObjectiveListRelationFilter
  owners?: Prisma.InitiativeOwnerListRelationFilter
  checkIns?: Prisma.CheckInListRelationFilter
  metrics?: Prisma.MetricListRelationFilter
  tasks?: Prisma.TaskListRelationFilter
  meetings?: Prisma.MeetingListRelationFilter
}

export type InitiativeOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  summary?: Prisma.SortOrderInput | Prisma.SortOrder
  outcome?: Prisma.SortOrderInput | Prisma.SortOrder
  startDate?: Prisma.SortOrderInput | Prisma.SortOrder
  targetDate?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  rag?: Prisma.SortOrder
  confidence?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  team?: Prisma.TeamOrderByWithRelationInput
  organization?: Prisma.OrganizationOrderByWithRelationInput
  objectives?: Prisma.ObjectiveOrderByRelationAggregateInput
  owners?: Prisma.InitiativeOwnerOrderByRelationAggregateInput
  checkIns?: Prisma.CheckInOrderByRelationAggregateInput
  metrics?: Prisma.MetricOrderByRelationAggregateInput
  tasks?: Prisma.TaskOrderByRelationAggregateInput
  meetings?: Prisma.MeetingOrderByRelationAggregateInput
}

export type InitiativeWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    AND?: Prisma.InitiativeWhereInput | Prisma.InitiativeWhereInput[]
    OR?: Prisma.InitiativeWhereInput[]
    NOT?: Prisma.InitiativeWhereInput | Prisma.InitiativeWhereInput[]
    teamId?: Prisma.StringNullableFilter<'Initiative'> | string | null
    organizationId?: Prisma.StringFilter<'Initiative'> | string
    title?: Prisma.StringFilter<'Initiative'> | string
    summary?: Prisma.StringNullableFilter<'Initiative'> | string | null
    outcome?: Prisma.StringNullableFilter<'Initiative'> | string | null
    startDate?:
      | Prisma.DateTimeNullableFilter<'Initiative'>
      | Date
      | string
      | null
    targetDate?:
      | Prisma.DateTimeNullableFilter<'Initiative'>
      | Date
      | string
      | null
    status?: Prisma.StringFilter<'Initiative'> | string
    rag?: Prisma.StringFilter<'Initiative'> | string
    confidence?: Prisma.IntFilter<'Initiative'> | number
    createdAt?: Prisma.DateTimeFilter<'Initiative'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'Initiative'> | Date | string
    team?: Prisma.XOR<
      Prisma.TeamNullableScalarRelationFilter,
      Prisma.TeamWhereInput
    > | null
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    objectives?: Prisma.ObjectiveListRelationFilter
    owners?: Prisma.InitiativeOwnerListRelationFilter
    checkIns?: Prisma.CheckInListRelationFilter
    metrics?: Prisma.MetricListRelationFilter
    tasks?: Prisma.TaskListRelationFilter
    meetings?: Prisma.MeetingListRelationFilter
  },
  'id'
>

export type InitiativeOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  summary?: Prisma.SortOrderInput | Prisma.SortOrder
  outcome?: Prisma.SortOrderInput | Prisma.SortOrder
  startDate?: Prisma.SortOrderInput | Prisma.SortOrder
  targetDate?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  rag?: Prisma.SortOrder
  confidence?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.InitiativeCountOrderByAggregateInput
  _avg?: Prisma.InitiativeAvgOrderByAggregateInput
  _max?: Prisma.InitiativeMaxOrderByAggregateInput
  _min?: Prisma.InitiativeMinOrderByAggregateInput
  _sum?: Prisma.InitiativeSumOrderByAggregateInput
}

export type InitiativeScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.InitiativeScalarWhereWithAggregatesInput
    | Prisma.InitiativeScalarWhereWithAggregatesInput[]
  OR?: Prisma.InitiativeScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.InitiativeScalarWhereWithAggregatesInput
    | Prisma.InitiativeScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'Initiative'> | string
  teamId?:
    | Prisma.StringNullableWithAggregatesFilter<'Initiative'>
    | string
    | null
  organizationId?: Prisma.StringWithAggregatesFilter<'Initiative'> | string
  title?: Prisma.StringWithAggregatesFilter<'Initiative'> | string
  summary?:
    | Prisma.StringNullableWithAggregatesFilter<'Initiative'>
    | string
    | null
  outcome?:
    | Prisma.StringNullableWithAggregatesFilter<'Initiative'>
    | string
    | null
  startDate?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'Initiative'>
    | Date
    | string
    | null
  targetDate?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'Initiative'>
    | Date
    | string
    | null
  status?: Prisma.StringWithAggregatesFilter<'Initiative'> | string
  rag?: Prisma.StringWithAggregatesFilter<'Initiative'> | string
  confidence?: Prisma.IntWithAggregatesFilter<'Initiative'> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'Initiative'> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'Initiative'> | Date | string
}

export type InitiativeCreateInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateManyInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InitiativeUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InitiativeUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InitiativeListRelationFilter = {
  every?: Prisma.InitiativeWhereInput
  some?: Prisma.InitiativeWhereInput
  none?: Prisma.InitiativeWhereInput
}

export type InitiativeOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type InitiativeCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  outcome?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  targetDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  rag?: Prisma.SortOrder
  confidence?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InitiativeAvgOrderByAggregateInput = {
  confidence?: Prisma.SortOrder
}

export type InitiativeMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  outcome?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  targetDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  rag?: Prisma.SortOrder
  confidence?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InitiativeMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  teamId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  title?: Prisma.SortOrder
  summary?: Prisma.SortOrder
  outcome?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  targetDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
  rag?: Prisma.SortOrder
  confidence?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InitiativeSumOrderByAggregateInput = {
  confidence?: Prisma.SortOrder
}

export type InitiativeScalarRelationFilter = {
  is?: Prisma.InitiativeWhereInput
  isNot?: Prisma.InitiativeWhereInput
}

export type InitiativeNullableScalarRelationFilter = {
  is?: Prisma.InitiativeWhereInput | null
  isNot?: Prisma.InitiativeWhereInput | null
}

export type InitiativeCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutOrganizationInput,
        Prisma.InitiativeUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.InitiativeCreateWithoutOrganizationInput[]
    | Prisma.InitiativeUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.InitiativeCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
}

export type InitiativeUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutOrganizationInput,
        Prisma.InitiativeUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.InitiativeCreateWithoutOrganizationInput[]
    | Prisma.InitiativeUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.InitiativeCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
}

export type InitiativeUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutOrganizationInput,
        Prisma.InitiativeUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.InitiativeCreateWithoutOrganizationInput[]
    | Prisma.InitiativeUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.InitiativeCreateManyOrganizationInputEnvelope
  set?: Prisma.InitiativeWhereUniqueInput | Prisma.InitiativeWhereUniqueInput[]
  disconnect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  delete?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  update?:
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.InitiativeUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.InitiativeUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.InitiativeScalarWhereInput
    | Prisma.InitiativeScalarWhereInput[]
}

export type InitiativeUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutOrganizationInput,
        Prisma.InitiativeUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.InitiativeCreateWithoutOrganizationInput[]
    | Prisma.InitiativeUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput
    | Prisma.InitiativeCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.InitiativeCreateManyOrganizationInputEnvelope
  set?: Prisma.InitiativeWhereUniqueInput | Prisma.InitiativeWhereUniqueInput[]
  disconnect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  delete?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  update?:
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.InitiativeUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.InitiativeUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.InitiativeScalarWhereInput
    | Prisma.InitiativeScalarWhereInput[]
}

export type InitiativeCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutTeamInput,
        Prisma.InitiativeUncheckedCreateWithoutTeamInput
      >
    | Prisma.InitiativeCreateWithoutTeamInput[]
    | Prisma.InitiativeUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.InitiativeCreateManyTeamInputEnvelope
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
}

export type InitiativeUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutTeamInput,
        Prisma.InitiativeUncheckedCreateWithoutTeamInput
      >
    | Prisma.InitiativeCreateWithoutTeamInput[]
    | Prisma.InitiativeUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput[]
  createMany?: Prisma.InitiativeCreateManyTeamInputEnvelope
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
}

export type InitiativeUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutTeamInput,
        Prisma.InitiativeUncheckedCreateWithoutTeamInput
      >
    | Prisma.InitiativeCreateWithoutTeamInput[]
    | Prisma.InitiativeUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput[]
  upsert?:
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.InitiativeCreateManyTeamInputEnvelope
  set?: Prisma.InitiativeWhereUniqueInput | Prisma.InitiativeWhereUniqueInput[]
  disconnect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  delete?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  update?:
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?:
    | Prisma.InitiativeUpdateManyWithWhereWithoutTeamInput
    | Prisma.InitiativeUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?:
    | Prisma.InitiativeScalarWhereInput
    | Prisma.InitiativeScalarWhereInput[]
}

export type InitiativeUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InitiativeCreateWithoutTeamInput,
        Prisma.InitiativeUncheckedCreateWithoutTeamInput
      >
    | Prisma.InitiativeCreateWithoutTeamInput[]
    | Prisma.InitiativeUncheckedCreateWithoutTeamInput[]
  connectOrCreate?:
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput
    | Prisma.InitiativeCreateOrConnectWithoutTeamInput[]
  upsert?:
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.InitiativeUpsertWithWhereUniqueWithoutTeamInput[]
  createMany?: Prisma.InitiativeCreateManyTeamInputEnvelope
  set?: Prisma.InitiativeWhereUniqueInput | Prisma.InitiativeWhereUniqueInput[]
  disconnect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  delete?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  connect?:
    | Prisma.InitiativeWhereUniqueInput
    | Prisma.InitiativeWhereUniqueInput[]
  update?:
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.InitiativeUpdateWithWhereUniqueWithoutTeamInput[]
  updateMany?:
    | Prisma.InitiativeUpdateManyWithWhereWithoutTeamInput
    | Prisma.InitiativeUpdateManyWithWhereWithoutTeamInput[]
  deleteMany?:
    | Prisma.InitiativeScalarWhereInput
    | Prisma.InitiativeScalarWhereInput[]
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type InitiativeCreateNestedOneWithoutOwnersInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutOwnersInput,
    Prisma.InitiativeUncheckedCreateWithoutOwnersInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutOwnersInput
  connect?: Prisma.InitiativeWhereUniqueInput
}

export type InitiativeUpdateOneRequiredWithoutOwnersNestedInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutOwnersInput,
    Prisma.InitiativeUncheckedCreateWithoutOwnersInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutOwnersInput
  upsert?: Prisma.InitiativeUpsertWithoutOwnersInput
  connect?: Prisma.InitiativeWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InitiativeUpdateToOneWithWhereWithoutOwnersInput,
      Prisma.InitiativeUpdateWithoutOwnersInput
    >,
    Prisma.InitiativeUncheckedUpdateWithoutOwnersInput
  >
}

export type InitiativeCreateNestedOneWithoutObjectivesInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutObjectivesInput,
    Prisma.InitiativeUncheckedCreateWithoutObjectivesInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutObjectivesInput
  connect?: Prisma.InitiativeWhereUniqueInput
}

export type InitiativeUpdateOneRequiredWithoutObjectivesNestedInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutObjectivesInput,
    Prisma.InitiativeUncheckedCreateWithoutObjectivesInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutObjectivesInput
  upsert?: Prisma.InitiativeUpsertWithoutObjectivesInput
  connect?: Prisma.InitiativeWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InitiativeUpdateToOneWithWhereWithoutObjectivesInput,
      Prisma.InitiativeUpdateWithoutObjectivesInput
    >,
    Prisma.InitiativeUncheckedUpdateWithoutObjectivesInput
  >
}

export type InitiativeCreateNestedOneWithoutTasksInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutTasksInput,
    Prisma.InitiativeUncheckedCreateWithoutTasksInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutTasksInput
  connect?: Prisma.InitiativeWhereUniqueInput
}

export type InitiativeUpdateOneWithoutTasksNestedInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutTasksInput,
    Prisma.InitiativeUncheckedCreateWithoutTasksInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutTasksInput
  upsert?: Prisma.InitiativeUpsertWithoutTasksInput
  disconnect?: Prisma.InitiativeWhereInput | boolean
  delete?: Prisma.InitiativeWhereInput | boolean
  connect?: Prisma.InitiativeWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InitiativeUpdateToOneWithWhereWithoutTasksInput,
      Prisma.InitiativeUpdateWithoutTasksInput
    >,
    Prisma.InitiativeUncheckedUpdateWithoutTasksInput
  >
}

export type InitiativeCreateNestedOneWithoutCheckInsInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutCheckInsInput,
    Prisma.InitiativeUncheckedCreateWithoutCheckInsInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutCheckInsInput
  connect?: Prisma.InitiativeWhereUniqueInput
}

export type InitiativeUpdateOneRequiredWithoutCheckInsNestedInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutCheckInsInput,
    Prisma.InitiativeUncheckedCreateWithoutCheckInsInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutCheckInsInput
  upsert?: Prisma.InitiativeUpsertWithoutCheckInsInput
  connect?: Prisma.InitiativeWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InitiativeUpdateToOneWithWhereWithoutCheckInsInput,
      Prisma.InitiativeUpdateWithoutCheckInsInput
    >,
    Prisma.InitiativeUncheckedUpdateWithoutCheckInsInput
  >
}

export type InitiativeCreateNestedOneWithoutMetricsInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMetricsInput,
    Prisma.InitiativeUncheckedCreateWithoutMetricsInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutMetricsInput
  connect?: Prisma.InitiativeWhereUniqueInput
}

export type InitiativeUpdateOneRequiredWithoutMetricsNestedInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMetricsInput,
    Prisma.InitiativeUncheckedCreateWithoutMetricsInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutMetricsInput
  upsert?: Prisma.InitiativeUpsertWithoutMetricsInput
  connect?: Prisma.InitiativeWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InitiativeUpdateToOneWithWhereWithoutMetricsInput,
      Prisma.InitiativeUpdateWithoutMetricsInput
    >,
    Prisma.InitiativeUncheckedUpdateWithoutMetricsInput
  >
}

export type InitiativeCreateNestedOneWithoutMeetingsInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMeetingsInput,
    Prisma.InitiativeUncheckedCreateWithoutMeetingsInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutMeetingsInput
  connect?: Prisma.InitiativeWhereUniqueInput
}

export type InitiativeUpdateOneWithoutMeetingsNestedInput = {
  create?: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMeetingsInput,
    Prisma.InitiativeUncheckedCreateWithoutMeetingsInput
  >
  connectOrCreate?: Prisma.InitiativeCreateOrConnectWithoutMeetingsInput
  upsert?: Prisma.InitiativeUpsertWithoutMeetingsInput
  disconnect?: Prisma.InitiativeWhereInput | boolean
  delete?: Prisma.InitiativeWhereInput | boolean
  connect?: Prisma.InitiativeWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InitiativeUpdateToOneWithWhereWithoutMeetingsInput,
      Prisma.InitiativeUpdateWithoutMeetingsInput
    >,
    Prisma.InitiativeUncheckedUpdateWithoutMeetingsInput
  >
}

export type InitiativeCreateWithoutOrganizationInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutOrganizationInput = {
  id?: string
  teamId?: string | null
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutOrganizationInput,
    Prisma.InitiativeUncheckedCreateWithoutOrganizationInput
  >
}

export type InitiativeCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.InitiativeCreateManyOrganizationInput
    | Prisma.InitiativeCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type InitiativeUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.InitiativeWhereUniqueInput
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutOrganizationInput,
    Prisma.InitiativeUncheckedUpdateWithoutOrganizationInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutOrganizationInput,
    Prisma.InitiativeUncheckedCreateWithoutOrganizationInput
  >
}

export type InitiativeUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.InitiativeWhereUniqueInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutOrganizationInput,
    Prisma.InitiativeUncheckedUpdateWithoutOrganizationInput
  >
}

export type InitiativeUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.InitiativeScalarWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateManyMutationInput,
    Prisma.InitiativeUncheckedUpdateManyWithoutOrganizationInput
  >
}

export type InitiativeScalarWhereInput = {
  AND?: Prisma.InitiativeScalarWhereInput | Prisma.InitiativeScalarWhereInput[]
  OR?: Prisma.InitiativeScalarWhereInput[]
  NOT?: Prisma.InitiativeScalarWhereInput | Prisma.InitiativeScalarWhereInput[]
  id?: Prisma.StringFilter<'Initiative'> | string
  teamId?: Prisma.StringNullableFilter<'Initiative'> | string | null
  organizationId?: Prisma.StringFilter<'Initiative'> | string
  title?: Prisma.StringFilter<'Initiative'> | string
  summary?: Prisma.StringNullableFilter<'Initiative'> | string | null
  outcome?: Prisma.StringNullableFilter<'Initiative'> | string | null
  startDate?: Prisma.DateTimeNullableFilter<'Initiative'> | Date | string | null
  targetDate?:
    | Prisma.DateTimeNullableFilter<'Initiative'>
    | Date
    | string
    | null
  status?: Prisma.StringFilter<'Initiative'> | string
  rag?: Prisma.StringFilter<'Initiative'> | string
  confidence?: Prisma.IntFilter<'Initiative'> | number
  createdAt?: Prisma.DateTimeFilter<'Initiative'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'Initiative'> | Date | string
}

export type InitiativeCreateWithoutTeamInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutTeamInput = {
  id?: string
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutTeamInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutTeamInput,
    Prisma.InitiativeUncheckedCreateWithoutTeamInput
  >
}

export type InitiativeCreateManyTeamInputEnvelope = {
  data:
    | Prisma.InitiativeCreateManyTeamInput
    | Prisma.InitiativeCreateManyTeamInput[]
  skipDuplicates?: boolean
}

export type InitiativeUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.InitiativeWhereUniqueInput
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutTeamInput,
    Prisma.InitiativeUncheckedUpdateWithoutTeamInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutTeamInput,
    Prisma.InitiativeUncheckedCreateWithoutTeamInput
  >
}

export type InitiativeUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.InitiativeWhereUniqueInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutTeamInput,
    Prisma.InitiativeUncheckedUpdateWithoutTeamInput
  >
}

export type InitiativeUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.InitiativeScalarWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateManyMutationInput,
    Prisma.InitiativeUncheckedUpdateManyWithoutTeamInput
  >
}

export type InitiativeCreateWithoutOwnersInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutOwnersInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutOwnersInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutOwnersInput,
    Prisma.InitiativeUncheckedCreateWithoutOwnersInput
  >
}

export type InitiativeUpsertWithoutOwnersInput = {
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutOwnersInput,
    Prisma.InitiativeUncheckedUpdateWithoutOwnersInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutOwnersInput,
    Prisma.InitiativeUncheckedCreateWithoutOwnersInput
  >
  where?: Prisma.InitiativeWhereInput
}

export type InitiativeUpdateToOneWithWhereWithoutOwnersInput = {
  where?: Prisma.InitiativeWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutOwnersInput,
    Prisma.InitiativeUncheckedUpdateWithoutOwnersInput
  >
}

export type InitiativeUpdateWithoutOwnersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutOwnersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateWithoutObjectivesInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutObjectivesInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutObjectivesInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutObjectivesInput,
    Prisma.InitiativeUncheckedCreateWithoutObjectivesInput
  >
}

export type InitiativeUpsertWithoutObjectivesInput = {
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutObjectivesInput,
    Prisma.InitiativeUncheckedUpdateWithoutObjectivesInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutObjectivesInput,
    Prisma.InitiativeUncheckedCreateWithoutObjectivesInput
  >
  where?: Prisma.InitiativeWhereInput
}

export type InitiativeUpdateToOneWithWhereWithoutObjectivesInput = {
  where?: Prisma.InitiativeWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutObjectivesInput,
    Prisma.InitiativeUncheckedUpdateWithoutObjectivesInput
  >
}

export type InitiativeUpdateWithoutObjectivesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutObjectivesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateWithoutTasksInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutTasksInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutTasksInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutTasksInput,
    Prisma.InitiativeUncheckedCreateWithoutTasksInput
  >
}

export type InitiativeUpsertWithoutTasksInput = {
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutTasksInput,
    Prisma.InitiativeUncheckedUpdateWithoutTasksInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutTasksInput,
    Prisma.InitiativeUncheckedCreateWithoutTasksInput
  >
  where?: Prisma.InitiativeWhereInput
}

export type InitiativeUpdateToOneWithWhereWithoutTasksInput = {
  where?: Prisma.InitiativeWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutTasksInput,
    Prisma.InitiativeUncheckedUpdateWithoutTasksInput
  >
}

export type InitiativeUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateWithoutCheckInsInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutCheckInsInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutCheckInsInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutCheckInsInput,
    Prisma.InitiativeUncheckedCreateWithoutCheckInsInput
  >
}

export type InitiativeUpsertWithoutCheckInsInput = {
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutCheckInsInput,
    Prisma.InitiativeUncheckedUpdateWithoutCheckInsInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutCheckInsInput,
    Prisma.InitiativeUncheckedCreateWithoutCheckInsInput
  >
  where?: Prisma.InitiativeWhereInput
}

export type InitiativeUpdateToOneWithWhereWithoutCheckInsInput = {
  where?: Prisma.InitiativeWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutCheckInsInput,
    Prisma.InitiativeUncheckedUpdateWithoutCheckInsInput
  >
}

export type InitiativeUpdateWithoutCheckInsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutCheckInsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateWithoutMetricsInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutMetricsInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
  meetings?: Prisma.MeetingUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutMetricsInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMetricsInput,
    Prisma.InitiativeUncheckedCreateWithoutMetricsInput
  >
}

export type InitiativeUpsertWithoutMetricsInput = {
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutMetricsInput,
    Prisma.InitiativeUncheckedUpdateWithoutMetricsInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMetricsInput,
    Prisma.InitiativeUncheckedCreateWithoutMetricsInput
  >
  where?: Prisma.InitiativeWhereInput
}

export type InitiativeUpdateToOneWithWhereWithoutMetricsInput = {
  where?: Prisma.InitiativeWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutMetricsInput,
    Prisma.InitiativeUncheckedUpdateWithoutMetricsInput
  >
}

export type InitiativeUpdateWithoutMetricsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutMetricsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateWithoutMeetingsInput = {
  id?: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  team?: Prisma.TeamCreateNestedOneWithoutInitiativesInput
  organization: Prisma.OrganizationCreateNestedOneWithoutInitiativesInput
  objectives?: Prisma.ObjectiveCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskCreateNestedManyWithoutInitiativeInput
}

export type InitiativeUncheckedCreateWithoutMeetingsInput = {
  id?: string
  teamId?: string | null
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  objectives?: Prisma.ObjectiveUncheckedCreateNestedManyWithoutInitiativeInput
  owners?: Prisma.InitiativeOwnerUncheckedCreateNestedManyWithoutInitiativeInput
  checkIns?: Prisma.CheckInUncheckedCreateNestedManyWithoutInitiativeInput
  metrics?: Prisma.MetricUncheckedCreateNestedManyWithoutInitiativeInput
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutInitiativeInput
}

export type InitiativeCreateOrConnectWithoutMeetingsInput = {
  where: Prisma.InitiativeWhereUniqueInput
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMeetingsInput,
    Prisma.InitiativeUncheckedCreateWithoutMeetingsInput
  >
}

export type InitiativeUpsertWithoutMeetingsInput = {
  update: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutMeetingsInput,
    Prisma.InitiativeUncheckedUpdateWithoutMeetingsInput
  >
  create: Prisma.XOR<
    Prisma.InitiativeCreateWithoutMeetingsInput,
    Prisma.InitiativeUncheckedCreateWithoutMeetingsInput
  >
  where?: Prisma.InitiativeWhereInput
}

export type InitiativeUpdateToOneWithWhereWithoutMeetingsInput = {
  where?: Prisma.InitiativeWhereInput
  data: Prisma.XOR<
    Prisma.InitiativeUpdateWithoutMeetingsInput,
    Prisma.InitiativeUncheckedUpdateWithoutMeetingsInput
  >
}

export type InitiativeUpdateWithoutMeetingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutMeetingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeCreateManyOrganizationInput = {
  id?: string
  teamId?: string | null
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InitiativeUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  team?: Prisma.TeamUpdateOneWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  teamId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InitiativeCreateManyTeamInput = {
  id?: string
  organizationId: string
  title: string
  summary?: string | null
  outcome?: string | null
  startDate?: Date | string | null
  targetDate?: Date | string | null
  status?: string
  rag?: string
  confidence?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InitiativeUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutInitiativesNestedInput
  objectives?: Prisma.ObjectiveUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  objectives?: Prisma.ObjectiveUncheckedUpdateManyWithoutInitiativeNestedInput
  owners?: Prisma.InitiativeOwnerUncheckedUpdateManyWithoutInitiativeNestedInput
  checkIns?: Prisma.CheckInUncheckedUpdateManyWithoutInitiativeNestedInput
  metrics?: Prisma.MetricUncheckedUpdateManyWithoutInitiativeNestedInput
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutInitiativeNestedInput
  meetings?: Prisma.MeetingUncheckedUpdateManyWithoutInitiativeNestedInput
}

export type InitiativeUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  summary?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  outcome?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  targetDate?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  rag?: Prisma.StringFieldUpdateOperationsInput | string
  confidence?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

/**
 * Count Type InitiativeCountOutputType
 */

export type InitiativeCountOutputType = {
  objectives: number
  owners: number
  checkIns: number
  metrics: number
  tasks: number
  meetings: number
}

export type InitiativeCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  objectives?: boolean | InitiativeCountOutputTypeCountObjectivesArgs
  owners?: boolean | InitiativeCountOutputTypeCountOwnersArgs
  checkIns?: boolean | InitiativeCountOutputTypeCountCheckInsArgs
  metrics?: boolean | InitiativeCountOutputTypeCountMetricsArgs
  tasks?: boolean | InitiativeCountOutputTypeCountTasksArgs
  meetings?: boolean | InitiativeCountOutputTypeCountMeetingsArgs
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InitiativeCountOutputType
   */
  select?: Prisma.InitiativeCountOutputTypeSelect<ExtArgs> | null
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeCountObjectivesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ObjectiveWhereInput
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeCountOwnersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InitiativeOwnerWhereInput
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeCountCheckInsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CheckInWhereInput
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeCountMetricsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MetricWhereInput
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeCountTasksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.TaskWhereInput
}

/**
 * InitiativeCountOutputType without action
 */
export type InitiativeCountOutputTypeCountMeetingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MeetingWhereInput
}

export type InitiativeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    teamId?: boolean
    organizationId?: boolean
    title?: boolean
    summary?: boolean
    outcome?: boolean
    startDate?: boolean
    targetDate?: boolean
    status?: boolean
    rag?: boolean
    confidence?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    team?: boolean | Prisma.Initiative$teamArgs<ExtArgs>
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    objectives?: boolean | Prisma.Initiative$objectivesArgs<ExtArgs>
    owners?: boolean | Prisma.Initiative$ownersArgs<ExtArgs>
    checkIns?: boolean | Prisma.Initiative$checkInsArgs<ExtArgs>
    metrics?: boolean | Prisma.Initiative$metricsArgs<ExtArgs>
    tasks?: boolean | Prisma.Initiative$tasksArgs<ExtArgs>
    meetings?: boolean | Prisma.Initiative$meetingsArgs<ExtArgs>
    _count?: boolean | Prisma.InitiativeCountOutputTypeDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['initiative']
>

export type InitiativeSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    teamId?: boolean
    organizationId?: boolean
    title?: boolean
    summary?: boolean
    outcome?: boolean
    startDate?: boolean
    targetDate?: boolean
    status?: boolean
    rag?: boolean
    confidence?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    team?: boolean | Prisma.Initiative$teamArgs<ExtArgs>
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['initiative']
>

export type InitiativeSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    teamId?: boolean
    organizationId?: boolean
    title?: boolean
    summary?: boolean
    outcome?: boolean
    startDate?: boolean
    targetDate?: boolean
    status?: boolean
    rag?: boolean
    confidence?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    team?: boolean | Prisma.Initiative$teamArgs<ExtArgs>
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['initiative']
>

export type InitiativeSelectScalar = {
  id?: boolean
  teamId?: boolean
  organizationId?: boolean
  title?: boolean
  summary?: boolean
  outcome?: boolean
  startDate?: boolean
  targetDate?: boolean
  status?: boolean
  rag?: boolean
  confidence?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type InitiativeOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'teamId'
  | 'organizationId'
  | 'title'
  | 'summary'
  | 'outcome'
  | 'startDate'
  | 'targetDate'
  | 'status'
  | 'rag'
  | 'confidence'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['initiative']
>
export type InitiativeInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  team?: boolean | Prisma.Initiative$teamArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  objectives?: boolean | Prisma.Initiative$objectivesArgs<ExtArgs>
  owners?: boolean | Prisma.Initiative$ownersArgs<ExtArgs>
  checkIns?: boolean | Prisma.Initiative$checkInsArgs<ExtArgs>
  metrics?: boolean | Prisma.Initiative$metricsArgs<ExtArgs>
  tasks?: boolean | Prisma.Initiative$tasksArgs<ExtArgs>
  meetings?: boolean | Prisma.Initiative$meetingsArgs<ExtArgs>
  _count?: boolean | Prisma.InitiativeCountOutputTypeDefaultArgs<ExtArgs>
}
export type InitiativeIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  team?: boolean | Prisma.Initiative$teamArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type InitiativeIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  team?: boolean | Prisma.Initiative$teamArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}

export type $InitiativePayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'Initiative'
  objects: {
    team: Prisma.$TeamPayload<ExtArgs> | null
    organization: Prisma.$OrganizationPayload<ExtArgs>
    objectives: Prisma.$ObjectivePayload<ExtArgs>[]
    owners: Prisma.$InitiativeOwnerPayload<ExtArgs>[]
    checkIns: Prisma.$CheckInPayload<ExtArgs>[]
    metrics: Prisma.$MetricPayload<ExtArgs>[]
    tasks: Prisma.$TaskPayload<ExtArgs>[]
    meetings: Prisma.$MeetingPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      teamId: string | null
      organizationId: string
      title: string
      summary: string | null
      outcome: string | null
      startDate: Date | null
      targetDate: Date | null
      status: string
      rag: string
      confidence: number
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['initiative']
  >
  composites: {}
}

export type InitiativeGetPayload<
  S extends boolean | null | undefined | InitiativeDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$InitiativePayload, S>

export type InitiativeCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<InitiativeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: InitiativeCountAggregateInputType | true
}

export interface InitiativeDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['Initiative']
    meta: { name: 'Initiative' }
  }
  /**
   * Find zero or one Initiative that matches the filter.
   * @param {InitiativeFindUniqueArgs} args - Arguments to find a Initiative
   * @example
   * // Get one Initiative
   * const initiative = await prisma.initiative.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InitiativeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, InitiativeFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one Initiative that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InitiativeFindUniqueOrThrowArgs} args - Arguments to find a Initiative
   * @example
   * // Get one Initiative
   * const initiative = await prisma.initiative.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InitiativeFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, InitiativeFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Initiative that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeFindFirstArgs} args - Arguments to find a Initiative
   * @example
   * // Get one Initiative
   * const initiative = await prisma.initiative.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InitiativeFindFirstArgs>(
    args?: Prisma.SelectSubset<T, InitiativeFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first Initiative that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeFindFirstOrThrowArgs} args - Arguments to find a Initiative
   * @example
   * // Get one Initiative
   * const initiative = await prisma.initiative.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InitiativeFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, InitiativeFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more Initiatives that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Initiatives
   * const initiatives = await prisma.initiative.findMany()
   *
   * // Get first 10 Initiatives
   * const initiatives = await prisma.initiative.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const initiativeWithIdOnly = await prisma.initiative.findMany({ select: { id: true } })
   *
   */
  findMany<T extends InitiativeFindManyArgs>(
    args?: Prisma.SelectSubset<T, InitiativeFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a Initiative.
   * @param {InitiativeCreateArgs} args - Arguments to create a Initiative.
   * @example
   * // Create one Initiative
   * const Initiative = await prisma.initiative.create({
   *   data: {
   *     // ... data to create a Initiative
   *   }
   * })
   *
   */
  create<T extends InitiativeCreateArgs>(
    args: Prisma.SelectSubset<T, InitiativeCreateArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many Initiatives.
   * @param {InitiativeCreateManyArgs} args - Arguments to create many Initiatives.
   * @example
   * // Create many Initiatives
   * const initiative = await prisma.initiative.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends InitiativeCreateManyArgs>(
    args?: Prisma.SelectSubset<T, InitiativeCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Initiatives and returns the data saved in the database.
   * @param {InitiativeCreateManyAndReturnArgs} args - Arguments to create many Initiatives.
   * @example
   * // Create many Initiatives
   * const initiative = await prisma.initiative.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Initiatives and only return the `id`
   * const initiativeWithIdOnly = await prisma.initiative.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends InitiativeCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, InitiativeCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a Initiative.
   * @param {InitiativeDeleteArgs} args - Arguments to delete one Initiative.
   * @example
   * // Delete one Initiative
   * const Initiative = await prisma.initiative.delete({
   *   where: {
   *     // ... filter to delete one Initiative
   *   }
   * })
   *
   */
  delete<T extends InitiativeDeleteArgs>(
    args: Prisma.SelectSubset<T, InitiativeDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one Initiative.
   * @param {InitiativeUpdateArgs} args - Arguments to update one Initiative.
   * @example
   * // Update one Initiative
   * const initiative = await prisma.initiative.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends InitiativeUpdateArgs>(
    args: Prisma.SelectSubset<T, InitiativeUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more Initiatives.
   * @param {InitiativeDeleteManyArgs} args - Arguments to filter Initiatives to delete.
   * @example
   * // Delete a few Initiatives
   * const { count } = await prisma.initiative.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends InitiativeDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, InitiativeDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Initiatives.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Initiatives
   * const initiative = await prisma.initiative.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends InitiativeUpdateManyArgs>(
    args: Prisma.SelectSubset<T, InitiativeUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Initiatives and returns the data updated in the database.
   * @param {InitiativeUpdateManyAndReturnArgs} args - Arguments to update many Initiatives.
   * @example
   * // Update many Initiatives
   * const initiative = await prisma.initiative.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Initiatives and only return the `id`
   * const initiativeWithIdOnly = await prisma.initiative.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends InitiativeUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, InitiativeUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one Initiative.
   * @param {InitiativeUpsertArgs} args - Arguments to update or create a Initiative.
   * @example
   * // Update or create a Initiative
   * const initiative = await prisma.initiative.upsert({
   *   create: {
   *     // ... data to create a Initiative
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Initiative we want to update
   *   }
   * })
   */
  upsert<T extends InitiativeUpsertArgs>(
    args: Prisma.SelectSubset<T, InitiativeUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__InitiativeClient<
    runtime.Types.Result.GetResult<
      Prisma.$InitiativePayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of Initiatives.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeCountArgs} args - Arguments to filter Initiatives to count.
   * @example
   * // Count the number of Initiatives
   * const count = await prisma.initiative.count({
   *   where: {
   *     // ... the filter for the Initiatives we want to count
   *   }
   * })
   **/
  count<T extends InitiativeCountArgs>(
    args?: Prisma.Subset<T, InitiativeCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], InitiativeCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Initiative.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends InitiativeAggregateArgs>(
    args: Prisma.Subset<T, InitiativeAggregateArgs>
  ): Prisma.PrismaPromise<GetInitiativeAggregateType<T>>

  /**
   * Group by Initiative.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InitiativeGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends InitiativeGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InitiativeGroupByArgs['orderBy'] }
      : { orderBy?: InitiativeGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, InitiativeGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetInitiativeGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Initiative model
   */
  readonly fields: InitiativeFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for Initiative.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InitiativeClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  team<T extends Prisma.Initiative$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  objectives<T extends Prisma.Initiative$objectivesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$objectivesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ObjectivePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  owners<T extends Prisma.Initiative$ownersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$ownersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InitiativeOwnerPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  checkIns<T extends Prisma.Initiative$checkInsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$checkInsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CheckInPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  metrics<T extends Prisma.Initiative$metricsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$metricsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MetricPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  tasks<T extends Prisma.Initiative$tasksArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$tasksArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$TaskPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  meetings<T extends Prisma.Initiative$meetingsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Initiative$meetingsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MeetingPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the Initiative model
 */
export interface InitiativeFieldRefs {
  readonly id: Prisma.FieldRef<'Initiative', 'String'>
  readonly teamId: Prisma.FieldRef<'Initiative', 'String'>
  readonly organizationId: Prisma.FieldRef<'Initiative', 'String'>
  readonly title: Prisma.FieldRef<'Initiative', 'String'>
  readonly summary: Prisma.FieldRef<'Initiative', 'String'>
  readonly outcome: Prisma.FieldRef<'Initiative', 'String'>
  readonly startDate: Prisma.FieldRef<'Initiative', 'DateTime'>
  readonly targetDate: Prisma.FieldRef<'Initiative', 'DateTime'>
  readonly status: Prisma.FieldRef<'Initiative', 'String'>
  readonly rag: Prisma.FieldRef<'Initiative', 'String'>
  readonly confidence: Prisma.FieldRef<'Initiative', 'Int'>
  readonly createdAt: Prisma.FieldRef<'Initiative', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'Initiative', 'DateTime'>
}

// Custom InputTypes
/**
 * Initiative findUnique
 */
export type InitiativeFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * Filter, which Initiative to fetch.
   */
  where: Prisma.InitiativeWhereUniqueInput
}

/**
 * Initiative findUniqueOrThrow
 */
export type InitiativeFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * Filter, which Initiative to fetch.
   */
  where: Prisma.InitiativeWhereUniqueInput
}

/**
 * Initiative findFirst
 */
export type InitiativeFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * Filter, which Initiative to fetch.
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Initiatives to fetch.
   */
  orderBy?:
    | Prisma.InitiativeOrderByWithRelationInput
    | Prisma.InitiativeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Initiatives.
   */
  cursor?: Prisma.InitiativeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Initiatives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Initiatives.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Initiatives.
   */
  distinct?:
    | Prisma.InitiativeScalarFieldEnum
    | Prisma.InitiativeScalarFieldEnum[]
}

/**
 * Initiative findFirstOrThrow
 */
export type InitiativeFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * Filter, which Initiative to fetch.
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Initiatives to fetch.
   */
  orderBy?:
    | Prisma.InitiativeOrderByWithRelationInput
    | Prisma.InitiativeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Initiatives.
   */
  cursor?: Prisma.InitiativeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Initiatives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Initiatives.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Initiatives.
   */
  distinct?:
    | Prisma.InitiativeScalarFieldEnum
    | Prisma.InitiativeScalarFieldEnum[]
}

/**
 * Initiative findMany
 */
export type InitiativeFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * Filter, which Initiatives to fetch.
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Initiatives to fetch.
   */
  orderBy?:
    | Prisma.InitiativeOrderByWithRelationInput
    | Prisma.InitiativeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Initiatives.
   */
  cursor?: Prisma.InitiativeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Initiatives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Initiatives.
   */
  skip?: number
  distinct?:
    | Prisma.InitiativeScalarFieldEnum
    | Prisma.InitiativeScalarFieldEnum[]
}

/**
 * Initiative create
 */
export type InitiativeCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * The data needed to create a Initiative.
   */
  data: Prisma.XOR<
    Prisma.InitiativeCreateInput,
    Prisma.InitiativeUncheckedCreateInput
  >
}

/**
 * Initiative createMany
 */
export type InitiativeCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Initiatives.
   */
  data: Prisma.InitiativeCreateManyInput | Prisma.InitiativeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Initiative createManyAndReturn
 */
export type InitiativeCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * The data used to create many Initiatives.
   */
  data: Prisma.InitiativeCreateManyInput | Prisma.InitiativeCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Initiative update
 */
export type InitiativeUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * The data needed to update a Initiative.
   */
  data: Prisma.XOR<
    Prisma.InitiativeUpdateInput,
    Prisma.InitiativeUncheckedUpdateInput
  >
  /**
   * Choose, which Initiative to update.
   */
  where: Prisma.InitiativeWhereUniqueInput
}

/**
 * Initiative updateMany
 */
export type InitiativeUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Initiatives.
   */
  data: Prisma.XOR<
    Prisma.InitiativeUpdateManyMutationInput,
    Prisma.InitiativeUncheckedUpdateManyInput
  >
  /**
   * Filter which Initiatives to update
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * Limit how many Initiatives to update.
   */
  limit?: number
}

/**
 * Initiative updateManyAndReturn
 */
export type InitiativeUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * The data used to update Initiatives.
   */
  data: Prisma.XOR<
    Prisma.InitiativeUpdateManyMutationInput,
    Prisma.InitiativeUncheckedUpdateManyInput
  >
  /**
   * Filter which Initiatives to update
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * Limit how many Initiatives to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Initiative upsert
 */
export type InitiativeUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * The filter to search for the Initiative to update in case it exists.
   */
  where: Prisma.InitiativeWhereUniqueInput
  /**
   * In case the Initiative found by the `where` argument doesn't exist, create a new Initiative with this data.
   */
  create: Prisma.XOR<
    Prisma.InitiativeCreateInput,
    Prisma.InitiativeUncheckedCreateInput
  >
  /**
   * In case the Initiative was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.InitiativeUpdateInput,
    Prisma.InitiativeUncheckedUpdateInput
  >
}

/**
 * Initiative delete
 */
export type InitiativeDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
  /**
   * Filter which Initiative to delete.
   */
  where: Prisma.InitiativeWhereUniqueInput
}

/**
 * Initiative deleteMany
 */
export type InitiativeDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Initiatives to delete
   */
  where?: Prisma.InitiativeWhereInput
  /**
   * Limit how many Initiatives to delete.
   */
  limit?: number
}

/**
 * Initiative.team
 */
export type Initiative$teamArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null
  where?: Prisma.TeamWhereInput
}

/**
 * Initiative.objectives
 */
export type Initiative$objectivesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Objective
   */
  select?: Prisma.ObjectiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Objective
   */
  omit?: Prisma.ObjectiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ObjectiveInclude<ExtArgs> | null
  where?: Prisma.ObjectiveWhereInput
  orderBy?:
    | Prisma.ObjectiveOrderByWithRelationInput
    | Prisma.ObjectiveOrderByWithRelationInput[]
  cursor?: Prisma.ObjectiveWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ObjectiveScalarFieldEnum | Prisma.ObjectiveScalarFieldEnum[]
}

/**
 * Initiative.owners
 */
export type Initiative$ownersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the InitiativeOwner
   */
  select?: Prisma.InitiativeOwnerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InitiativeOwner
   */
  omit?: Prisma.InitiativeOwnerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeOwnerInclude<ExtArgs> | null
  where?: Prisma.InitiativeOwnerWhereInput
  orderBy?:
    | Prisma.InitiativeOwnerOrderByWithRelationInput
    | Prisma.InitiativeOwnerOrderByWithRelationInput[]
  cursor?: Prisma.InitiativeOwnerWhereUniqueInput
  take?: number
  skip?: number
  distinct?:
    | Prisma.InitiativeOwnerScalarFieldEnum
    | Prisma.InitiativeOwnerScalarFieldEnum[]
}

/**
 * Initiative.checkIns
 */
export type Initiative$checkInsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CheckIn
   */
  select?: Prisma.CheckInSelect<ExtArgs> | null
  /**
   * Omit specific fields from the CheckIn
   */
  omit?: Prisma.CheckInOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CheckInInclude<ExtArgs> | null
  where?: Prisma.CheckInWhereInput
  orderBy?:
    | Prisma.CheckInOrderByWithRelationInput
    | Prisma.CheckInOrderByWithRelationInput[]
  cursor?: Prisma.CheckInWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CheckInScalarFieldEnum | Prisma.CheckInScalarFieldEnum[]
}

/**
 * Initiative.metrics
 */
export type Initiative$metricsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Metric
   */
  select?: Prisma.MetricSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Metric
   */
  omit?: Prisma.MetricOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MetricInclude<ExtArgs> | null
  where?: Prisma.MetricWhereInput
  orderBy?:
    | Prisma.MetricOrderByWithRelationInput
    | Prisma.MetricOrderByWithRelationInput[]
  cursor?: Prisma.MetricWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MetricScalarFieldEnum | Prisma.MetricScalarFieldEnum[]
}

/**
 * Initiative.tasks
 */
export type Initiative$tasksArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Task
   */
  select?: Prisma.TaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Task
   */
  omit?: Prisma.TaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskInclude<ExtArgs> | null
  where?: Prisma.TaskWhereInput
  orderBy?:
    | Prisma.TaskOrderByWithRelationInput
    | Prisma.TaskOrderByWithRelationInput[]
  cursor?: Prisma.TaskWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TaskScalarFieldEnum | Prisma.TaskScalarFieldEnum[]
}

/**
 * Initiative.meetings
 */
export type Initiative$meetingsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Meeting
   */
  select?: Prisma.MeetingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Meeting
   */
  omit?: Prisma.MeetingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MeetingInclude<ExtArgs> | null
  where?: Prisma.MeetingWhereInput
  orderBy?:
    | Prisma.MeetingOrderByWithRelationInput
    | Prisma.MeetingOrderByWithRelationInput[]
  cursor?: Prisma.MeetingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MeetingScalarFieldEnum | Prisma.MeetingScalarFieldEnum[]
}

/**
 * Initiative without action
 */
export type InitiativeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Initiative
   */
  select?: Prisma.InitiativeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Initiative
   */
  omit?: Prisma.InitiativeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InitiativeInclude<ExtArgs> | null
}
