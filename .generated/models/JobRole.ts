/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `JobRole` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model JobRole
 *
 */
export type JobRoleModel =
  runtime.Types.Result.DefaultSelection<Prisma.$JobRolePayload>

export type AggregateJobRole = {
  _count: JobRoleCountAggregateOutputType | null
  _min: JobRoleMinAggregateOutputType | null
  _max: JobRoleMaxAggregateOutputType | null
}

export type JobRoleMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  organizationId: string | null
  levelId: string | null
  domainId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type JobRoleMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  organizationId: string | null
  levelId: string | null
  domainId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type JobRoleCountAggregateOutputType = {
  id: number
  title: number
  description: number
  organizationId: number
  levelId: number
  domainId: number
  createdAt: number
  updatedAt: number
  _all: number
}

export type JobRoleMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  organizationId?: true
  levelId?: true
  domainId?: true
  createdAt?: true
  updatedAt?: true
}

export type JobRoleMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  organizationId?: true
  levelId?: true
  domainId?: true
  createdAt?: true
  updatedAt?: true
}

export type JobRoleCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  organizationId?: true
  levelId?: true
  domainId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type JobRoleAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which JobRole to aggregate.
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JobRoles to fetch.
   */
  orderBy?:
    | Prisma.JobRoleOrderByWithRelationInput
    | Prisma.JobRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.JobRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JobRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JobRoles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned JobRoles
   **/
  _count?: true | JobRoleCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: JobRoleMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: JobRoleMaxAggregateInputType
}

export type GetJobRoleAggregateType<T extends JobRoleAggregateArgs> = {
  [P in keyof T & keyof AggregateJobRole]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateJobRole[P]>
    : Prisma.GetScalarType<T[P], AggregateJobRole[P]>
}

export type JobRoleGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.JobRoleWhereInput
  orderBy?:
    | Prisma.JobRoleOrderByWithAggregationInput
    | Prisma.JobRoleOrderByWithAggregationInput[]
  by: Prisma.JobRoleScalarFieldEnum[] | Prisma.JobRoleScalarFieldEnum
  having?: Prisma.JobRoleScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: JobRoleCountAggregateInputType | true
  _min?: JobRoleMinAggregateInputType
  _max?: JobRoleMaxAggregateInputType
}

export type JobRoleGroupByOutputType = {
  id: string
  title: string
  description: string | null
  organizationId: string
  levelId: string
  domainId: string
  createdAt: Date
  updatedAt: Date
  _count: JobRoleCountAggregateOutputType | null
  _min: JobRoleMinAggregateOutputType | null
  _max: JobRoleMaxAggregateOutputType | null
}

type GetJobRoleGroupByPayload<T extends JobRoleGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<JobRoleGroupByOutputType, T['by']> & {
        [P in keyof T & keyof JobRoleGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], JobRoleGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], JobRoleGroupByOutputType[P]>
      }
    >
  >

export type JobRoleWhereInput = {
  AND?: Prisma.JobRoleWhereInput | Prisma.JobRoleWhereInput[]
  OR?: Prisma.JobRoleWhereInput[]
  NOT?: Prisma.JobRoleWhereInput | Prisma.JobRoleWhereInput[]
  id?: Prisma.StringFilter<'JobRole'> | string
  title?: Prisma.StringFilter<'JobRole'> | string
  description?: Prisma.StringNullableFilter<'JobRole'> | string | null
  organizationId?: Prisma.StringFilter<'JobRole'> | string
  levelId?: Prisma.StringFilter<'JobRole'> | string
  domainId?: Prisma.StringFilter<'JobRole'> | string
  createdAt?: Prisma.DateTimeFilter<'JobRole'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'JobRole'> | Date | string
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  level?: Prisma.XOR<
    Prisma.JobLevelScalarRelationFilter,
    Prisma.JobLevelWhereInput
  >
  domain?: Prisma.XOR<
    Prisma.JobDomainScalarRelationFilter,
    Prisma.JobDomainWhereInput
  >
  people?: Prisma.PersonListRelationFilter
}

export type JobRoleOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  levelId?: Prisma.SortOrder
  domainId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  organization?: Prisma.OrganizationOrderByWithRelationInput
  level?: Prisma.JobLevelOrderByWithRelationInput
  domain?: Prisma.JobDomainOrderByWithRelationInput
  people?: Prisma.PersonOrderByRelationAggregateInput
}

export type JobRoleWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    AND?: Prisma.JobRoleWhereInput | Prisma.JobRoleWhereInput[]
    OR?: Prisma.JobRoleWhereInput[]
    NOT?: Prisma.JobRoleWhereInput | Prisma.JobRoleWhereInput[]
    title?: Prisma.StringFilter<'JobRole'> | string
    description?: Prisma.StringNullableFilter<'JobRole'> | string | null
    organizationId?: Prisma.StringFilter<'JobRole'> | string
    levelId?: Prisma.StringFilter<'JobRole'> | string
    domainId?: Prisma.StringFilter<'JobRole'> | string
    createdAt?: Prisma.DateTimeFilter<'JobRole'> | Date | string
    updatedAt?: Prisma.DateTimeFilter<'JobRole'> | Date | string
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    level?: Prisma.XOR<
      Prisma.JobLevelScalarRelationFilter,
      Prisma.JobLevelWhereInput
    >
    domain?: Prisma.XOR<
      Prisma.JobDomainScalarRelationFilter,
      Prisma.JobDomainWhereInput
    >
    people?: Prisma.PersonListRelationFilter
  },
  'id'
>

export type JobRoleOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  levelId?: Prisma.SortOrder
  domainId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.JobRoleCountOrderByAggregateInput
  _max?: Prisma.JobRoleMaxOrderByAggregateInput
  _min?: Prisma.JobRoleMinOrderByAggregateInput
}

export type JobRoleScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.JobRoleScalarWhereWithAggregatesInput
    | Prisma.JobRoleScalarWhereWithAggregatesInput[]
  OR?: Prisma.JobRoleScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.JobRoleScalarWhereWithAggregatesInput
    | Prisma.JobRoleScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'JobRole'> | string
  title?: Prisma.StringWithAggregatesFilter<'JobRole'> | string
  description?:
    | Prisma.StringNullableWithAggregatesFilter<'JobRole'>
    | string
    | null
  organizationId?: Prisma.StringWithAggregatesFilter<'JobRole'> | string
  levelId?: Prisma.StringWithAggregatesFilter<'JobRole'> | string
  domainId?: Prisma.StringWithAggregatesFilter<'JobRole'> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'JobRole'> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'JobRole'> | Date | string
}

export type JobRoleCreateInput = {
  id?: string
  title: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutJobRolesInput
  level: Prisma.JobLevelCreateNestedOneWithoutJobRolesInput
  domain: Prisma.JobDomainCreateNestedOneWithoutJobRolesInput
  people?: Prisma.PersonCreateNestedManyWithoutJobRoleInput
}

export type JobRoleUncheckedCreateInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  levelId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutJobRoleInput
}

export type JobRoleUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutJobRolesNestedInput
  level?: Prisma.JobLevelUpdateOneRequiredWithoutJobRolesNestedInput
  domain?: Prisma.JobDomainUpdateOneRequiredWithoutJobRolesNestedInput
  people?: Prisma.PersonUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  people?: Prisma.PersonUncheckedUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleCreateManyInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  levelId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type JobRoleUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type JobRoleUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type JobRoleListRelationFilter = {
  every?: Prisma.JobRoleWhereInput
  some?: Prisma.JobRoleWhereInput
  none?: Prisma.JobRoleWhereInput
}

export type JobRoleOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type JobRoleNullableScalarRelationFilter = {
  is?: Prisma.JobRoleWhereInput | null
  isNot?: Prisma.JobRoleWhereInput | null
}

export type JobRoleCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  levelId?: Prisma.SortOrder
  domainId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type JobRoleMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  levelId?: Prisma.SortOrder
  domainId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type JobRoleMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  levelId?: Prisma.SortOrder
  domainId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type JobRoleCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutOrganizationInput,
        Prisma.JobRoleUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.JobRoleCreateWithoutOrganizationInput[]
    | Prisma.JobRoleUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.JobRoleCreateManyOrganizationInputEnvelope
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
}

export type JobRoleUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutOrganizationInput,
        Prisma.JobRoleUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.JobRoleCreateWithoutOrganizationInput[]
    | Prisma.JobRoleUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.JobRoleCreateManyOrganizationInputEnvelope
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
}

export type JobRoleUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutOrganizationInput,
        Prisma.JobRoleUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.JobRoleCreateWithoutOrganizationInput[]
    | Prisma.JobRoleUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.JobRoleCreateManyOrganizationInputEnvelope
  set?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  disconnect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  delete?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  update?:
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.JobRoleUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.JobRoleUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
}

export type JobRoleUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutOrganizationInput,
        Prisma.JobRoleUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.JobRoleCreateWithoutOrganizationInput[]
    | Prisma.JobRoleUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput
    | Prisma.JobRoleCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.JobRoleCreateManyOrganizationInputEnvelope
  set?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  disconnect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  delete?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  update?:
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.JobRoleUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.JobRoleUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
}

export type JobRoleCreateNestedOneWithoutPeopleInput = {
  create?: Prisma.XOR<
    Prisma.JobRoleCreateWithoutPeopleInput,
    Prisma.JobRoleUncheckedCreateWithoutPeopleInput
  >
  connectOrCreate?: Prisma.JobRoleCreateOrConnectWithoutPeopleInput
  connect?: Prisma.JobRoleWhereUniqueInput
}

export type JobRoleUpdateOneWithoutPeopleNestedInput = {
  create?: Prisma.XOR<
    Prisma.JobRoleCreateWithoutPeopleInput,
    Prisma.JobRoleUncheckedCreateWithoutPeopleInput
  >
  connectOrCreate?: Prisma.JobRoleCreateOrConnectWithoutPeopleInput
  upsert?: Prisma.JobRoleUpsertWithoutPeopleInput
  disconnect?: Prisma.JobRoleWhereInput | boolean
  delete?: Prisma.JobRoleWhereInput | boolean
  connect?: Prisma.JobRoleWhereUniqueInput
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.JobRoleUpdateToOneWithWhereWithoutPeopleInput,
      Prisma.JobRoleUpdateWithoutPeopleInput
    >,
    Prisma.JobRoleUncheckedUpdateWithoutPeopleInput
  >
}

export type JobRoleCreateNestedManyWithoutLevelInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutLevelInput,
        Prisma.JobRoleUncheckedCreateWithoutLevelInput
      >
    | Prisma.JobRoleCreateWithoutLevelInput[]
    | Prisma.JobRoleUncheckedCreateWithoutLevelInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput[]
  createMany?: Prisma.JobRoleCreateManyLevelInputEnvelope
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
}

export type JobRoleUncheckedCreateNestedManyWithoutLevelInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutLevelInput,
        Prisma.JobRoleUncheckedCreateWithoutLevelInput
      >
    | Prisma.JobRoleCreateWithoutLevelInput[]
    | Prisma.JobRoleUncheckedCreateWithoutLevelInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput[]
  createMany?: Prisma.JobRoleCreateManyLevelInputEnvelope
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
}

export type JobRoleUpdateManyWithoutLevelNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutLevelInput,
        Prisma.JobRoleUncheckedCreateWithoutLevelInput
      >
    | Prisma.JobRoleCreateWithoutLevelInput[]
    | Prisma.JobRoleUncheckedCreateWithoutLevelInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput[]
  upsert?:
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutLevelInput
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutLevelInput[]
  createMany?: Prisma.JobRoleCreateManyLevelInputEnvelope
  set?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  disconnect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  delete?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  update?:
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutLevelInput
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutLevelInput[]
  updateMany?:
    | Prisma.JobRoleUpdateManyWithWhereWithoutLevelInput
    | Prisma.JobRoleUpdateManyWithWhereWithoutLevelInput[]
  deleteMany?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
}

export type JobRoleUncheckedUpdateManyWithoutLevelNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutLevelInput,
        Prisma.JobRoleUncheckedCreateWithoutLevelInput
      >
    | Prisma.JobRoleCreateWithoutLevelInput[]
    | Prisma.JobRoleUncheckedCreateWithoutLevelInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput
    | Prisma.JobRoleCreateOrConnectWithoutLevelInput[]
  upsert?:
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutLevelInput
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutLevelInput[]
  createMany?: Prisma.JobRoleCreateManyLevelInputEnvelope
  set?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  disconnect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  delete?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  update?:
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutLevelInput
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutLevelInput[]
  updateMany?:
    | Prisma.JobRoleUpdateManyWithWhereWithoutLevelInput
    | Prisma.JobRoleUpdateManyWithWhereWithoutLevelInput[]
  deleteMany?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
}

export type JobRoleCreateNestedManyWithoutDomainInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutDomainInput,
        Prisma.JobRoleUncheckedCreateWithoutDomainInput
      >
    | Prisma.JobRoleCreateWithoutDomainInput[]
    | Prisma.JobRoleUncheckedCreateWithoutDomainInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput[]
  createMany?: Prisma.JobRoleCreateManyDomainInputEnvelope
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
}

export type JobRoleUncheckedCreateNestedManyWithoutDomainInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutDomainInput,
        Prisma.JobRoleUncheckedCreateWithoutDomainInput
      >
    | Prisma.JobRoleCreateWithoutDomainInput[]
    | Prisma.JobRoleUncheckedCreateWithoutDomainInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput[]
  createMany?: Prisma.JobRoleCreateManyDomainInputEnvelope
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
}

export type JobRoleUpdateManyWithoutDomainNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutDomainInput,
        Prisma.JobRoleUncheckedCreateWithoutDomainInput
      >
    | Prisma.JobRoleCreateWithoutDomainInput[]
    | Prisma.JobRoleUncheckedCreateWithoutDomainInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput[]
  upsert?:
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutDomainInput
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutDomainInput[]
  createMany?: Prisma.JobRoleCreateManyDomainInputEnvelope
  set?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  disconnect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  delete?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  update?:
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutDomainInput
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutDomainInput[]
  updateMany?:
    | Prisma.JobRoleUpdateManyWithWhereWithoutDomainInput
    | Prisma.JobRoleUpdateManyWithWhereWithoutDomainInput[]
  deleteMany?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
}

export type JobRoleUncheckedUpdateManyWithoutDomainNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.JobRoleCreateWithoutDomainInput,
        Prisma.JobRoleUncheckedCreateWithoutDomainInput
      >
    | Prisma.JobRoleCreateWithoutDomainInput[]
    | Prisma.JobRoleUncheckedCreateWithoutDomainInput[]
  connectOrCreate?:
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput
    | Prisma.JobRoleCreateOrConnectWithoutDomainInput[]
  upsert?:
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutDomainInput
    | Prisma.JobRoleUpsertWithWhereUniqueWithoutDomainInput[]
  createMany?: Prisma.JobRoleCreateManyDomainInputEnvelope
  set?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  disconnect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  delete?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  connect?: Prisma.JobRoleWhereUniqueInput | Prisma.JobRoleWhereUniqueInput[]
  update?:
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutDomainInput
    | Prisma.JobRoleUpdateWithWhereUniqueWithoutDomainInput[]
  updateMany?:
    | Prisma.JobRoleUpdateManyWithWhereWithoutDomainInput
    | Prisma.JobRoleUpdateManyWithWhereWithoutDomainInput[]
  deleteMany?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
}

export type JobRoleCreateWithoutOrganizationInput = {
  id?: string
  title: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  level: Prisma.JobLevelCreateNestedOneWithoutJobRolesInput
  domain: Prisma.JobDomainCreateNestedOneWithoutJobRolesInput
  people?: Prisma.PersonCreateNestedManyWithoutJobRoleInput
}

export type JobRoleUncheckedCreateWithoutOrganizationInput = {
  id?: string
  title: string
  description?: string | null
  levelId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutJobRoleInput
}

export type JobRoleCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.JobRoleWhereUniqueInput
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutOrganizationInput,
    Prisma.JobRoleUncheckedCreateWithoutOrganizationInput
  >
}

export type JobRoleCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.JobRoleCreateManyOrganizationInput
    | Prisma.JobRoleCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type JobRoleUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.JobRoleWhereUniqueInput
  update: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutOrganizationInput,
    Prisma.JobRoleUncheckedUpdateWithoutOrganizationInput
  >
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutOrganizationInput,
    Prisma.JobRoleUncheckedCreateWithoutOrganizationInput
  >
}

export type JobRoleUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.JobRoleWhereUniqueInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutOrganizationInput,
    Prisma.JobRoleUncheckedUpdateWithoutOrganizationInput
  >
}

export type JobRoleUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.JobRoleScalarWhereInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateManyMutationInput,
    Prisma.JobRoleUncheckedUpdateManyWithoutOrganizationInput
  >
}

export type JobRoleScalarWhereInput = {
  AND?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
  OR?: Prisma.JobRoleScalarWhereInput[]
  NOT?: Prisma.JobRoleScalarWhereInput | Prisma.JobRoleScalarWhereInput[]
  id?: Prisma.StringFilter<'JobRole'> | string
  title?: Prisma.StringFilter<'JobRole'> | string
  description?: Prisma.StringNullableFilter<'JobRole'> | string | null
  organizationId?: Prisma.StringFilter<'JobRole'> | string
  levelId?: Prisma.StringFilter<'JobRole'> | string
  domainId?: Prisma.StringFilter<'JobRole'> | string
  createdAt?: Prisma.DateTimeFilter<'JobRole'> | Date | string
  updatedAt?: Prisma.DateTimeFilter<'JobRole'> | Date | string
}

export type JobRoleCreateWithoutPeopleInput = {
  id?: string
  title: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutJobRolesInput
  level: Prisma.JobLevelCreateNestedOneWithoutJobRolesInput
  domain: Prisma.JobDomainCreateNestedOneWithoutJobRolesInput
}

export type JobRoleUncheckedCreateWithoutPeopleInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  levelId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type JobRoleCreateOrConnectWithoutPeopleInput = {
  where: Prisma.JobRoleWhereUniqueInput
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutPeopleInput,
    Prisma.JobRoleUncheckedCreateWithoutPeopleInput
  >
}

export type JobRoleUpsertWithoutPeopleInput = {
  update: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutPeopleInput,
    Prisma.JobRoleUncheckedUpdateWithoutPeopleInput
  >
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutPeopleInput,
    Prisma.JobRoleUncheckedCreateWithoutPeopleInput
  >
  where?: Prisma.JobRoleWhereInput
}

export type JobRoleUpdateToOneWithWhereWithoutPeopleInput = {
  where?: Prisma.JobRoleWhereInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutPeopleInput,
    Prisma.JobRoleUncheckedUpdateWithoutPeopleInput
  >
}

export type JobRoleUpdateWithoutPeopleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutJobRolesNestedInput
  level?: Prisma.JobLevelUpdateOneRequiredWithoutJobRolesNestedInput
  domain?: Prisma.JobDomainUpdateOneRequiredWithoutJobRolesNestedInput
}

export type JobRoleUncheckedUpdateWithoutPeopleInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type JobRoleCreateWithoutLevelInput = {
  id?: string
  title: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutJobRolesInput
  domain: Prisma.JobDomainCreateNestedOneWithoutJobRolesInput
  people?: Prisma.PersonCreateNestedManyWithoutJobRoleInput
}

export type JobRoleUncheckedCreateWithoutLevelInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutJobRoleInput
}

export type JobRoleCreateOrConnectWithoutLevelInput = {
  where: Prisma.JobRoleWhereUniqueInput
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutLevelInput,
    Prisma.JobRoleUncheckedCreateWithoutLevelInput
  >
}

export type JobRoleCreateManyLevelInputEnvelope = {
  data:
    | Prisma.JobRoleCreateManyLevelInput
    | Prisma.JobRoleCreateManyLevelInput[]
  skipDuplicates?: boolean
}

export type JobRoleUpsertWithWhereUniqueWithoutLevelInput = {
  where: Prisma.JobRoleWhereUniqueInput
  update: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutLevelInput,
    Prisma.JobRoleUncheckedUpdateWithoutLevelInput
  >
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutLevelInput,
    Prisma.JobRoleUncheckedCreateWithoutLevelInput
  >
}

export type JobRoleUpdateWithWhereUniqueWithoutLevelInput = {
  where: Prisma.JobRoleWhereUniqueInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutLevelInput,
    Prisma.JobRoleUncheckedUpdateWithoutLevelInput
  >
}

export type JobRoleUpdateManyWithWhereWithoutLevelInput = {
  where: Prisma.JobRoleScalarWhereInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateManyMutationInput,
    Prisma.JobRoleUncheckedUpdateManyWithoutLevelInput
  >
}

export type JobRoleCreateWithoutDomainInput = {
  id?: string
  title: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutJobRolesInput
  level: Prisma.JobLevelCreateNestedOneWithoutJobRolesInput
  people?: Prisma.PersonCreateNestedManyWithoutJobRoleInput
}

export type JobRoleUncheckedCreateWithoutDomainInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  levelId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  people?: Prisma.PersonUncheckedCreateNestedManyWithoutJobRoleInput
}

export type JobRoleCreateOrConnectWithoutDomainInput = {
  where: Prisma.JobRoleWhereUniqueInput
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutDomainInput,
    Prisma.JobRoleUncheckedCreateWithoutDomainInput
  >
}

export type JobRoleCreateManyDomainInputEnvelope = {
  data:
    | Prisma.JobRoleCreateManyDomainInput
    | Prisma.JobRoleCreateManyDomainInput[]
  skipDuplicates?: boolean
}

export type JobRoleUpsertWithWhereUniqueWithoutDomainInput = {
  where: Prisma.JobRoleWhereUniqueInput
  update: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutDomainInput,
    Prisma.JobRoleUncheckedUpdateWithoutDomainInput
  >
  create: Prisma.XOR<
    Prisma.JobRoleCreateWithoutDomainInput,
    Prisma.JobRoleUncheckedCreateWithoutDomainInput
  >
}

export type JobRoleUpdateWithWhereUniqueWithoutDomainInput = {
  where: Prisma.JobRoleWhereUniqueInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateWithoutDomainInput,
    Prisma.JobRoleUncheckedUpdateWithoutDomainInput
  >
}

export type JobRoleUpdateManyWithWhereWithoutDomainInput = {
  where: Prisma.JobRoleScalarWhereInput
  data: Prisma.XOR<
    Prisma.JobRoleUpdateManyMutationInput,
    Prisma.JobRoleUncheckedUpdateManyWithoutDomainInput
  >
}

export type JobRoleCreateManyOrganizationInput = {
  id?: string
  title: string
  description?: string | null
  levelId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type JobRoleUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  level?: Prisma.JobLevelUpdateOneRequiredWithoutJobRolesNestedInput
  domain?: Prisma.JobDomainUpdateOneRequiredWithoutJobRolesNestedInput
  people?: Prisma.PersonUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  people?: Prisma.PersonUncheckedUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type JobRoleCreateManyLevelInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  domainId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type JobRoleUpdateWithoutLevelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutJobRolesNestedInput
  domain?: Prisma.JobDomainUpdateOneRequiredWithoutJobRolesNestedInput
  people?: Prisma.PersonUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateWithoutLevelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  people?: Prisma.PersonUncheckedUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateManyWithoutLevelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  domainId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type JobRoleCreateManyDomainInput = {
  id?: string
  title: string
  description?: string | null
  organizationId: string
  levelId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type JobRoleUpdateWithoutDomainInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutJobRolesNestedInput
  level?: Prisma.JobLevelUpdateOneRequiredWithoutJobRolesNestedInput
  people?: Prisma.PersonUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateWithoutDomainInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  people?: Prisma.PersonUncheckedUpdateManyWithoutJobRoleNestedInput
}

export type JobRoleUncheckedUpdateManyWithoutDomainInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  levelId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

/**
 * Count Type JobRoleCountOutputType
 */

export type JobRoleCountOutputType = {
  people: number
}

export type JobRoleCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  people?: boolean | JobRoleCountOutputTypeCountPeopleArgs
}

/**
 * JobRoleCountOutputType without action
 */
export type JobRoleCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRoleCountOutputType
   */
  select?: Prisma.JobRoleCountOutputTypeSelect<ExtArgs> | null
}

/**
 * JobRoleCountOutputType without action
 */
export type JobRoleCountOutputTypeCountPeopleArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.PersonWhereInput
}

export type JobRoleSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    title?: boolean
    description?: boolean
    organizationId?: boolean
    levelId?: boolean
    domainId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    level?: boolean | Prisma.JobLevelDefaultArgs<ExtArgs>
    domain?: boolean | Prisma.JobDomainDefaultArgs<ExtArgs>
    people?: boolean | Prisma.JobRole$peopleArgs<ExtArgs>
    _count?: boolean | Prisma.JobRoleCountOutputTypeDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['jobRole']
>

export type JobRoleSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    title?: boolean
    description?: boolean
    organizationId?: boolean
    levelId?: boolean
    domainId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    level?: boolean | Prisma.JobLevelDefaultArgs<ExtArgs>
    domain?: boolean | Prisma.JobDomainDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['jobRole']
>

export type JobRoleSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    title?: boolean
    description?: boolean
    organizationId?: boolean
    levelId?: boolean
    domainId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    level?: boolean | Prisma.JobLevelDefaultArgs<ExtArgs>
    domain?: boolean | Prisma.JobDomainDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['jobRole']
>

export type JobRoleSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  organizationId?: boolean
  levelId?: boolean
  domainId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type JobRoleOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'title'
  | 'description'
  | 'organizationId'
  | 'levelId'
  | 'domainId'
  | 'createdAt'
  | 'updatedAt',
  ExtArgs['result']['jobRole']
>
export type JobRoleInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  level?: boolean | Prisma.JobLevelDefaultArgs<ExtArgs>
  domain?: boolean | Prisma.JobDomainDefaultArgs<ExtArgs>
  people?: boolean | Prisma.JobRole$peopleArgs<ExtArgs>
  _count?: boolean | Prisma.JobRoleCountOutputTypeDefaultArgs<ExtArgs>
}
export type JobRoleIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  level?: boolean | Prisma.JobLevelDefaultArgs<ExtArgs>
  domain?: boolean | Prisma.JobDomainDefaultArgs<ExtArgs>
}
export type JobRoleIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  level?: boolean | Prisma.JobLevelDefaultArgs<ExtArgs>
  domain?: boolean | Prisma.JobDomainDefaultArgs<ExtArgs>
}

export type $JobRolePayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'JobRole'
  objects: {
    organization: Prisma.$OrganizationPayload<ExtArgs>
    level: Prisma.$JobLevelPayload<ExtArgs>
    domain: Prisma.$JobDomainPayload<ExtArgs>
    people: Prisma.$PersonPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      title: string
      description: string | null
      organizationId: string
      levelId: string
      domainId: string
      createdAt: Date
      updatedAt: Date
    },
    ExtArgs['result']['jobRole']
  >
  composites: {}
}

export type JobRoleGetPayload<
  S extends boolean | null | undefined | JobRoleDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$JobRolePayload, S>

export type JobRoleCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<JobRoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: JobRoleCountAggregateInputType | true
}

export interface JobRoleDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['JobRole']
    meta: { name: 'JobRole' }
  }
  /**
   * Find zero or one JobRole that matches the filter.
   * @param {JobRoleFindUniqueArgs} args - Arguments to find a JobRole
   * @example
   * // Get one JobRole
   * const jobRole = await prisma.jobRole.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends JobRoleFindUniqueArgs>(
    args: Prisma.SelectSubset<T, JobRoleFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one JobRole that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {JobRoleFindUniqueOrThrowArgs} args - Arguments to find a JobRole
   * @example
   * // Get one JobRole
   * const jobRole = await prisma.jobRole.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends JobRoleFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, JobRoleFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first JobRole that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleFindFirstArgs} args - Arguments to find a JobRole
   * @example
   * // Get one JobRole
   * const jobRole = await prisma.jobRole.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends JobRoleFindFirstArgs>(
    args?: Prisma.SelectSubset<T, JobRoleFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first JobRole that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleFindFirstOrThrowArgs} args - Arguments to find a JobRole
   * @example
   * // Get one JobRole
   * const jobRole = await prisma.jobRole.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends JobRoleFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, JobRoleFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more JobRoles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all JobRoles
   * const jobRoles = await prisma.jobRole.findMany()
   *
   * // Get first 10 JobRoles
   * const jobRoles = await prisma.jobRole.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const jobRoleWithIdOnly = await prisma.jobRole.findMany({ select: { id: true } })
   *
   */
  findMany<T extends JobRoleFindManyArgs>(
    args?: Prisma.SelectSubset<T, JobRoleFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a JobRole.
   * @param {JobRoleCreateArgs} args - Arguments to create a JobRole.
   * @example
   * // Create one JobRole
   * const JobRole = await prisma.jobRole.create({
   *   data: {
   *     // ... data to create a JobRole
   *   }
   * })
   *
   */
  create<T extends JobRoleCreateArgs>(
    args: Prisma.SelectSubset<T, JobRoleCreateArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many JobRoles.
   * @param {JobRoleCreateManyArgs} args - Arguments to create many JobRoles.
   * @example
   * // Create many JobRoles
   * const jobRole = await prisma.jobRole.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends JobRoleCreateManyArgs>(
    args?: Prisma.SelectSubset<T, JobRoleCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many JobRoles and returns the data saved in the database.
   * @param {JobRoleCreateManyAndReturnArgs} args - Arguments to create many JobRoles.
   * @example
   * // Create many JobRoles
   * const jobRole = await prisma.jobRole.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many JobRoles and only return the `id`
   * const jobRoleWithIdOnly = await prisma.jobRole.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends JobRoleCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, JobRoleCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a JobRole.
   * @param {JobRoleDeleteArgs} args - Arguments to delete one JobRole.
   * @example
   * // Delete one JobRole
   * const JobRole = await prisma.jobRole.delete({
   *   where: {
   *     // ... filter to delete one JobRole
   *   }
   * })
   *
   */
  delete<T extends JobRoleDeleteArgs>(
    args: Prisma.SelectSubset<T, JobRoleDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one JobRole.
   * @param {JobRoleUpdateArgs} args - Arguments to update one JobRole.
   * @example
   * // Update one JobRole
   * const jobRole = await prisma.jobRole.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends JobRoleUpdateArgs>(
    args: Prisma.SelectSubset<T, JobRoleUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more JobRoles.
   * @param {JobRoleDeleteManyArgs} args - Arguments to filter JobRoles to delete.
   * @example
   * // Delete a few JobRoles
   * const { count } = await prisma.jobRole.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends JobRoleDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, JobRoleDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more JobRoles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many JobRoles
   * const jobRole = await prisma.jobRole.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends JobRoleUpdateManyArgs>(
    args: Prisma.SelectSubset<T, JobRoleUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more JobRoles and returns the data updated in the database.
   * @param {JobRoleUpdateManyAndReturnArgs} args - Arguments to update many JobRoles.
   * @example
   * // Update many JobRoles
   * const jobRole = await prisma.jobRole.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more JobRoles and only return the `id`
   * const jobRoleWithIdOnly = await prisma.jobRole.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends JobRoleUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, JobRoleUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one JobRole.
   * @param {JobRoleUpsertArgs} args - Arguments to update or create a JobRole.
   * @example
   * // Update or create a JobRole
   * const jobRole = await prisma.jobRole.upsert({
   *   create: {
   *     // ... data to create a JobRole
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the JobRole we want to update
   *   }
   * })
   */
  upsert<T extends JobRoleUpsertArgs>(
    args: Prisma.SelectSubset<T, JobRoleUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__JobRoleClient<
    runtime.Types.Result.GetResult<
      Prisma.$JobRolePayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of JobRoles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleCountArgs} args - Arguments to filter JobRoles to count.
   * @example
   * // Count the number of JobRoles
   * const count = await prisma.jobRole.count({
   *   where: {
   *     // ... the filter for the JobRoles we want to count
   *   }
   * })
   **/
  count<T extends JobRoleCountArgs>(
    args?: Prisma.Subset<T, JobRoleCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], JobRoleCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a JobRole.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends JobRoleAggregateArgs>(
    args: Prisma.Subset<T, JobRoleAggregateArgs>
  ): Prisma.PrismaPromise<GetJobRoleAggregateType<T>>

  /**
   * Group by JobRole.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {JobRoleGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends JobRoleGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: JobRoleGroupByArgs['orderBy'] }
      : { orderBy?: JobRoleGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, JobRoleGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetJobRoleGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobRole model
   */
  readonly fields: JobRoleFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for JobRole.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__JobRoleClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  level<T extends Prisma.JobLevelDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JobLevelDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__JobLevelClient<
    | runtime.Types.Result.GetResult<
        Prisma.$JobLevelPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  domain<T extends Prisma.JobDomainDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JobDomainDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__JobDomainClient<
    | runtime.Types.Result.GetResult<
        Prisma.$JobDomainPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  people<T extends Prisma.JobRole$peopleArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.JobRole$peopleArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PersonPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the JobRole model
 */
export interface JobRoleFieldRefs {
  readonly id: Prisma.FieldRef<'JobRole', 'String'>
  readonly title: Prisma.FieldRef<'JobRole', 'String'>
  readonly description: Prisma.FieldRef<'JobRole', 'String'>
  readonly organizationId: Prisma.FieldRef<'JobRole', 'String'>
  readonly levelId: Prisma.FieldRef<'JobRole', 'String'>
  readonly domainId: Prisma.FieldRef<'JobRole', 'String'>
  readonly createdAt: Prisma.FieldRef<'JobRole', 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<'JobRole', 'DateTime'>
}

// Custom InputTypes
/**
 * JobRole findUnique
 */
export type JobRoleFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * Filter, which JobRole to fetch.
   */
  where: Prisma.JobRoleWhereUniqueInput
}

/**
 * JobRole findUniqueOrThrow
 */
export type JobRoleFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * Filter, which JobRole to fetch.
   */
  where: Prisma.JobRoleWhereUniqueInput
}

/**
 * JobRole findFirst
 */
export type JobRoleFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * Filter, which JobRole to fetch.
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JobRoles to fetch.
   */
  orderBy?:
    | Prisma.JobRoleOrderByWithRelationInput
    | Prisma.JobRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for JobRoles.
   */
  cursor?: Prisma.JobRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JobRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JobRoles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of JobRoles.
   */
  distinct?: Prisma.JobRoleScalarFieldEnum | Prisma.JobRoleScalarFieldEnum[]
}

/**
 * JobRole findFirstOrThrow
 */
export type JobRoleFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * Filter, which JobRole to fetch.
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JobRoles to fetch.
   */
  orderBy?:
    | Prisma.JobRoleOrderByWithRelationInput
    | Prisma.JobRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for JobRoles.
   */
  cursor?: Prisma.JobRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JobRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JobRoles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of JobRoles.
   */
  distinct?: Prisma.JobRoleScalarFieldEnum | Prisma.JobRoleScalarFieldEnum[]
}

/**
 * JobRole findMany
 */
export type JobRoleFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * Filter, which JobRoles to fetch.
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of JobRoles to fetch.
   */
  orderBy?:
    | Prisma.JobRoleOrderByWithRelationInput
    | Prisma.JobRoleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing JobRoles.
   */
  cursor?: Prisma.JobRoleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` JobRoles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` JobRoles.
   */
  skip?: number
  distinct?: Prisma.JobRoleScalarFieldEnum | Prisma.JobRoleScalarFieldEnum[]
}

/**
 * JobRole create
 */
export type JobRoleCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * The data needed to create a JobRole.
   */
  data: Prisma.XOR<
    Prisma.JobRoleCreateInput,
    Prisma.JobRoleUncheckedCreateInput
  >
}

/**
 * JobRole createMany
 */
export type JobRoleCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many JobRoles.
   */
  data: Prisma.JobRoleCreateManyInput | Prisma.JobRoleCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * JobRole createManyAndReturn
 */
export type JobRoleCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * The data used to create many JobRoles.
   */
  data: Prisma.JobRoleCreateManyInput | Prisma.JobRoleCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * JobRole update
 */
export type JobRoleUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * The data needed to update a JobRole.
   */
  data: Prisma.XOR<
    Prisma.JobRoleUpdateInput,
    Prisma.JobRoleUncheckedUpdateInput
  >
  /**
   * Choose, which JobRole to update.
   */
  where: Prisma.JobRoleWhereUniqueInput
}

/**
 * JobRole updateMany
 */
export type JobRoleUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update JobRoles.
   */
  data: Prisma.XOR<
    Prisma.JobRoleUpdateManyMutationInput,
    Prisma.JobRoleUncheckedUpdateManyInput
  >
  /**
   * Filter which JobRoles to update
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * Limit how many JobRoles to update.
   */
  limit?: number
}

/**
 * JobRole updateManyAndReturn
 */
export type JobRoleUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * The data used to update JobRoles.
   */
  data: Prisma.XOR<
    Prisma.JobRoleUpdateManyMutationInput,
    Prisma.JobRoleUncheckedUpdateManyInput
  >
  /**
   * Filter which JobRoles to update
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * Limit how many JobRoles to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * JobRole upsert
 */
export type JobRoleUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * The filter to search for the JobRole to update in case it exists.
   */
  where: Prisma.JobRoleWhereUniqueInput
  /**
   * In case the JobRole found by the `where` argument doesn't exist, create a new JobRole with this data.
   */
  create: Prisma.XOR<
    Prisma.JobRoleCreateInput,
    Prisma.JobRoleUncheckedCreateInput
  >
  /**
   * In case the JobRole was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.JobRoleUpdateInput,
    Prisma.JobRoleUncheckedUpdateInput
  >
}

/**
 * JobRole delete
 */
export type JobRoleDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
  /**
   * Filter which JobRole to delete.
   */
  where: Prisma.JobRoleWhereUniqueInput
}

/**
 * JobRole deleteMany
 */
export type JobRoleDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which JobRoles to delete
   */
  where?: Prisma.JobRoleWhereInput
  /**
   * Limit how many JobRoles to delete.
   */
  limit?: number
}

/**
 * JobRole.people
 */
export type JobRole$peopleArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Person
   */
  select?: Prisma.PersonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Person
   */
  omit?: Prisma.PersonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PersonInclude<ExtArgs> | null
  where?: Prisma.PersonWhereInput
  orderBy?:
    | Prisma.PersonOrderByWithRelationInput
    | Prisma.PersonOrderByWithRelationInput[]
  cursor?: Prisma.PersonWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PersonScalarFieldEnum | Prisma.PersonScalarFieldEnum[]
}

/**
 * JobRole without action
 */
export type JobRoleDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the JobRole
   */
  select?: Prisma.JobRoleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the JobRole
   */
  omit?: Prisma.JobRoleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.JobRoleInclude<ExtArgs> | null
}
