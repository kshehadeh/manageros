/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `FileAttachment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums'
import type * as Prisma from '../internal/prismaNamespace'

/**
 * Model FileAttachment
 *
 */
export type FileAttachmentModel =
  runtime.Types.Result.DefaultSelection<Prisma.$FileAttachmentPayload>

export type AggregateFileAttachment = {
  _count: FileAttachmentCountAggregateOutputType | null
  _avg: FileAttachmentAvgAggregateOutputType | null
  _sum: FileAttachmentSumAggregateOutputType | null
  _min: FileAttachmentMinAggregateOutputType | null
  _max: FileAttachmentMaxAggregateOutputType | null
}

export type FileAttachmentAvgAggregateOutputType = {
  fileSize: number | null
}

export type FileAttachmentSumAggregateOutputType = {
  fileSize: number | null
}

export type FileAttachmentMinAggregateOutputType = {
  id: string | null
  noteId: string | null
  entityType: string | null
  entityId: string | null
  organizationId: string | null
  fileName: string | null
  originalName: string | null
  fileSize: number | null
  mimeType: string | null
  r2Key: string | null
  r2Url: string | null
  uploadedById: string | null
  createdAt: Date | null
}

export type FileAttachmentMaxAggregateOutputType = {
  id: string | null
  noteId: string | null
  entityType: string | null
  entityId: string | null
  organizationId: string | null
  fileName: string | null
  originalName: string | null
  fileSize: number | null
  mimeType: string | null
  r2Key: string | null
  r2Url: string | null
  uploadedById: string | null
  createdAt: Date | null
}

export type FileAttachmentCountAggregateOutputType = {
  id: number
  noteId: number
  entityType: number
  entityId: number
  organizationId: number
  fileName: number
  originalName: number
  fileSize: number
  mimeType: number
  r2Key: number
  r2Url: number
  uploadedById: number
  createdAt: number
  _all: number
}

export type FileAttachmentAvgAggregateInputType = {
  fileSize?: true
}

export type FileAttachmentSumAggregateInputType = {
  fileSize?: true
}

export type FileAttachmentMinAggregateInputType = {
  id?: true
  noteId?: true
  entityType?: true
  entityId?: true
  organizationId?: true
  fileName?: true
  originalName?: true
  fileSize?: true
  mimeType?: true
  r2Key?: true
  r2Url?: true
  uploadedById?: true
  createdAt?: true
}

export type FileAttachmentMaxAggregateInputType = {
  id?: true
  noteId?: true
  entityType?: true
  entityId?: true
  organizationId?: true
  fileName?: true
  originalName?: true
  fileSize?: true
  mimeType?: true
  r2Key?: true
  r2Url?: true
  uploadedById?: true
  createdAt?: true
}

export type FileAttachmentCountAggregateInputType = {
  id?: true
  noteId?: true
  entityType?: true
  entityId?: true
  organizationId?: true
  fileName?: true
  originalName?: true
  fileSize?: true
  mimeType?: true
  r2Key?: true
  r2Url?: true
  uploadedById?: true
  createdAt?: true
  _all?: true
}

export type FileAttachmentAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which FileAttachment to aggregate.
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FileAttachments to fetch.
   */
  orderBy?:
    | Prisma.FileAttachmentOrderByWithRelationInput
    | Prisma.FileAttachmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.FileAttachmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FileAttachments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FileAttachments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned FileAttachments
   **/
  _count?: true | FileAttachmentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: FileAttachmentAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: FileAttachmentSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: FileAttachmentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: FileAttachmentMaxAggregateInputType
}

export type GetFileAttachmentAggregateType<
  T extends FileAttachmentAggregateArgs,
> = {
  [P in keyof T & keyof AggregateFileAttachment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateFileAttachment[P]>
    : Prisma.GetScalarType<T[P], AggregateFileAttachment[P]>
}

export type FileAttachmentGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.FileAttachmentWhereInput
  orderBy?:
    | Prisma.FileAttachmentOrderByWithAggregationInput
    | Prisma.FileAttachmentOrderByWithAggregationInput[]
  by:
    | Prisma.FileAttachmentScalarFieldEnum[]
    | Prisma.FileAttachmentScalarFieldEnum
  having?: Prisma.FileAttachmentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: FileAttachmentCountAggregateInputType | true
  _avg?: FileAttachmentAvgAggregateInputType
  _sum?: FileAttachmentSumAggregateInputType
  _min?: FileAttachmentMinAggregateInputType
  _max?: FileAttachmentMaxAggregateInputType
}

export type FileAttachmentGroupByOutputType = {
  id: string
  noteId: string | null
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt: Date
  _count: FileAttachmentCountAggregateOutputType | null
  _avg: FileAttachmentAvgAggregateOutputType | null
  _sum: FileAttachmentSumAggregateOutputType | null
  _min: FileAttachmentMinAggregateOutputType | null
  _max: FileAttachmentMaxAggregateOutputType | null
}

type GetFileAttachmentGroupByPayload<T extends FileAttachmentGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<FileAttachmentGroupByOutputType, T['by']> & {
        [P in keyof T &
          keyof FileAttachmentGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], FileAttachmentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], FileAttachmentGroupByOutputType[P]>
      }
    >
  >

export type FileAttachmentWhereInput = {
  AND?: Prisma.FileAttachmentWhereInput | Prisma.FileAttachmentWhereInput[]
  OR?: Prisma.FileAttachmentWhereInput[]
  NOT?: Prisma.FileAttachmentWhereInput | Prisma.FileAttachmentWhereInput[]
  id?: Prisma.StringFilter<'FileAttachment'> | string
  noteId?: Prisma.StringNullableFilter<'FileAttachment'> | string | null
  entityType?: Prisma.StringFilter<'FileAttachment'> | string
  entityId?: Prisma.StringFilter<'FileAttachment'> | string
  organizationId?: Prisma.StringFilter<'FileAttachment'> | string
  fileName?: Prisma.StringFilter<'FileAttachment'> | string
  originalName?: Prisma.StringFilter<'FileAttachment'> | string
  fileSize?: Prisma.IntFilter<'FileAttachment'> | number
  mimeType?: Prisma.StringFilter<'FileAttachment'> | string
  r2Key?: Prisma.StringFilter<'FileAttachment'> | string
  r2Url?: Prisma.StringFilter<'FileAttachment'> | string
  uploadedById?: Prisma.StringFilter<'FileAttachment'> | string
  createdAt?: Prisma.DateTimeFilter<'FileAttachment'> | Date | string
  note?: Prisma.XOR<
    Prisma.NoteNullableScalarRelationFilter,
    Prisma.NoteWhereInput
  > | null
  organization?: Prisma.XOR<
    Prisma.OrganizationScalarRelationFilter,
    Prisma.OrganizationWhereInput
  >
  uploadedBy?: Prisma.XOR<
    Prisma.UserScalarRelationFilter,
    Prisma.UserWhereInput
  >
}

export type FileAttachmentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrderInput | Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  originalName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  mimeType?: Prisma.SortOrder
  r2Key?: Prisma.SortOrder
  r2Url?: Prisma.SortOrder
  uploadedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  note?: Prisma.NoteOrderByWithRelationInput
  organization?: Prisma.OrganizationOrderByWithRelationInput
  uploadedBy?: Prisma.UserOrderByWithRelationInput
}

export type FileAttachmentWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string
    AND?: Prisma.FileAttachmentWhereInput | Prisma.FileAttachmentWhereInput[]
    OR?: Prisma.FileAttachmentWhereInput[]
    NOT?: Prisma.FileAttachmentWhereInput | Prisma.FileAttachmentWhereInput[]
    noteId?: Prisma.StringNullableFilter<'FileAttachment'> | string | null
    entityType?: Prisma.StringFilter<'FileAttachment'> | string
    entityId?: Prisma.StringFilter<'FileAttachment'> | string
    organizationId?: Prisma.StringFilter<'FileAttachment'> | string
    fileName?: Prisma.StringFilter<'FileAttachment'> | string
    originalName?: Prisma.StringFilter<'FileAttachment'> | string
    fileSize?: Prisma.IntFilter<'FileAttachment'> | number
    mimeType?: Prisma.StringFilter<'FileAttachment'> | string
    r2Key?: Prisma.StringFilter<'FileAttachment'> | string
    r2Url?: Prisma.StringFilter<'FileAttachment'> | string
    uploadedById?: Prisma.StringFilter<'FileAttachment'> | string
    createdAt?: Prisma.DateTimeFilter<'FileAttachment'> | Date | string
    note?: Prisma.XOR<
      Prisma.NoteNullableScalarRelationFilter,
      Prisma.NoteWhereInput
    > | null
    organization?: Prisma.XOR<
      Prisma.OrganizationScalarRelationFilter,
      Prisma.OrganizationWhereInput
    >
    uploadedBy?: Prisma.XOR<
      Prisma.UserScalarRelationFilter,
      Prisma.UserWhereInput
    >
  },
  'id'
>

export type FileAttachmentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrderInput | Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  originalName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  mimeType?: Prisma.SortOrder
  r2Key?: Prisma.SortOrder
  r2Url?: Prisma.SortOrder
  uploadedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.FileAttachmentCountOrderByAggregateInput
  _avg?: Prisma.FileAttachmentAvgOrderByAggregateInput
  _max?: Prisma.FileAttachmentMaxOrderByAggregateInput
  _min?: Prisma.FileAttachmentMinOrderByAggregateInput
  _sum?: Prisma.FileAttachmentSumOrderByAggregateInput
}

export type FileAttachmentScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.FileAttachmentScalarWhereWithAggregatesInput
    | Prisma.FileAttachmentScalarWhereWithAggregatesInput[]
  OR?: Prisma.FileAttachmentScalarWhereWithAggregatesInput[]
  NOT?:
    | Prisma.FileAttachmentScalarWhereWithAggregatesInput
    | Prisma.FileAttachmentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  noteId?:
    | Prisma.StringNullableWithAggregatesFilter<'FileAttachment'>
    | string
    | null
  entityType?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  entityId?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  organizationId?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  fileName?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  originalName?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  fileSize?: Prisma.IntWithAggregatesFilter<'FileAttachment'> | number
  mimeType?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  r2Key?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  r2Url?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  uploadedById?: Prisma.StringWithAggregatesFilter<'FileAttachment'> | string
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<'FileAttachment'>
    | Date
    | string
}

export type FileAttachmentCreateInput = {
  id?: string
  entityType: string
  entityId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  createdAt?: Date | string
  note?: Prisma.NoteCreateNestedOneWithoutAttachmentsInput
  organization: Prisma.OrganizationCreateNestedOneWithoutFileAttachmentsInput
  uploadedBy: Prisma.UserCreateNestedOneWithoutFileAttachmentsInput
}

export type FileAttachmentUncheckedCreateInput = {
  id?: string
  noteId?: string | null
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt?: Date | string
}

export type FileAttachmentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NoteUpdateOneWithoutAttachmentsNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutFileAttachmentsNestedInput
  uploadedBy?: Prisma.UserUpdateOneRequiredWithoutFileAttachmentsNestedInput
}

export type FileAttachmentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  noteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  uploadedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentCreateManyInput = {
  id?: string
  noteId?: string | null
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt?: Date | string
}

export type FileAttachmentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  noteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  uploadedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentListRelationFilter = {
  every?: Prisma.FileAttachmentWhereInput
  some?: Prisma.FileAttachmentWhereInput
  none?: Prisma.FileAttachmentWhereInput
}

export type FileAttachmentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type FileAttachmentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  originalName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  mimeType?: Prisma.SortOrder
  r2Key?: Prisma.SortOrder
  r2Url?: Prisma.SortOrder
  uploadedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type FileAttachmentAvgOrderByAggregateInput = {
  fileSize?: Prisma.SortOrder
}

export type FileAttachmentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  originalName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  mimeType?: Prisma.SortOrder
  r2Key?: Prisma.SortOrder
  r2Url?: Prisma.SortOrder
  uploadedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type FileAttachmentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  noteId?: Prisma.SortOrder
  entityType?: Prisma.SortOrder
  entityId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  fileName?: Prisma.SortOrder
  originalName?: Prisma.SortOrder
  fileSize?: Prisma.SortOrder
  mimeType?: Prisma.SortOrder
  r2Key?: Prisma.SortOrder
  r2Url?: Prisma.SortOrder
  uploadedById?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type FileAttachmentSumOrderByAggregateInput = {
  fileSize?: Prisma.SortOrder
}

export type FileAttachmentCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutOrganizationInput,
        Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.FileAttachmentCreateWithoutOrganizationInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.FileAttachmentCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
}

export type FileAttachmentUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutOrganizationInput,
        Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.FileAttachmentCreateWithoutOrganizationInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.FileAttachmentCreateManyOrganizationInputEnvelope
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
}

export type FileAttachmentUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutOrganizationInput,
        Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.FileAttachmentCreateWithoutOrganizationInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.FileAttachmentCreateManyOrganizationInputEnvelope
  set?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  disconnect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  delete?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  update?:
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
}

export type FileAttachmentUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutOrganizationInput,
        Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.FileAttachmentCreateWithoutOrganizationInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput
    | Prisma.FileAttachmentCreateOrConnectWithoutOrganizationInput[]
  upsert?:
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.FileAttachmentCreateManyOrganizationInputEnvelope
  set?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  disconnect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  delete?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  update?:
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?:
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
}

export type FileAttachmentCreateNestedManyWithoutUploadedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutUploadedByInput,
        Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput
      >
    | Prisma.FileAttachmentCreateWithoutUploadedByInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput[]
  createMany?: Prisma.FileAttachmentCreateManyUploadedByInputEnvelope
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
}

export type FileAttachmentUncheckedCreateNestedManyWithoutUploadedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutUploadedByInput,
        Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput
      >
    | Prisma.FileAttachmentCreateWithoutUploadedByInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput[]
  createMany?: Prisma.FileAttachmentCreateManyUploadedByInputEnvelope
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
}

export type FileAttachmentUpdateManyWithoutUploadedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutUploadedByInput,
        Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput
      >
    | Prisma.FileAttachmentCreateWithoutUploadedByInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput[]
  upsert?:
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutUploadedByInput
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutUploadedByInput[]
  createMany?: Prisma.FileAttachmentCreateManyUploadedByInputEnvelope
  set?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  disconnect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  delete?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  update?:
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutUploadedByInput
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutUploadedByInput[]
  updateMany?:
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutUploadedByInput
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutUploadedByInput[]
  deleteMany?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
}

export type FileAttachmentUncheckedUpdateManyWithoutUploadedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutUploadedByInput,
        Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput
      >
    | Prisma.FileAttachmentCreateWithoutUploadedByInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput
    | Prisma.FileAttachmentCreateOrConnectWithoutUploadedByInput[]
  upsert?:
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutUploadedByInput
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutUploadedByInput[]
  createMany?: Prisma.FileAttachmentCreateManyUploadedByInputEnvelope
  set?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  disconnect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  delete?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  update?:
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutUploadedByInput
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutUploadedByInput[]
  updateMany?:
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutUploadedByInput
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutUploadedByInput[]
  deleteMany?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
}

export type FileAttachmentCreateNestedManyWithoutNoteInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutNoteInput,
        Prisma.FileAttachmentUncheckedCreateWithoutNoteInput
      >
    | Prisma.FileAttachmentCreateWithoutNoteInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutNoteInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput[]
  createMany?: Prisma.FileAttachmentCreateManyNoteInputEnvelope
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
}

export type FileAttachmentUncheckedCreateNestedManyWithoutNoteInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutNoteInput,
        Prisma.FileAttachmentUncheckedCreateWithoutNoteInput
      >
    | Prisma.FileAttachmentCreateWithoutNoteInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutNoteInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput[]
  createMany?: Prisma.FileAttachmentCreateManyNoteInputEnvelope
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
}

export type FileAttachmentUpdateManyWithoutNoteNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutNoteInput,
        Prisma.FileAttachmentUncheckedCreateWithoutNoteInput
      >
    | Prisma.FileAttachmentCreateWithoutNoteInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutNoteInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput[]
  upsert?:
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutNoteInput
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutNoteInput[]
  createMany?: Prisma.FileAttachmentCreateManyNoteInputEnvelope
  set?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  disconnect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  delete?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  update?:
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutNoteInput
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutNoteInput[]
  updateMany?:
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutNoteInput
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutNoteInput[]
  deleteMany?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
}

export type FileAttachmentUncheckedUpdateManyWithoutNoteNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.FileAttachmentCreateWithoutNoteInput,
        Prisma.FileAttachmentUncheckedCreateWithoutNoteInput
      >
    | Prisma.FileAttachmentCreateWithoutNoteInput[]
    | Prisma.FileAttachmentUncheckedCreateWithoutNoteInput[]
  connectOrCreate?:
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput
    | Prisma.FileAttachmentCreateOrConnectWithoutNoteInput[]
  upsert?:
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutNoteInput
    | Prisma.FileAttachmentUpsertWithWhereUniqueWithoutNoteInput[]
  createMany?: Prisma.FileAttachmentCreateManyNoteInputEnvelope
  set?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  disconnect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  delete?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  connect?:
    | Prisma.FileAttachmentWhereUniqueInput
    | Prisma.FileAttachmentWhereUniqueInput[]
  update?:
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutNoteInput
    | Prisma.FileAttachmentUpdateWithWhereUniqueWithoutNoteInput[]
  updateMany?:
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutNoteInput
    | Prisma.FileAttachmentUpdateManyWithWhereWithoutNoteInput[]
  deleteMany?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
}

export type FileAttachmentCreateWithoutOrganizationInput = {
  id?: string
  entityType: string
  entityId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  createdAt?: Date | string
  note?: Prisma.NoteCreateNestedOneWithoutAttachmentsInput
  uploadedBy: Prisma.UserCreateNestedOneWithoutFileAttachmentsInput
}

export type FileAttachmentUncheckedCreateWithoutOrganizationInput = {
  id?: string
  noteId?: string | null
  entityType: string
  entityId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt?: Date | string
}

export type FileAttachmentCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateWithoutOrganizationInput,
    Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput
  >
}

export type FileAttachmentCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.FileAttachmentCreateManyOrganizationInput
    | Prisma.FileAttachmentCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type FileAttachmentUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  update: Prisma.XOR<
    Prisma.FileAttachmentUpdateWithoutOrganizationInput,
    Prisma.FileAttachmentUncheckedUpdateWithoutOrganizationInput
  >
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateWithoutOrganizationInput,
    Prisma.FileAttachmentUncheckedCreateWithoutOrganizationInput
  >
}

export type FileAttachmentUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateWithoutOrganizationInput,
    Prisma.FileAttachmentUncheckedUpdateWithoutOrganizationInput
  >
}

export type FileAttachmentUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.FileAttachmentScalarWhereInput
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateManyMutationInput,
    Prisma.FileAttachmentUncheckedUpdateManyWithoutOrganizationInput
  >
}

export type FileAttachmentScalarWhereInput = {
  AND?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
  OR?: Prisma.FileAttachmentScalarWhereInput[]
  NOT?:
    | Prisma.FileAttachmentScalarWhereInput
    | Prisma.FileAttachmentScalarWhereInput[]
  id?: Prisma.StringFilter<'FileAttachment'> | string
  noteId?: Prisma.StringNullableFilter<'FileAttachment'> | string | null
  entityType?: Prisma.StringFilter<'FileAttachment'> | string
  entityId?: Prisma.StringFilter<'FileAttachment'> | string
  organizationId?: Prisma.StringFilter<'FileAttachment'> | string
  fileName?: Prisma.StringFilter<'FileAttachment'> | string
  originalName?: Prisma.StringFilter<'FileAttachment'> | string
  fileSize?: Prisma.IntFilter<'FileAttachment'> | number
  mimeType?: Prisma.StringFilter<'FileAttachment'> | string
  r2Key?: Prisma.StringFilter<'FileAttachment'> | string
  r2Url?: Prisma.StringFilter<'FileAttachment'> | string
  uploadedById?: Prisma.StringFilter<'FileAttachment'> | string
  createdAt?: Prisma.DateTimeFilter<'FileAttachment'> | Date | string
}

export type FileAttachmentCreateWithoutUploadedByInput = {
  id?: string
  entityType: string
  entityId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  createdAt?: Date | string
  note?: Prisma.NoteCreateNestedOneWithoutAttachmentsInput
  organization: Prisma.OrganizationCreateNestedOneWithoutFileAttachmentsInput
}

export type FileAttachmentUncheckedCreateWithoutUploadedByInput = {
  id?: string
  noteId?: string | null
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  createdAt?: Date | string
}

export type FileAttachmentCreateOrConnectWithoutUploadedByInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateWithoutUploadedByInput,
    Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput
  >
}

export type FileAttachmentCreateManyUploadedByInputEnvelope = {
  data:
    | Prisma.FileAttachmentCreateManyUploadedByInput
    | Prisma.FileAttachmentCreateManyUploadedByInput[]
  skipDuplicates?: boolean
}

export type FileAttachmentUpsertWithWhereUniqueWithoutUploadedByInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  update: Prisma.XOR<
    Prisma.FileAttachmentUpdateWithoutUploadedByInput,
    Prisma.FileAttachmentUncheckedUpdateWithoutUploadedByInput
  >
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateWithoutUploadedByInput,
    Prisma.FileAttachmentUncheckedCreateWithoutUploadedByInput
  >
}

export type FileAttachmentUpdateWithWhereUniqueWithoutUploadedByInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateWithoutUploadedByInput,
    Prisma.FileAttachmentUncheckedUpdateWithoutUploadedByInput
  >
}

export type FileAttachmentUpdateManyWithWhereWithoutUploadedByInput = {
  where: Prisma.FileAttachmentScalarWhereInput
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateManyMutationInput,
    Prisma.FileAttachmentUncheckedUpdateManyWithoutUploadedByInput
  >
}

export type FileAttachmentCreateWithoutNoteInput = {
  id?: string
  entityType: string
  entityId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  createdAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutFileAttachmentsInput
  uploadedBy: Prisma.UserCreateNestedOneWithoutFileAttachmentsInput
}

export type FileAttachmentUncheckedCreateWithoutNoteInput = {
  id?: string
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt?: Date | string
}

export type FileAttachmentCreateOrConnectWithoutNoteInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateWithoutNoteInput,
    Prisma.FileAttachmentUncheckedCreateWithoutNoteInput
  >
}

export type FileAttachmentCreateManyNoteInputEnvelope = {
  data:
    | Prisma.FileAttachmentCreateManyNoteInput
    | Prisma.FileAttachmentCreateManyNoteInput[]
  skipDuplicates?: boolean
}

export type FileAttachmentUpsertWithWhereUniqueWithoutNoteInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  update: Prisma.XOR<
    Prisma.FileAttachmentUpdateWithoutNoteInput,
    Prisma.FileAttachmentUncheckedUpdateWithoutNoteInput
  >
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateWithoutNoteInput,
    Prisma.FileAttachmentUncheckedCreateWithoutNoteInput
  >
}

export type FileAttachmentUpdateWithWhereUniqueWithoutNoteInput = {
  where: Prisma.FileAttachmentWhereUniqueInput
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateWithoutNoteInput,
    Prisma.FileAttachmentUncheckedUpdateWithoutNoteInput
  >
}

export type FileAttachmentUpdateManyWithWhereWithoutNoteInput = {
  where: Prisma.FileAttachmentScalarWhereInput
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateManyMutationInput,
    Prisma.FileAttachmentUncheckedUpdateManyWithoutNoteInput
  >
}

export type FileAttachmentCreateManyOrganizationInput = {
  id?: string
  noteId?: string | null
  entityType: string
  entityId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt?: Date | string
}

export type FileAttachmentUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NoteUpdateOneWithoutAttachmentsNestedInput
  uploadedBy?: Prisma.UserUpdateOneRequiredWithoutFileAttachmentsNestedInput
}

export type FileAttachmentUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  noteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  uploadedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  noteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  uploadedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentCreateManyUploadedByInput = {
  id?: string
  noteId?: string | null
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  createdAt?: Date | string
}

export type FileAttachmentUpdateWithoutUploadedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  note?: Prisma.NoteUpdateOneWithoutAttachmentsNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutFileAttachmentsNestedInput
}

export type FileAttachmentUncheckedUpdateWithoutUploadedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  noteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentUncheckedUpdateManyWithoutUploadedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  noteId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentCreateManyNoteInput = {
  id?: string
  entityType: string
  entityId: string
  organizationId: string
  fileName: string
  originalName: string
  fileSize: number
  mimeType: string
  r2Key: string
  r2Url: string
  uploadedById: string
  createdAt?: Date | string
}

export type FileAttachmentUpdateWithoutNoteInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutFileAttachmentsNestedInput
  uploadedBy?: Prisma.UserUpdateOneRequiredWithoutFileAttachmentsNestedInput
}

export type FileAttachmentUncheckedUpdateWithoutNoteInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  uploadedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentUncheckedUpdateManyWithoutNoteInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  entityType?: Prisma.StringFieldUpdateOperationsInput | string
  entityId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  fileName?: Prisma.StringFieldUpdateOperationsInput | string
  originalName?: Prisma.StringFieldUpdateOperationsInput | string
  fileSize?: Prisma.IntFieldUpdateOperationsInput | number
  mimeType?: Prisma.StringFieldUpdateOperationsInput | string
  r2Key?: Prisma.StringFieldUpdateOperationsInput | string
  r2Url?: Prisma.StringFieldUpdateOperationsInput | string
  uploadedById?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type FileAttachmentSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    noteId?: boolean
    entityType?: boolean
    entityId?: boolean
    organizationId?: boolean
    fileName?: boolean
    originalName?: boolean
    fileSize?: boolean
    mimeType?: boolean
    r2Key?: boolean
    r2Url?: boolean
    uploadedById?: boolean
    createdAt?: boolean
    note?: boolean | Prisma.FileAttachment$noteArgs<ExtArgs>
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    uploadedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['fileAttachment']
>

export type FileAttachmentSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    noteId?: boolean
    entityType?: boolean
    entityId?: boolean
    organizationId?: boolean
    fileName?: boolean
    originalName?: boolean
    fileSize?: boolean
    mimeType?: boolean
    r2Key?: boolean
    r2Url?: boolean
    uploadedById?: boolean
    createdAt?: boolean
    note?: boolean | Prisma.FileAttachment$noteArgs<ExtArgs>
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    uploadedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['fileAttachment']
>

export type FileAttachmentSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean
    noteId?: boolean
    entityType?: boolean
    entityId?: boolean
    organizationId?: boolean
    fileName?: boolean
    originalName?: boolean
    fileSize?: boolean
    mimeType?: boolean
    r2Key?: boolean
    r2Url?: boolean
    uploadedById?: boolean
    createdAt?: boolean
    note?: boolean | Prisma.FileAttachment$noteArgs<ExtArgs>
    organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
    uploadedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  },
  ExtArgs['result']['fileAttachment']
>

export type FileAttachmentSelectScalar = {
  id?: boolean
  noteId?: boolean
  entityType?: boolean
  entityId?: boolean
  organizationId?: boolean
  fileName?: boolean
  originalName?: boolean
  fileSize?: boolean
  mimeType?: boolean
  r2Key?: boolean
  r2Url?: boolean
  uploadedById?: boolean
  createdAt?: boolean
}

export type FileAttachmentOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'noteId'
  | 'entityType'
  | 'entityId'
  | 'organizationId'
  | 'fileName'
  | 'originalName'
  | 'fileSize'
  | 'mimeType'
  | 'r2Key'
  | 'r2Url'
  | 'uploadedById'
  | 'createdAt',
  ExtArgs['result']['fileAttachment']
>
export type FileAttachmentInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  note?: boolean | Prisma.FileAttachment$noteArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  uploadedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type FileAttachmentIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  note?: boolean | Prisma.FileAttachment$noteArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  uploadedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type FileAttachmentIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  note?: boolean | Prisma.FileAttachment$noteArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  uploadedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $FileAttachmentPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'FileAttachment'
  objects: {
    note: Prisma.$NotePayload<ExtArgs> | null
    organization: Prisma.$OrganizationPayload<ExtArgs>
    uploadedBy: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string
      noteId: string | null
      entityType: string
      entityId: string
      organizationId: string
      fileName: string
      originalName: string
      fileSize: number
      mimeType: string
      r2Key: string
      r2Url: string
      uploadedById: string
      createdAt: Date
    },
    ExtArgs['result']['fileAttachment']
  >
  composites: {}
}

export type FileAttachmentGetPayload<
  S extends boolean | null | undefined | FileAttachmentDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$FileAttachmentPayload, S>

export type FileAttachmentCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  FileAttachmentFindManyArgs,
  'select' | 'include' | 'distinct' | 'omit'
> & {
  select?: FileAttachmentCountAggregateInputType | true
}

export interface FileAttachmentDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['FileAttachment']
    meta: { name: 'FileAttachment' }
  }
  /**
   * Find zero or one FileAttachment that matches the filter.
   * @param {FileAttachmentFindUniqueArgs} args - Arguments to find a FileAttachment
   * @example
   * // Get one FileAttachment
   * const fileAttachment = await prisma.fileAttachment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends FileAttachmentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find one FileAttachment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {FileAttachmentFindUniqueOrThrowArgs} args - Arguments to find a FileAttachment
   * @example
   * // Get one FileAttachment
   * const fileAttachment = await prisma.fileAttachment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends FileAttachmentFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first FileAttachment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentFindFirstArgs} args - Arguments to find a FileAttachment
   * @example
   * // Get one FileAttachment
   * const fileAttachment = await prisma.fileAttachment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends FileAttachmentFindFirstArgs>(
    args?: Prisma.SelectSubset<T, FileAttachmentFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find the first FileAttachment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentFindFirstOrThrowArgs} args - Arguments to find a FileAttachment
   * @example
   * // Get one FileAttachment
   * const fileAttachment = await prisma.fileAttachment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends FileAttachmentFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, FileAttachmentFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Find zero or more FileAttachments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all FileAttachments
   * const fileAttachments = await prisma.fileAttachment.findMany()
   *
   * // Get first 10 FileAttachments
   * const fileAttachments = await prisma.fileAttachment.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const fileAttachmentWithIdOnly = await prisma.fileAttachment.findMany({ select: { id: true } })
   *
   */
  findMany<T extends FileAttachmentFindManyArgs>(
    args?: Prisma.SelectSubset<T, FileAttachmentFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >

  /**
   * Create a FileAttachment.
   * @param {FileAttachmentCreateArgs} args - Arguments to create a FileAttachment.
   * @example
   * // Create one FileAttachment
   * const FileAttachment = await prisma.fileAttachment.create({
   *   data: {
   *     // ... data to create a FileAttachment
   *   }
   * })
   *
   */
  create<T extends FileAttachmentCreateArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentCreateArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Create many FileAttachments.
   * @param {FileAttachmentCreateManyArgs} args - Arguments to create many FileAttachments.
   * @example
   * // Create many FileAttachments
   * const fileAttachment = await prisma.fileAttachment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends FileAttachmentCreateManyArgs>(
    args?: Prisma.SelectSubset<T, FileAttachmentCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many FileAttachments and returns the data saved in the database.
   * @param {FileAttachmentCreateManyAndReturnArgs} args - Arguments to create many FileAttachments.
   * @example
   * // Create many FileAttachments
   * const fileAttachment = await prisma.fileAttachment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many FileAttachments and only return the `id`
   * const fileAttachmentWithIdOnly = await prisma.fileAttachment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends FileAttachmentCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      FileAttachmentCreateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Delete a FileAttachment.
   * @param {FileAttachmentDeleteArgs} args - Arguments to delete one FileAttachment.
   * @example
   * // Delete one FileAttachment
   * const FileAttachment = await prisma.fileAttachment.delete({
   *   where: {
   *     // ... filter to delete one FileAttachment
   *   }
   * })
   *
   */
  delete<T extends FileAttachmentDeleteArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Update one FileAttachment.
   * @param {FileAttachmentUpdateArgs} args - Arguments to update one FileAttachment.
   * @example
   * // Update one FileAttachment
   * const fileAttachment = await prisma.fileAttachment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends FileAttachmentUpdateArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Delete zero or more FileAttachments.
   * @param {FileAttachmentDeleteManyArgs} args - Arguments to filter FileAttachments to delete.
   * @example
   * // Delete a few FileAttachments
   * const { count } = await prisma.fileAttachment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends FileAttachmentDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, FileAttachmentDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more FileAttachments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many FileAttachments
   * const fileAttachment = await prisma.fileAttachment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends FileAttachmentUpdateManyArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more FileAttachments and returns the data updated in the database.
   * @param {FileAttachmentUpdateManyAndReturnArgs} args - Arguments to update many FileAttachments.
   * @example
   * // Update many FileAttachments
   * const fileAttachment = await prisma.fileAttachment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more FileAttachments and only return the `id`
   * const fileAttachmentWithIdOnly = await prisma.fileAttachment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends FileAttachmentUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >

  /**
   * Create or update one FileAttachment.
   * @param {FileAttachmentUpsertArgs} args - Arguments to update or create a FileAttachment.
   * @example
   * // Update or create a FileAttachment
   * const fileAttachment = await prisma.fileAttachment.upsert({
   *   create: {
   *     // ... data to create a FileAttachment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the FileAttachment we want to update
   *   }
   * })
   */
  upsert<T extends FileAttachmentUpsertArgs>(
    args: Prisma.SelectSubset<T, FileAttachmentUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__FileAttachmentClient<
    runtime.Types.Result.GetResult<
      Prisma.$FileAttachmentPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >

  /**
   * Count the number of FileAttachments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentCountArgs} args - Arguments to filter FileAttachments to count.
   * @example
   * // Count the number of FileAttachments
   * const count = await prisma.fileAttachment.count({
   *   where: {
   *     // ... the filter for the FileAttachments we want to count
   *   }
   * })
   **/
  count<T extends FileAttachmentCountArgs>(
    args?: Prisma.Subset<T, FileAttachmentCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<
            T['select'],
            FileAttachmentCountAggregateOutputType
          >
      : number
  >

  /**
   * Allows you to perform aggregations operations on a FileAttachment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends FileAttachmentAggregateArgs>(
    args: Prisma.Subset<T, FileAttachmentAggregateArgs>
  ): Prisma.PrismaPromise<GetFileAttachmentAggregateType<T>>

  /**
   * Group by FileAttachment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {FileAttachmentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends FileAttachmentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: FileAttachmentGroupByArgs['orderBy'] }
      : { orderBy?: FileAttachmentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ]
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, FileAttachmentGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetFileAttachmentGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FileAttachment model
   */
  readonly fields: FileAttachmentFieldRefs
}

/**
 * The delegate class that acts as a "Promise-like" for FileAttachment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__FileAttachmentClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise'
  note<T extends Prisma.FileAttachment$noteArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.FileAttachment$noteArgs<ExtArgs>>
  ): Prisma.Prisma__NoteClient<
    runtime.Types.Result.GetResult<
      Prisma.$NotePayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationClient<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  uploadedBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the FileAttachment model
 */
export interface FileAttachmentFieldRefs {
  readonly id: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly noteId: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly entityType: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly entityId: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly organizationId: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly fileName: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly originalName: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly fileSize: Prisma.FieldRef<'FileAttachment', 'Int'>
  readonly mimeType: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly r2Key: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly r2Url: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly uploadedById: Prisma.FieldRef<'FileAttachment', 'String'>
  readonly createdAt: Prisma.FieldRef<'FileAttachment', 'DateTime'>
}

// Custom InputTypes
/**
 * FileAttachment findUnique
 */
export type FileAttachmentFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * Filter, which FileAttachment to fetch.
   */
  where: Prisma.FileAttachmentWhereUniqueInput
}

/**
 * FileAttachment findUniqueOrThrow
 */
export type FileAttachmentFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * Filter, which FileAttachment to fetch.
   */
  where: Prisma.FileAttachmentWhereUniqueInput
}

/**
 * FileAttachment findFirst
 */
export type FileAttachmentFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * Filter, which FileAttachment to fetch.
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FileAttachments to fetch.
   */
  orderBy?:
    | Prisma.FileAttachmentOrderByWithRelationInput
    | Prisma.FileAttachmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for FileAttachments.
   */
  cursor?: Prisma.FileAttachmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FileAttachments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FileAttachments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of FileAttachments.
   */
  distinct?:
    | Prisma.FileAttachmentScalarFieldEnum
    | Prisma.FileAttachmentScalarFieldEnum[]
}

/**
 * FileAttachment findFirstOrThrow
 */
export type FileAttachmentFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * Filter, which FileAttachment to fetch.
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FileAttachments to fetch.
   */
  orderBy?:
    | Prisma.FileAttachmentOrderByWithRelationInput
    | Prisma.FileAttachmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for FileAttachments.
   */
  cursor?: Prisma.FileAttachmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FileAttachments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FileAttachments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of FileAttachments.
   */
  distinct?:
    | Prisma.FileAttachmentScalarFieldEnum
    | Prisma.FileAttachmentScalarFieldEnum[]
}

/**
 * FileAttachment findMany
 */
export type FileAttachmentFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * Filter, which FileAttachments to fetch.
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of FileAttachments to fetch.
   */
  orderBy?:
    | Prisma.FileAttachmentOrderByWithRelationInput
    | Prisma.FileAttachmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing FileAttachments.
   */
  cursor?: Prisma.FileAttachmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` FileAttachments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` FileAttachments.
   */
  skip?: number
  distinct?:
    | Prisma.FileAttachmentScalarFieldEnum
    | Prisma.FileAttachmentScalarFieldEnum[]
}

/**
 * FileAttachment create
 */
export type FileAttachmentCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * The data needed to create a FileAttachment.
   */
  data: Prisma.XOR<
    Prisma.FileAttachmentCreateInput,
    Prisma.FileAttachmentUncheckedCreateInput
  >
}

/**
 * FileAttachment createMany
 */
export type FileAttachmentCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many FileAttachments.
   */
  data:
    | Prisma.FileAttachmentCreateManyInput
    | Prisma.FileAttachmentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * FileAttachment createManyAndReturn
 */
export type FileAttachmentCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * The data used to create many FileAttachments.
   */
  data:
    | Prisma.FileAttachmentCreateManyInput
    | Prisma.FileAttachmentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * FileAttachment update
 */
export type FileAttachmentUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * The data needed to update a FileAttachment.
   */
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateInput,
    Prisma.FileAttachmentUncheckedUpdateInput
  >
  /**
   * Choose, which FileAttachment to update.
   */
  where: Prisma.FileAttachmentWhereUniqueInput
}

/**
 * FileAttachment updateMany
 */
export type FileAttachmentUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update FileAttachments.
   */
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateManyMutationInput,
    Prisma.FileAttachmentUncheckedUpdateManyInput
  >
  /**
   * Filter which FileAttachments to update
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * Limit how many FileAttachments to update.
   */
  limit?: number
}

/**
 * FileAttachment updateManyAndReturn
 */
export type FileAttachmentUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * The data used to update FileAttachments.
   */
  data: Prisma.XOR<
    Prisma.FileAttachmentUpdateManyMutationInput,
    Prisma.FileAttachmentUncheckedUpdateManyInput
  >
  /**
   * Filter which FileAttachments to update
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * Limit how many FileAttachments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * FileAttachment upsert
 */
export type FileAttachmentUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * The filter to search for the FileAttachment to update in case it exists.
   */
  where: Prisma.FileAttachmentWhereUniqueInput
  /**
   * In case the FileAttachment found by the `where` argument doesn't exist, create a new FileAttachment with this data.
   */
  create: Prisma.XOR<
    Prisma.FileAttachmentCreateInput,
    Prisma.FileAttachmentUncheckedCreateInput
  >
  /**
   * In case the FileAttachment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.FileAttachmentUpdateInput,
    Prisma.FileAttachmentUncheckedUpdateInput
  >
}

/**
 * FileAttachment delete
 */
export type FileAttachmentDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
  /**
   * Filter which FileAttachment to delete.
   */
  where: Prisma.FileAttachmentWhereUniqueInput
}

/**
 * FileAttachment deleteMany
 */
export type FileAttachmentDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which FileAttachments to delete
   */
  where?: Prisma.FileAttachmentWhereInput
  /**
   * Limit how many FileAttachments to delete.
   */
  limit?: number
}

/**
 * FileAttachment.note
 */
export type FileAttachment$noteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Note
   */
  select?: Prisma.NoteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Note
   */
  omit?: Prisma.NoteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NoteInclude<ExtArgs> | null
  where?: Prisma.NoteWhereInput
}

/**
 * FileAttachment without action
 */
export type FileAttachmentDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the FileAttachment
   */
  select?: Prisma.FileAttachmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FileAttachment
   */
  omit?: Prisma.FileAttachmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileAttachmentInclude<ExtArgs> | null
}
